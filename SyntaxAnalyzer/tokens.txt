Token(T_Comment, '// === Comprehensive Trust Tokenization Test ===
', None, line=1, col=1)
Token(T_Whitespace, '
', None, line=2, col=1)
Token(T_Comment, '// Single-line comments and operators
', None, line=3, col=1)
Token(T_Let, 'let', None, line=4, col=1)
Token(T_Whitespace, ' ', None, line=4, col=4)
Token(T_Id, 'alpha', None, line=4, col=5)
Token(T_Colon, ':', None, line=4, col=10)
Token(T_Whitespace, ' ', None, line=4, col=11)
Token(T_Bool, 'bool', None, line=4, col=12)
Token(T_Whitespace, ' ', None, line=4, col=16)
Token(T_Assign, '=', None, line=4, col=17)
Token(T_Whitespace, ' ', None, line=4, col=18)
Token(T_True, 'true', None, line=4, col=19)
Token(T_Semicolon, ';', None, line=4, col=23)
Token(T_Whitespace, '
', None, line=4, col=24)
Token(T_Let, 'let', None, line=5, col=1)
Token(T_Whitespace, ' ', None, line=5, col=4)
Token(T_Mut, 'mut', None, line=5, col=5)
Token(T_Whitespace, ' ', None, line=5, col=8)
Token(T_Id, 'beta', None, line=5, col=9)
Token(T_Whitespace, ' ', None, line=5, col=13)
Token(T_Assign, '=', None, line=5, col=14)
Token(T_Whitespace, ' ', None, line=5, col=15)
Token(T_False, 'false', None, line=5, col=16)
Token(T_Semicolon, ';', None, line=5, col=21)
Token(T_Whitespace, '
', None, line=5, col=22)
Token(T_Let, 'let', None, line=6, col=1)
Token(T_Whitespace, ' ', None, line=6, col=4)
Token(T_Id, 'gamma', None, line=6, col=5)
Token(T_Colon, ':', None, line=6, col=10)
Token(T_Whitespace, ' ', None, line=6, col=11)
Token(T_Int, 'i32', None, line=6, col=12)
Token(T_Semicolon, ';', None, line=6, col=15)
Token(T_Whitespace, '
', None, line=6, col=16)
Token(T_Id, 'gamma', None, line=7, col=1)
Token(T_Whitespace, ' ', None, line=7, col=6)
Token(T_Assign, '=', None, line=7, col=7)
Token(T_Whitespace, ' ', None, line=7, col=8)
Token(T_Hexadecimal, '0x10', 16, line=7, col=9)
Token(T_Semicolon, ';', None, line=7, col=13)
Token(T_Whitespace, '
', None, line=7, col=14)
Token(T_Let, 'let', None, line=8, col=1)
Token(T_Whitespace, ' ', None, line=8, col=4)
Token(T_Id, 'delta', None, line=8, col=5)
Token(T_Whitespace, ' ', None, line=8, col=10)
Token(T_Assign, '=', None, line=8, col=11)
Token(T_Whitespace, ' ', None, line=8, col=12)
Token(T_AOp_MN, '-', None, line=8, col=13)
Token(T_Decimal, '15', 15, line=8, col=14)
Token(T_Semicolon, ';', None, line=8, col=16)
Token(T_Whitespace, '
', None, line=8, col=17)
Token(T_Let, 'let', None, line=9, col=1)
Token(T_Whitespace, ' ', None, line=9, col=4)
Token(T_Id, 'epsilon', None, line=9, col=5)
Token(T_Colon, ':', None, line=9, col=12)
Token(T_Whitespace, ' ', None, line=9, col=13)
Token(T_Int, 'i32', None, line=9, col=14)
Token(T_Whitespace, ' ', None, line=9, col=17)
Token(T_Assign, '=', None, line=9, col=18)
Token(T_Whitespace, ' ', None, line=9, col=19)
Token(T_AOp_Trust, '+', None, line=9, col=20)
Token(T_Decimal, '15', 15, line=9, col=21)
Token(T_Semicolon, ';', None, line=9, col=23)
Token(T_Whitespace, '

', None, line=9, col=24)
Token(T_Comment, '// Tuple types, destructuring, and unused variables
', None, line=11, col=1)
Token(T_Let, 'let', None, line=12, col=1)
Token(T_Whitespace, ' ', None, line=12, col=4)
Token(T_Id, 't1', None, line=12, col=5)
Token(T_Whitespace, ' ', None, line=12, col=7)
Token(T_Assign, '=', None, line=12, col=8)
Token(T_Whitespace, ' ', None, line=12, col=9)
Token(T_LP, '(', None, line=12, col=10)
Token(T_Decimal, '1', 1, line=12, col=11)
Token(T_Comma, ',', None, line=12, col=12)
Token(T_Whitespace, ' ', None, line=12, col=13)
Token(T_False, 'false', None, line=12, col=14)
Token(T_RP, ')', None, line=12, col=19)
Token(T_Semicolon, ';', None, line=12, col=20)
Token(T_Whitespace, '
', None, line=12, col=21)
Token(T_Let, 'let', None, line=13, col=1)
Token(T_Whitespace, ' ', None, line=13, col=4)
Token(T_Mut, 'mut', None, line=13, col=5)
Token(T_Whitespace, ' ', None, line=13, col=8)
Token(T_Id, 't2', None, line=13, col=9)
Token(T_Colon, ':', None, line=13, col=11)
Token(T_Whitespace, ' ', None, line=13, col=12)
Token(T_LP, '(', None, line=13, col=13)
Token(T_Int, 'i32', None, line=13, col=14)
Token(T_Comma, ',', None, line=13, col=17)
Token(T_Whitespace, ' ', None, line=13, col=18)
Token(T_Int, 'i32', None, line=13, col=19)
Token(T_RP, ')', None, line=13, col=22)
Token(T_Whitespace, ' ', None, line=13, col=23)
Token(T_Assign, '=', None, line=13, col=24)
Token(T_Whitespace, ' ', None, line=13, col=25)
Token(T_LP, '(', None, line=13, col=26)
Token(T_Decimal, '2', 2, line=13, col=27)
Token(T_Comma, ',', None, line=13, col=28)
Token(T_Whitespace, ' ', None, line=13, col=29)
Token(T_Decimal, '3', 3, line=13, col=30)
Token(T_RP, ')', None, line=13, col=31)
Token(T_Semicolon, ';', None, line=13, col=32)
Token(T_Whitespace, '
', None, line=13, col=33)
Token(T_Let, 'let', None, line=14, col=1)
Token(T_Whitespace, ' ', None, line=14, col=4)
Token(T_LP, '(', None, line=14, col=5)
Token(T_Id, 'm1', None, line=14, col=6)
Token(T_Comma, ',', None, line=14, col=8)
Token(T_Whitespace, ' ', None, line=14, col=9)
Token(T_Id, 'm2', None, line=14, col=10)
Token(T_RP, ')', None, line=14, col=12)
Token(T_Whitespace, ' ', None, line=14, col=13)
Token(T_Colon, ':', None, line=14, col=14)
Token(T_Whitespace, ' ', None, line=14, col=15)
Token(T_LP, '(', None, line=14, col=16)
Token(T_Int, 'i32', None, line=14, col=17)
Token(T_Comma, ',', None, line=14, col=20)
Token(T_Whitespace, ' ', None, line=14, col=21)
Token(T_Int, 'i32', None, line=14, col=22)
Token(T_RP, ')', None, line=14, col=25)
Token(T_Whitespace, ' ', None, line=14, col=26)
Token(T_Assign, '=', None, line=14, col=27)
Token(T_Whitespace, ' ', None, line=14, col=28)
Token(T_LP, '(', None, line=14, col=29)
Token(T_Decimal, '4', 4, line=14, col=30)
Token(T_Comma, ',', None, line=14, col=31)
Token(T_Whitespace, ' ', None, line=14, col=32)
Token(T_Decimal, '5', 5, line=14, col=33)
Token(T_RP, ')', None, line=14, col=34)
Token(T_Semicolon, ';', None, line=14, col=35)
Token(T_Whitespace, '
', None, line=14, col=36)
Token(T_Let, 'let', None, line=15, col=1)
Token(T_Whitespace, ' ', None, line=15, col=4)
Token(T_Id, '_unused', None, line=15, col=5)
Token(T_Semicolon, ';', None, line=15, col=12)
Token(T_Whitespace, '
', None, line=15, col=13)
Token(T_Id, '_unused', None, line=16, col=1)
Token(T_Whitespace, ' ', None, line=16, col=8)
Token(T_Assign, '=', None, line=16, col=9)
Token(T_Whitespace, ' ', None, line=16, col=10)
Token(T_Decimal, '3', 3, line=16, col=11)
Token(T_Semicolon, ';', None, line=16, col=12)
Token(T_Whitespace, '

', None, line=16, col=13)
Token(T_Comment, '// Array types, indexing, mutation
', None, line=18, col=1)
Token(T_Let, 'let', None, line=19, col=1)
Token(T_Whitespace, ' ', None, line=19, col=4)
Token(T_Id, 'mixed', None, line=19, col=5)
Token(T_Colon, ':', None, line=19, col=10)
Token(T_Whitespace, ' ', None, line=19, col=11)
Token(T_LB, '[', None, line=19, col=12)
Token(T_Int, 'i32', None, line=19, col=13)
Token(T_Semicolon, ';', None, line=19, col=16)
Token(T_Whitespace, ' ', None, line=19, col=17)
Token(T_Decimal, '3', 3, line=19, col=18)
Token(T_RB, ']', None, line=19, col=19)
Token(T_Whitespace, ' ', None, line=19, col=20)
Token(T_Assign, '=', None, line=19, col=21)
Token(T_Whitespace, ' ', None, line=19, col=22)
Token(T_LB, '[', None, line=19, col=23)
Token(T_Decimal, '5', 5, line=19, col=24)
Token(T_Comma, ',', None, line=19, col=25)
Token(T_Whitespace, ' ', None, line=19, col=26)
Token(T_Decimal, '10', 10, line=19, col=27)
Token(T_Comma, ',', None, line=19, col=29)
Token(T_Whitespace, ' ', None, line=19, col=30)
Token(T_Decimal, '15', 15, line=19, col=31)
Token(T_RB, ']', None, line=19, col=33)
Token(T_Semicolon, ';', None, line=19, col=34)
Token(T_Whitespace, '
', None, line=19, col=35)
Token(T_Let, 'let', None, line=20, col=1)
Token(T_Whitespace, ' ', None, line=20, col=4)
Token(T_Id, 'flags', None, line=20, col=5)
Token(T_Colon, ':', None, line=20, col=10)
Token(T_Whitespace, ' ', None, line=20, col=11)
Token(T_LB, '[', None, line=20, col=12)
Token(T_Bool, 'bool', None, line=20, col=13)
Token(T_RB, ']', None, line=20, col=17)
Token(T_Whitespace, ' ', None, line=20, col=18)
Token(T_Assign, '=', None, line=20, col=19)
Token(T_Whitespace, ' ', None, line=20, col=20)
Token(T_LB, '[', None, line=20, col=21)
Token(T_True, 'true', None, line=20, col=22)
Token(T_Comma, ',', None, line=20, col=26)
Token(T_Whitespace, ' ', None, line=20, col=27)
Token(T_False, 'false', None, line=20, col=28)
Token(T_RB, ']', None, line=20, col=33)
Token(T_Semicolon, ';', None, line=20, col=34)
Token(T_Whitespace, '
', None, line=20, col=35)
Token(T_Let, 'let', None, line=21, col=1)
Token(T_Whitespace, ' ', None, line=21, col=4)
Token(T_Mut, 'mut', None, line=21, col=5)
Token(T_Whitespace, ' ', None, line=21, col=8)
Token(T_Id, 'nums', None, line=21, col=9)
Token(T_Colon, ':', None, line=21, col=13)
Token(T_Whitespace, ' ', None, line=21, col=14)
Token(T_LB, '[', None, line=21, col=15)
Token(T_Int, 'i32', None, line=21, col=16)
Token(T_RB, ']', None, line=21, col=19)
Token(T_Whitespace, ' ', None, line=21, col=20)
Token(T_Assign, '=', None, line=21, col=21)
Token(T_Whitespace, ' ', None, line=21, col=22)
Token(T_LB, '[', None, line=21, col=23)
Token(T_Hexadecimal, '0x1', 1, line=21, col=24)
Token(T_Comma, ',', None, line=21, col=27)
Token(T_Whitespace, ' ', None, line=21, col=28)
Token(T_Hexadecimal, '0x2', 2, line=21, col=29)
Token(T_Comma, ',', None, line=21, col=32)
Token(T_Whitespace, ' ', None, line=21, col=33)
Token(T_Hexadecimal, '0x3', 3, line=21, col=34)
Token(T_RB, ']', None, line=21, col=37)
Token(T_Semicolon, ';', None, line=21, col=38)
Token(T_Whitespace, '
', None, line=21, col=39)
Token(T_Id, 'nums', None, line=22, col=1)
Token(T_LB, '[', None, line=22, col=5)
Token(T_Decimal, '2', 2, line=22, col=6)
Token(T_RB, ']', None, line=22, col=7)
Token(T_Whitespace, ' ', None, line=22, col=8)
Token(T_Assign, '=', None, line=22, col=9)
Token(T_Whitespace, ' ', None, line=22, col=10)
Token(T_Id, 'nums', None, line=22, col=11)
Token(T_LB, '[', None, line=22, col=15)
Token(T_Decimal, '1', 1, line=22, col=16)
Token(T_RB, ']', None, line=22, col=17)
Token(T_Whitespace, ' ', None, line=22, col=18)
Token(T_AOp_Trust, '+', None, line=22, col=19)
Token(T_Whitespace, ' ', None, line=22, col=20)
Token(T_Id, 'nums', None, line=22, col=21)
Token(T_LB, '[', None, line=22, col=25)
Token(T_Decimal, '0', 0, line=22, col=26)
Token(T_RB, ']', None, line=22, col=27)
Token(T_Whitespace, ' ', None, line=22, col=28)
Token(T_AOp_ML, '*', None, line=22, col=29)
Token(T_Whitespace, ' ', None, line=22, col=30)
Token(T_Decimal, '2', 2, line=22, col=31)
Token(T_Whitespace, ' ', None, line=22, col=32)
Token(T_AOp_RM, '%', None, line=22, col=33)
Token(T_Whitespace, ' ', None, line=22, col=34)
Token(T_Decimal, '5', 5, line=22, col=35)
Token(T_Semicolon, ';', None, line=22, col=36)
Token(T_Whitespace, '

', None, line=22, col=37)
Token(T_Comment, '// String literals with escapes, positional and named formats
', None, line=24, col=1)
Token(T_Print, 'println!', None, line=25, col=1)
Token(T_LP, '(', None, line=25, col=9)
Token(T_String, '"Start of test"', None, line=25, col=10)
Token(T_RP, ')', None, line=25, col=25)
Token(T_Semicolon, ';', None, line=25, col=26)
Token(T_Whitespace, '
', None, line=25, col=27)
Token(T_Print, 'println!', None, line=26, col=1)
Token(T_LP, '(', None, line=26, col=9)
Token(T_String, '"Hex: {:X}, Dec: {}"', None, line=26, col=10)
Token(T_Comma, ',', None, line=26, col=30)
Token(T_Whitespace, ' ', None, line=26, col=31)
Token(T_Hexadecimal, '0xAB', 171, line=26, col=32)
Token(T_Comma, ',', None, line=26, col=36)
Token(T_Whitespace, ' ', None, line=26, col=37)
Token(T_Decimal, '171', 171, line=26, col=38)
Token(T_RP, ')', None, line=26, col=41)
Token(T_Semicolon, ';', None, line=26, col=42)
Token(T_Whitespace, '
', None, line=26, col=43)
Token(T_Print, 'println!', None, line=27, col=1)
Token(T_LP, '(', None, line=27, col=9)
Token(T_String, '"Escapes:\nLine1\tTabbed"', None, line=27, col=10)
Token(T_RP, ')', None, line=27, col=35)
Token(T_Semicolon, ';', None, line=27, col=36)
Token(T_Whitespace, '
', None, line=27, col=37)
Token(T_Print, 'println!', None, line=28, col=1)
Token(T_LP, '(', None, line=28, col=9)
Token(T_String, '"Named: a={a}, b={b}"', None, line=28, col=10)
Token(T_Comma, ',', None, line=28, col=31)
Token(T_Whitespace, ' ', None, line=28, col=32)
Token(T_Id, 'a', None, line=28, col=33)
Token(T_Assign, '=', None, line=28, col=34)
Token(T_Id, 'alpha', None, line=28, col=35)
Token(T_Comma, ',', None, line=28, col=40)
Token(T_Whitespace, ' ', None, line=28, col=41)
Token(T_Id, 'b', None, line=28, col=42)
Token(T_Assign, '=', None, line=28, col=43)
Token(T_Id, 'beta', None, line=28, col=44)
Token(T_RP, ')', None, line=28, col=48)
Token(T_Whitespace, '

', None, line=28, col=49)
Token(T_Comment, '// Function with implicit unit return
', None, line=30, col=1)
Token(T_Fn, 'fn', None, line=31, col=1)
Token(T_Whitespace, ' ', None, line=31, col=3)
Token(T_Id, 'no_return', None, line=31, col=4)
Token(T_LP, '(', None, line=31, col=13)
Token(T_Id, 'x', None, line=31, col=14)
Token(T_Colon, ':', None, line=31, col=15)
Token(T_Whitespace, ' ', None, line=31, col=16)
Token(T_Int, 'i32', None, line=31, col=17)
Token(T_RP, ')', None, line=31, col=20)
Token(T_Whitespace, ' ', None, line=31, col=21)
Token(T_LC, '{', None, line=31, col=22)
Token(T_Whitespace, '
    ', None, line=31, col=23)
Token(T_Print, 'println!', None, line=32, col=5)
Token(T_LP, '(', None, line=32, col=13)
Token(T_String, '"No return, x = {x}"', None, line=32, col=14)
Token(T_Comma, ',', None, line=32, col=34)
Token(T_Whitespace, ' ', None, line=32, col=35)
Token(T_Id, 'x', None, line=32, col=36)
Token(T_Assign, '=', None, line=32, col=37)
Token(T_Id, 'x', None, line=32, col=38)
Token(T_RP, ')', None, line=32, col=39)
Token(T_Semicolon, ';', None, line=32, col=40)
Token(T_Whitespace, '
', None, line=32, col=41)
Token(T_RC, '}', None, line=33, col=1)
Token(T_Whitespace, '

', None, line=33, col=2)
Token(T_Comment, '// Function with untyped parameters and tuple return
', None, line=35, col=1)
Token(T_Fn, 'fn', None, line=36, col=1)
Token(T_Whitespace, ' ', None, line=36, col=3)
Token(T_Id, 'combine', None, line=36, col=4)
Token(T_LP, '(', None, line=36, col=11)
Token(T_Id, 'a', None, line=36, col=12)
Token(T_Comma, ',', None, line=36, col=13)
Token(T_Whitespace, ' ', None, line=36, col=14)
Token(T_Id, 'b', None, line=36, col=15)
Token(T_RP, ')', None, line=36, col=16)
Token(T_Whitespace, ' ', None, line=36, col=17)
Token(T_Arrow, '->', None, line=36, col=18)
Token(T_Whitespace, ' ', None, line=36, col=20)
Token(T_LP, '(', None, line=36, col=21)
Token(T_Int, 'i32', None, line=36, col=22)
Token(T_Comma, ',', None, line=36, col=25)
Token(T_Whitespace, ' ', None, line=36, col=26)
Token(T_Bool, 'bool', None, line=36, col=27)
Token(T_RP, ')', None, line=36, col=31)
Token(T_Whitespace, ' ', None, line=36, col=32)
Token(T_LC, '{', None, line=36, col=33)
Token(T_Whitespace, '
    ', None, line=36, col=34)
Token(T_Let, 'let', None, line=37, col=5)
Token(T_Whitespace, ' ', None, line=37, col=8)
Token(T_Id, 'sum', None, line=37, col=9)
Token(T_Whitespace, ' ', None, line=37, col=12)
Token(T_Assign, '=', None, line=37, col=13)
Token(T_Whitespace, ' ', None, line=37, col=14)
Token(T_Id, 'a', None, line=37, col=15)
Token(T_Whitespace, ' ', None, line=37, col=16)
Token(T_AOp_Trust, '+', None, line=37, col=17)
Token(T_Whitespace, ' ', None, line=37, col=18)
Token(T_Id, 'b', None, line=37, col=19)
Token(T_Semicolon, ';', None, line=37, col=20)
Token(T_Whitespace, '
    ', None, line=37, col=21)
Token(T_Let, 'let', None, line=38, col=5)
Token(T_Whitespace, ' ', None, line=38, col=8)
Token(T_Id, 'flag', None, line=38, col=9)
Token(T_Whitespace, ' ', None, line=38, col=13)
Token(T_Assign, '=', None, line=38, col=14)
Token(T_Whitespace, ' ', None, line=38, col=15)
Token(T_Id, 'sum', None, line=38, col=16)
Token(T_Whitespace, ' ', None, line=38, col=19)
Token(T_ROp_NE, '!=', None, line=38, col=20)
Token(T_Whitespace, ' ', None, line=38, col=22)
Token(T_Decimal, '0', 0, line=38, col=23)
Token(T_Semicolon, ';', None, line=38, col=24)
Token(T_Whitespace, '
    ', None, line=38, col=25)
Token(T_Return, 'return', None, line=39, col=5)
Token(T_Whitespace, ' ', None, line=39, col=11)
Token(T_LP, '(', None, line=39, col=12)
Token(T_Id, 'sum', None, line=39, col=13)
Token(T_Comma, ',', None, line=39, col=16)
Token(T_Whitespace, ' ', None, line=39, col=17)
Token(T_Id, 'flag', None, line=39, col=18)
Token(T_RP, ')', None, line=39, col=22)
Token(T_Semicolon, ';', None, line=39, col=23)
Token(T_Whitespace, '
', None, line=39, col=24)
Token(T_RC, '}', None, line=40, col=1)
Token(T_Whitespace, '

', None, line=40, col=2)
Token(T_Comment, '// Function with nested conditionals, all logical/relational/unary ops
', None, line=42, col=1)
Token(T_Fn, 'fn', None, line=43, col=1)
Token(T_Whitespace, ' ', None, line=43, col=3)
Token(T_Id, 'nested', None, line=43, col=4)
Token(T_LP, '(', None, line=43, col=10)
Token(T_Id, 'x', None, line=43, col=11)
Token(T_Colon, ':', None, line=43, col=12)
Token(T_Whitespace, ' ', None, line=43, col=13)
Token(T_Int, 'i32', None, line=43, col=14)
Token(T_Comma, ',', None, line=43, col=17)
Token(T_Whitespace, ' ', None, line=43, col=18)
Token(T_Id, 'y', None, line=43, col=19)
Token(T_Colon, ':', None, line=43, col=20)
Token(T_Whitespace, ' ', None, line=43, col=21)
Token(T_Int, 'i32', None, line=43, col=22)
Token(T_RP, ')', None, line=43, col=25)
Token(T_Whitespace, ' ', None, line=43, col=26)
Token(T_Arrow, '->', None, line=43, col=27)
Token(T_Whitespace, ' ', None, line=43, col=29)
Token(T_Int, 'i32', None, line=43, col=30)
Token(T_Whitespace, ' ', None, line=43, col=33)
Token(T_LC, '{', None, line=43, col=34)
Token(T_Whitespace, '
    ', None, line=43, col=35)
Token(T_If, 'if', None, line=44, col=5)
Token(T_Whitespace, ' ', None, line=44, col=7)
Token(T_Id, 'x', None, line=44, col=8)
Token(T_Whitespace, ' ', None, line=44, col=9)
Token(T_ROp_L, '<', None, line=44, col=10)
Token(T_Whitespace, ' ', None, line=44, col=11)
Token(T_Id, 'y', None, line=44, col=12)
Token(T_Whitespace, ' ', None, line=44, col=13)
Token(T_LOp_AND, '&&', None, line=44, col=14)
Token(T_Whitespace, ' ', None, line=44, col=16)
Token(T_LP, '(', None, line=44, col=17)
Token(T_Id, 'y', None, line=44, col=18)
Token(T_Whitespace, ' ', None, line=44, col=19)
Token(T_ROp_G, '>', None, line=44, col=20)
Token(T_Whitespace, ' ', None, line=44, col=21)
Token(T_Id, 'x', None, line=44, col=22)
Token(T_Whitespace, ' ', None, line=44, col=23)
Token(T_LOp_OR, '||', None, line=44, col=24)
Token(T_Whitespace, ' ', None, line=44, col=26)
Token(T_LOp_NOT, '!', None, line=44, col=27)
Token(T_False, 'false', None, line=44, col=28)
Token(T_RP, ')', None, line=44, col=33)
Token(T_Whitespace, ' ', None, line=44, col=34)
Token(T_LC, '{', None, line=44, col=35)
Token(T_Whitespace, '
        ', None, line=44, col=36)
Token(T_Let, 'let', None, line=45, col=9)
Token(T_Whitespace, ' ', None, line=45, col=12)
Token(T_Id, 'res', None, line=45, col=13)
Token(T_Whitespace, ' ', None, line=45, col=16)
Token(T_Assign, '=', None, line=45, col=17)
Token(T_Whitespace, ' ', None, line=45, col=18)
Token(T_Id, 'x', None, line=45, col=19)
Token(T_Whitespace, ' ', None, line=45, col=20)
Token(T_AOp_ML, '*', None, line=45, col=21)
Token(T_Whitespace, ' ', None, line=45, col=22)
Token(T_Id, 'y', None, line=45, col=23)
Token(T_Whitespace, ' ', None, line=45, col=24)
Token(T_AOp_RM, '%', None, line=45, col=25)
Token(T_Whitespace, ' ', None, line=45, col=26)
Token(T_Decimal, '7', 7, line=45, col=27)
Token(T_Semicolon, ';', None, line=45, col=28)
Token(T_Whitespace, '
        ', None, line=45, col=29)
Token(T_If, 'if', None, line=46, col=9)
Token(T_Whitespace, ' ', None, line=46, col=11)
Token(T_Id, 'res', None, line=46, col=12)
Token(T_Whitespace, ' ', None, line=46, col=15)
Token(T_ROp_LE, '<=', None, line=46, col=16)
Token(T_Whitespace, ' ', None, line=46, col=18)
Token(T_Decimal, '10', 10, line=46, col=19)
Token(T_Whitespace, ' ', None, line=46, col=21)
Token(T_LC, '{', None, line=46, col=22)
Token(T_Whitespace, '
            ', None, line=46, col=23)
Token(T_Return, 'return', None, line=47, col=13)
Token(T_Whitespace, ' ', None, line=47, col=19)
Token(T_Id, 'res', None, line=47, col=20)
Token(T_Semicolon, ';', None, line=47, col=23)
Token(T_Whitespace, '
        ', None, line=47, col=24)
Token(T_RC, '}', None, line=48, col=9)
Token(T_Whitespace, ' ', None, line=48, col=10)
Token(T_Else, 'else', None, line=48, col=11)
Token(T_Whitespace, ' ', None, line=48, col=15)
Token(T_LC, '{', None, line=48, col=16)
Token(T_Whitespace, '
            ', None, line=48, col=17)
Token(T_Return, 'return', None, line=49, col=13)
Token(T_Whitespace, ' ', None, line=49, col=19)
Token(T_Id, 'res', None, line=49, col=20)
Token(T_Whitespace, ' ', None, line=49, col=23)
Token(T_AOp_Trust, '+', None, line=49, col=24)
Token(T_Whitespace, ' ', None, line=49, col=25)
Token(T_Decimal, '1', 1, line=49, col=26)
Token(T_Semicolon, ';', None, line=49, col=27)
Token(T_Whitespace, '
        ', None, line=49, col=28)
Token(T_RC, '}', None, line=50, col=9)
Token(T_Whitespace, '
    ', None, line=50, col=10)
Token(T_RC, '}', None, line=51, col=5)
Token(T_Whitespace, ' ', None, line=51, col=6)
Token(T_Else, 'else', None, line=51, col=7)
Token(T_Whitespace, ' ', None, line=51, col=11)
Token(T_LC, '{', None, line=51, col=12)
Token(T_Whitespace, '
        ', None, line=51, col=13)
Token(T_Return, 'return', None, line=52, col=9)
Token(T_Whitespace, ' ', None, line=52, col=15)
Token(T_Id, 'x', None, line=52, col=16)
Token(T_Whitespace, ' ', None, line=52, col=17)
Token(T_AOp_MN, '-', None, line=52, col=18)
Token(T_Whitespace, ' ', None, line=52, col=19)
Token(T_Id, 'y', None, line=52, col=20)
Token(T_Semicolon, ';', None, line=52, col=21)
Token(T_Whitespace, '
    ', None, line=52, col=22)
Token(T_RC, '}', None, line=53, col=5)
Token(T_Whitespace, '
', None, line=53, col=6)
Token(T_RC, '}', None, line=54, col=1)
Token(T_Whitespace, '

', None, line=54, col=2)
Token(T_Comment, '// Main entry to exercise loops, branches, and all tokens
', None, line=56, col=1)
Token(T_Fn, 'fn', None, line=57, col=1)
Token(T_Whitespace, ' ', None, line=57, col=3)
Token(T_Id, 'main', None, line=57, col=4)
Token(T_LP, '(', None, line=57, col=8)
Token(T_RP, ')', None, line=57, col=9)
Token(T_Whitespace, ' ', None, line=57, col=10)
Token(T_LC, '{', None, line=57, col=11)
Token(T_Whitespace, '
    ', None, line=57, col=12)
Token(T_Comment, '// loop with break and continue
', None, line=58, col=5)
Token(T_Whitespace, '    ', None, line=59, col=1)
Token(T_Let, 'let', None, line=59, col=5)
Token(T_Whitespace, ' ', None, line=59, col=8)
Token(T_Mut, 'mut', None, line=59, col=9)
Token(T_Whitespace, ' ', None, line=59, col=12)
Token(T_Id, 'count', None, line=59, col=13)
Token(T_Colon, ':', None, line=59, col=18)
Token(T_Whitespace, ' ', None, line=59, col=19)
Token(T_Int, 'i32', None, line=59, col=20)
Token(T_Whitespace, ' ', None, line=59, col=23)
Token(T_Assign, '=', None, line=59, col=24)
Token(T_Whitespace, ' ', None, line=59, col=25)
Token(T_Decimal, '0', 0, line=59, col=26)
Token(T_Semicolon, ';', None, line=59, col=27)
Token(T_Whitespace, '
    ', None, line=59, col=28)
Token(T_Loop, 'loop', None, line=60, col=5)
Token(T_Whitespace, ' ', None, line=60, col=9)
Token(T_LC, '{', None, line=60, col=10)
Token(T_Whitespace, '
        ', None, line=60, col=11)
Token(T_If, 'if', None, line=61, col=9)
Token(T_Whitespace, ' ', None, line=61, col=11)
Token(T_Id, 'count', None, line=61, col=12)
Token(T_Whitespace, ' ', None, line=61, col=17)
Token(T_ROp_GE, '>=', None, line=61, col=18)
Token(T_Whitespace, ' ', None, line=61, col=20)
Token(T_Decimal, '3', 3, line=61, col=21)
Token(T_Whitespace, ' ', None, line=61, col=22)
Token(T_LC, '{', None, line=61, col=23)
Token(T_Whitespace, '
            ', None, line=61, col=24)
Token(T_Break, 'break', None, line=62, col=13)
Token(T_Semicolon, ';', None, line=62, col=18)
Token(T_Whitespace, '
        ', None, line=62, col=19)
Token(T_RC, '}', None, line=63, col=9)
Token(T_Whitespace, '
        ', None, line=63, col=10)
Token(T_Id, 'count', None, line=64, col=9)
Token(T_Whitespace, ' ', None, line=64, col=14)
Token(T_Assign, '=', None, line=64, col=15)
Token(T_Whitespace, ' ', None, line=64, col=16)
Token(T_Id, 'count', None, line=64, col=17)
Token(T_Whitespace, ' ', None, line=64, col=22)
Token(T_AOp_Trust, '+', None, line=64, col=23)
Token(T_Whitespace, ' ', None, line=64, col=24)
Token(T_Decimal, '1', 1, line=64, col=25)
Token(T_Semicolon, ';', None, line=64, col=26)
Token(T_Whitespace, '
        ', None, line=64, col=27)
Token(T_Continue, 'continue', None, line=65, col=9)
Token(T_Semicolon, ';', None, line=65, col=17)
Token(T_Whitespace, '
    ', None, line=65, col=18)
Token(T_RC, '}', None, line=66, col=5)
Token(T_Whitespace, '

    ', None, line=66, col=6)
Token(T_Comment, '// indexing loop without '..' syntax
', None, line=68, col=5)
Token(T_Whitespace, '    ', None, line=69, col=1)
Token(T_Let, 'let', None, line=69, col=5)
Token(T_Whitespace, ' ', None, line=69, col=8)
Token(T_Mut, 'mut', None, line=69, col=9)
Token(T_Whitespace, ' ', None, line=69, col=12)
Token(T_Id, 'idx', None, line=69, col=13)
Token(T_Colon, ':', None, line=69, col=16)
Token(T_Whitespace, ' ', None, line=69, col=17)
Token(T_Int, 'i32', None, line=69, col=18)
Token(T_Whitespace, ' ', None, line=69, col=21)
Token(T_Assign, '=', None, line=69, col=22)
Token(T_Whitespace, ' ', None, line=69, col=23)
Token(T_Decimal, '0', 0, line=69, col=24)
Token(T_Semicolon, ';', None, line=69, col=25)
Token(T_Whitespace, '
    ', None, line=69, col=26)
Token(T_Loop, 'loop', None, line=70, col=5)
Token(T_Whitespace, ' ', None, line=70, col=9)
Token(T_LC, '{', None, line=70, col=10)
Token(T_Whitespace, '
        ', None, line=70, col=11)
Token(T_If, 'if', None, line=71, col=9)
Token(T_Whitespace, ' ', None, line=71, col=11)
Token(T_Id, 'idx', None, line=71, col=12)
Token(T_Whitespace, ' ', None, line=71, col=15)
Token(T_ROp_E, '==', None, line=71, col=16)
Token(T_Whitespace, ' ', None, line=71, col=18)
Token(T_Id, 'mixed', None, line=71, col=19)
Token(T_LB, '[', None, line=71, col=24)
Token(T_Decimal, '1', 1, line=71, col=25)
Token(T_RB, ']', None, line=71, col=26)
Token(T_Whitespace, ' ', None, line=71, col=27)
Token(T_LC, '{', None, line=71, col=28)
Token(T_Whitespace, '
            ', None, line=71, col=29)
Token(T_Break, 'break', None, line=72, col=13)
Token(T_Semicolon, ';', None, line=72, col=18)
Token(T_Whitespace, '
        ', None, line=72, col=19)
Token(T_RC, '}', None, line=73, col=9)
Token(T_Whitespace, '
        ', None, line=73, col=10)
Token(T_Print, 'println!', None, line=74, col=9)
Token(T_LP, '(', None, line=74, col=17)
Token(T_String, '"idx: {0}, beta: {1}"', None, line=74, col=18)
Token(T_Comma, ',', None, line=74, col=39)
Token(T_Whitespace, ' ', None, line=74, col=40)
Token(T_Id, 'idx', None, line=74, col=41)
Token(T_Comma, ',', None, line=74, col=44)
Token(T_Whitespace, ' ', None, line=74, col=45)
Token(T_Id, 'beta', None, line=74, col=46)
Token(T_RP, ')', None, line=74, col=50)
Token(T_Semicolon, ';', None, line=74, col=51)
Token(T_Whitespace, '
        ', None, line=74, col=52)
Token(T_Id, 'idx', None, line=75, col=9)
Token(T_Whitespace, ' ', None, line=75, col=12)
Token(T_Assign, '=', None, line=75, col=13)
Token(T_Whitespace, ' ', None, line=75, col=14)
Token(T_Id, 'idx', None, line=75, col=15)
Token(T_Whitespace, ' ', None, line=75, col=18)
Token(T_AOp_Trust, '+', None, line=75, col=19)
Token(T_Whitespace, ' ', None, line=75, col=20)
Token(T_Decimal, '1', 1, line=75, col=21)
Token(T_Semicolon, ';', None, line=75, col=22)
Token(T_Whitespace, '
    ', None, line=75, col=23)
Token(T_RC, '}', None, line=76, col=5)
Token(T_Whitespace, '

    ', None, line=76, col=6)
Token(T_Comment, '// calls and prints
', None, line=78, col=5)
Token(T_Whitespace, '    ', None, line=79, col=1)
Token(T_Id, 'no_return', None, line=79, col=5)
Token(T_LP, '(', None, line=79, col=14)
Token(T_Decimal, '5', 5, line=79, col=15)
Token(T_RP, ')', None, line=79, col=16)
Token(T_Semicolon, ';', None, line=79, col=17)
Token(T_Whitespace, '
    ', None, line=79, col=18)
Token(T_Let, 'let', None, line=80, col=5)
Token(T_Whitespace, ' ', None, line=80, col=8)
Token(T_LP, '(', None, line=80, col=9)
Token(T_Id, 'res', None, line=80, col=10)
Token(T_Comma, ',', None, line=80, col=13)
Token(T_Whitespace, ' ', None, line=80, col=14)
Token(T_Id, 'fl', None, line=80, col=15)
Token(T_RP, ')', None, line=80, col=17)
Token(T_Whitespace, ' ', None, line=80, col=18)
Token(T_Assign, '=', None, line=80, col=19)
Token(T_Whitespace, ' ', None, line=80, col=20)
Token(T_Id, 'combine', None, line=80, col=21)
Token(T_LP, '(', None, line=80, col=28)
Token(T_Decimal, '2', 2, line=80, col=29)
Token(T_Comma, ',', None, line=80, col=30)
Token(T_Whitespace, ' ', None, line=80, col=31)
Token(T_Decimal, '3', 3, line=80, col=32)
Token(T_RP, ')', None, line=80, col=33)
Token(T_Semicolon, ';', None, line=80, col=34)
Token(T_Whitespace, '
    ', None, line=80, col=35)
Token(T_Print, 'println!', None, line=81, col=5)
Token(T_LP, '(', None, line=81, col=13)
Token(T_String, '"combine: {0}, {1}"', None, line=81, col=14)
Token(T_Comma, ',', None, line=81, col=33)
Token(T_Whitespace, ' ', None, line=81, col=34)
Token(T_Id, 'res', None, line=81, col=35)
Token(T_Comma, ',', None, line=81, col=38)
Token(T_Whitespace, ' ', None, line=81, col=39)
Token(T_Id, 'fl', None, line=81, col=40)
Token(T_RP, ')', None, line=81, col=42)
Token(T_Semicolon, ';', None, line=81, col=43)
Token(T_Whitespace, '
    ', None, line=81, col=44)
Token(T_Let, 'let', None, line=82, col=5)
Token(T_Whitespace, ' ', None, line=82, col=8)
Token(T_Id, 'f', None, line=82, col=9)
Token(T_Whitespace, ' ', None, line=82, col=10)
Token(T_Assign, '=', None, line=82, col=11)
Token(T_Whitespace, ' ', None, line=82, col=12)
Token(T_Id, 'nested', None, line=82, col=13)
Token(T_LP, '(', None, line=82, col=19)
Token(T_Decimal, '4', 4, line=82, col=20)
Token(T_Comma, ',', None, line=82, col=21)
Token(T_Whitespace, ' ', None, line=82, col=22)
Token(T_Decimal, '2', 2, line=82, col=23)
Token(T_RP, ')', None, line=82, col=24)
Token(T_Semicolon, ';', None, line=82, col=25)
Token(T_Whitespace, '
    ', None, line=82, col=26)
Token(T_Print, 'println!', None, line=83, col=5)
Token(T_LP, '(', None, line=83, col=13)
Token(T_String, '"nested result {}"', None, line=83, col=14)
Token(T_Comma, ',', None, line=83, col=32)
Token(T_Whitespace, ' ', None, line=83, col=33)
Token(T_Id, 'f', None, line=83, col=34)
Token(T_RP, ')', None, line=83, col=35)
Token(T_Semicolon, ';', None, line=83, col=36)
Token(T_Whitespace, '
', None, line=83, col=37)
Token(T_RC, '}', None, line=84, col=1)
Token(T_Whitespace, '
', None, line=84, col=2)
Token(T_EOF, '', None, line=85, col=1)

Symbol Table:
alpha: [(4, 5), (28, 35)]
beta: [(5, 9), (28, 44), (74, 46)]
gamma: [(6, 5), (7, 1)]
delta: [(8, 5)]
epsilon: [(9, 5)]
t1: [(12, 5)]
t2: [(13, 9)]
m1: [(14, 6)]
m2: [(14, 10)]
_unused: [(15, 5), (16, 1)]
mixed: [(19, 5), (71, 19)]
flags: [(20, 5)]
nums: [(21, 9), (22, 1), (22, 11), (22, 21)]
a: [(28, 33), (36, 12), (37, 15)]
b: [(28, 42), (36, 15), (37, 19)]
no_return: [(31, 4), (79, 5)]
x: [(31, 14), (32, 36), (32, 38), (43, 11), (44, 8), (44, 22), (45, 19), (52, 16)]
combine: [(36, 4), (80, 21)]
sum: [(37, 9), (38, 16), (39, 13)]
flag: [(38, 9), (39, 18)]
nested: [(43, 4), (82, 13)]
y: [(43, 19), (44, 12), (44, 18), (45, 23), (52, 20)]
res: [(45, 13), (46, 12), (47, 20), (49, 20), (80, 10), (81, 35)]
main: [(57, 4)]
count: [(59, 13), (61, 12), (64, 9), (64, 17)]
idx: [(69, 13), (71, 12), (74, 41), (75, 9), (75, 15)]
fl: [(80, 15), (81, 40)]
f: [(82, 9), (83, 34)]

Token(T_Comment, '// Single-line comment: Testing all tokens and syntax elements of Trust language
', None, line=1, col=1)
Token(T_Whitespace, '
', None, line=2, col=1)
Token(T_Comment, '// Top-level variable declarations and assignments
', None, line=3, col=1)
Token(T_Let, 'let', None, line=4, col=1)
Token(T_Whitespace, ' ', None, line=4, col=4)
Token(T_Id, 'x1', None, line=4, col=5)
Token(T_Semicolon, ';', None, line=4, col=7)
Token(T_Whitespace, '
', None, line=4, col=8)
Token(T_Id, 'x1', None, line=5, col=1)
Token(T_Whitespace, ' ', None, line=5, col=3)
Token(T_Assign, '=', None, line=5, col=4)
Token(T_Whitespace, ' ', None, line=5, col=5)
Token(T_Decimal, '10', 10, line=5, col=6)
Token(T_Semicolon, ';', None, line=5, col=8)
Token(T_Whitespace, '
', None, line=5, col=9)
Token(T_Let, 'let', None, line=6, col=1)
Token(T_Whitespace, ' ', None, line=6, col=4)
Token(T_Id, 'x2', None, line=6, col=5)
Token(T_Colon, ':', None, line=6, col=7)
Token(T_Whitespace, ' ', None, line=6, col=8)
Token(T_Int, 'i32', None, line=6, col=9)
Token(T_Semicolon, ';', None, line=6, col=12)
Token(T_Whitespace, '
', None, line=6, col=13)
Token(T_Comment, '// bool flag = false;
', None, line=7, col=1)
Token(T_Let, 'let', None, line=8, col=1)
Token(T_Whitespace, ' ', None, line=8, col=4)
Token(T_Id, 'x3', None, line=8, col=5)
Token(T_Whitespace, ' ', None, line=8, col=7)
Token(T_Assign, '=', None, line=8, col=8)
Token(T_Whitespace, ' ', None, line=8, col=9)
Token(T_Decimal, '12', 12, line=8, col=10)
Token(T_Semicolon, ';', None, line=8, col=12)
Token(T_Whitespace, '
', None, line=8, col=13)
Token(T_Let, 'let', None, line=9, col=1)
Token(T_Whitespace, ' ', None, line=9, col=4)
Token(T_Id, 'x4', None, line=9, col=5)
Token(T_Colon, ':', None, line=9, col=7)
Token(T_Whitespace, ' ', None, line=9, col=8)
Token(T_Int, 'i32', None, line=9, col=9)
Token(T_Whitespace, ' ', None, line=9, col=12)
Token(T_Assign, '=', None, line=9, col=13)
Token(T_Whitespace, ' ', None, line=9, col=14)
Token(T_Decimal, '5', 5, line=9, col=15)
Token(T_Semicolon, ';', None, line=9, col=16)
Token(T_Whitespace, '
', None, line=9, col=17)
Token(T_Let, 'let', None, line=10, col=1)
Token(T_Whitespace, ' ', None, line=10, col=4)
Token(T_Id, 'b', None, line=10, col=5)
Token(T_Colon, ':', None, line=10, col=6)
Token(T_Whitespace, ' ', None, line=10, col=7)
Token(T_Bool, 'bool', None, line=10, col=8)
Token(T_Whitespace, ' ', None, line=10, col=12)
Token(T_Assign, '=', None, line=10, col=13)
Token(T_Whitespace, ' ', None, line=10, col=14)
Token(T_True, 'true', None, line=10, col=15)
Token(T_Semicolon, ';', None, line=10, col=19)
Token(T_Whitespace, '
', None, line=10, col=20)
Token(T_Let, 'let', None, line=11, col=1)
Token(T_Whitespace, ' ', None, line=11, col=4)
Token(T_Mut, 'mut', None, line=11, col=5)
Token(T_Whitespace, ' ', None, line=11, col=8)
Token(T_Id, 'flag', None, line=11, col=9)
Token(T_Colon, ':', None, line=11, col=13)
Token(T_Whitespace, ' ', None, line=11, col=14)
Token(T_Bool, 'bool', None, line=11, col=15)
Token(T_Whitespace, ' ', None, line=11, col=19)
Token(T_Assign, '=', None, line=11, col=20)
Token(T_Whitespace, ' ', None, line=11, col=21)
Token(T_False, 'false', None, line=11, col=22)
Token(T_Semicolon, ';', None, line=11, col=27)
Token(T_Whitespace, '
', None, line=11, col=28)
Token(T_Let, 'let', None, line=12, col=1)
Token(T_Whitespace, ' ', None, line=12, col=4)
Token(T_Id, '_hex', None, line=12, col=5)
Token(T_Colon, ':', None, line=12, col=9)
Token(T_Whitespace, ' ', None, line=12, col=10)
Token(T_Int, 'i32', None, line=12, col=11)
Token(T_Whitespace, ' ', None, line=12, col=14)
Token(T_Assign, '=', None, line=12, col=15)
Token(T_Whitespace, ' ', None, line=12, col=16)
Token(T_Hexadecimal, '0xFF', 255, line=12, col=17)
Token(T_Semicolon, ';', None, line=12, col=21)
Token(T_Whitespace, '
', None, line=12, col=22)
Token(T_Let, 'let', None, line=13, col=1)
Token(T_Whitespace, ' ', None, line=13, col=4)
Token(T_Id, 'decimal', None, line=13, col=5)
Token(T_Colon, ':', None, line=13, col=12)
Token(T_Whitespace, ' ', None, line=13, col=13)
Token(T_Int, 'i32', None, line=13, col=14)
Token(T_Whitespace, ' ', None, line=13, col=17)
Token(T_Assign, '=', None, line=13, col=18)
Token(T_Whitespace, ' ', None, line=13, col=19)
Token(T_Decimal, '255', 255, line=13, col=20)
Token(T_Semicolon, ';', None, line=13, col=23)
Token(T_Whitespace, '
', None, line=13, col=24)
Token(T_Let, 'let', None, line=14, col=1)
Token(T_Whitespace, ' ', None, line=14, col=4)
Token(T_Id, 'negative', None, line=14, col=5)
Token(T_Colon, ':', None, line=14, col=13)
Token(T_Whitespace, ' ', None, line=14, col=14)
Token(T_Int, 'i32', None, line=14, col=15)
Token(T_Whitespace, ' ', None, line=14, col=18)
Token(T_Assign, '=', None, line=14, col=19)
Token(T_Whitespace, ' ', None, line=14, col=20)
Token(T_AOp_MN, '-', None, line=14, col=21)
Token(T_Decimal, '42', 42, line=14, col=22)
Token(T_Semicolon, ';', None, line=14, col=24)
Token(T_Whitespace, '
', None, line=14, col=25)
Token(T_Let, 'let', None, line=15, col=1)
Token(T_Whitespace, ' ', None, line=15, col=4)
Token(T_Id, 'positive', None, line=15, col=5)
Token(T_Colon, ':', None, line=15, col=13)
Token(T_Whitespace, ' ', None, line=15, col=14)
Token(T_Int, 'i32', None, line=15, col=15)
Token(T_Whitespace, ' ', None, line=15, col=18)
Token(T_Assign, '=', None, line=15, col=19)
Token(T_Whitespace, ' ', None, line=15, col=20)
Token(T_AOp_Trust, '+', None, line=15, col=21)
Token(T_Decimal, '42', 42, line=15, col=22)
Token(T_Semicolon, ';', None, line=15, col=24)
Token(T_Whitespace, '

', None, line=15, col=25)
Token(T_Comment, '// Tuple declarations and destructuring
', None, line=17, col=1)
Token(T_Let, 'let', None, line=18, col=1)
Token(T_Whitespace, ' ', None, line=18, col=4)
Token(T_LP, '(', None, line=18, col=5)
Token(T_Id, 'u', None, line=18, col=6)
Token(T_Comma, ',', None, line=18, col=7)
Token(T_Whitespace, ' ', None, line=18, col=8)
Token(T_Id, 'v', None, line=18, col=9)
Token(T_RP, ')', None, line=18, col=10)
Token(T_Whitespace, ' ', None, line=18, col=11)
Token(T_Colon, ':', None, line=18, col=12)
Token(T_Whitespace, ' ', None, line=18, col=13)
Token(T_LP, '(', None, line=18, col=14)
Token(T_Int, 'i32', None, line=18, col=15)
Token(T_Comma, ',', None, line=18, col=18)
Token(T_Whitespace, ' ', None, line=18, col=19)
Token(T_Bool, 'bool', None, line=18, col=20)
Token(T_RP, ')', None, line=18, col=24)
Token(T_Semicolon, ';', None, line=18, col=25)
Token(T_Whitespace, '
', None, line=18, col=26)
Token(T_Let, 'let', None, line=19, col=1)
Token(T_Whitespace, ' ', None, line=19, col=4)
Token(T_LP, '(', None, line=19, col=5)
Token(T_Id, 'p', None, line=19, col=6)
Token(T_Comma, ',', None, line=19, col=7)
Token(T_Whitespace, ' ', None, line=19, col=8)
Token(T_Id, 'q', None, line=19, col=9)
Token(T_RP, ')', None, line=19, col=10)
Token(T_Whitespace, ' ', None, line=19, col=11)
Token(T_Assign, '=', None, line=19, col=12)
Token(T_Whitespace, ' ', None, line=19, col=13)
Token(T_LP, '(', None, line=19, col=14)
Token(T_Decimal, '1', 1, line=19, col=15)
Token(T_Comma, ',', None, line=19, col=16)
Token(T_Whitespace, ' ', None, line=19, col=17)
Token(T_True, 'true', None, line=19, col=18)
Token(T_RP, ')', None, line=19, col=22)
Token(T_Semicolon, ';', None, line=19, col=23)
Token(T_Whitespace, '
', None, line=19, col=24)
Token(T_Let, 'let', None, line=20, col=1)
Token(T_Whitespace, ' ', None, line=20, col=4)
Token(T_LP, '(', None, line=20, col=5)
Token(T_Id, 'r', None, line=20, col=6)
Token(T_Comma, ',', None, line=20, col=7)
Token(T_Whitespace, ' ', None, line=20, col=8)
Token(T_Id, 's', None, line=20, col=9)
Token(T_Comma, ',', None, line=20, col=10)
Token(T_Whitespace, ' ', None, line=20, col=11)
Token(T_Id, 't', None, line=20, col=12)
Token(T_RP, ')', None, line=20, col=13)
Token(T_Whitespace, ' ', None, line=20, col=14)
Token(T_Colon, ':', None, line=20, col=15)
Token(T_Whitespace, ' ', None, line=20, col=16)
Token(T_LP, '(', None, line=20, col=17)
Token(T_Int, 'i32', None, line=20, col=18)
Token(T_Comma, ',', None, line=20, col=21)
Token(T_Whitespace, ' ', None, line=20, col=22)
Token(T_Bool, 'bool', None, line=20, col=23)
Token(T_Comma, ',', None, line=20, col=27)
Token(T_Whitespace, ' ', None, line=20, col=28)
Token(T_Bool, 'bool', None, line=20, col=29)
Token(T_RP, ')', None, line=20, col=33)
Token(T_Whitespace, ' ', None, line=20, col=34)
Token(T_Assign, '=', None, line=20, col=35)
Token(T_Whitespace, ' ', None, line=20, col=36)
Token(T_LP, '(', None, line=20, col=37)
Token(T_Decimal, '2', 2, line=20, col=38)
Token(T_Comma, ',', None, line=20, col=39)
Token(T_Whitespace, ' ', None, line=20, col=40)
Token(T_False, 'false', None, line=20, col=41)
Token(T_Comma, ',', None, line=20, col=46)
Token(T_Whitespace, ' ', None, line=20, col=47)
Token(T_True, 'true', None, line=20, col=48)
Token(T_RP, ')', None, line=20, col=52)
Token(T_Semicolon, ';', None, line=20, col=53)
Token(T_Whitespace, '

', None, line=20, col=54)
Token(T_Comment, '// Array declarations, indexing, and mutation
', None, line=22, col=1)
Token(T_Let, 'let', None, line=23, col=1)
Token(T_Whitespace, ' ', None, line=23, col=4)
Token(T_Id, 'arr1', None, line=23, col=5)
Token(T_Whitespace, ' ', None, line=23, col=9)
Token(T_Assign, '=', None, line=23, col=10)
Token(T_Whitespace, ' ', None, line=23, col=11)
Token(T_LB, '[', None, line=23, col=12)
Token(T_Decimal, '1', 1, line=23, col=13)
Token(T_Comma, ',', None, line=23, col=14)
Token(T_Whitespace, ' ', None, line=23, col=15)
Token(T_Decimal, '2', 2, line=23, col=16)
Token(T_Comma, ',', None, line=23, col=17)
Token(T_Whitespace, ' ', None, line=23, col=18)
Token(T_Decimal, '3', 3, line=23, col=19)
Token(T_Comma, ',', None, line=23, col=20)
Token(T_Whitespace, ' ', None, line=23, col=21)
Token(T_Decimal, '4', 4, line=23, col=22)
Token(T_Comma, ',', None, line=23, col=23)
Token(T_Whitespace, ' ', None, line=23, col=24)
Token(T_Decimal, '5', 5, line=23, col=25)
Token(T_RB, ']', None, line=23, col=26)
Token(T_Semicolon, ';', None, line=23, col=27)
Token(T_Whitespace, '
', None, line=23, col=28)
Token(T_Let, 'let', None, line=24, col=1)
Token(T_Whitespace, ' ', None, line=24, col=4)
Token(T_Id, 'arr2', None, line=24, col=5)
Token(T_Colon, ':', None, line=24, col=9)
Token(T_Whitespace, ' ', None, line=24, col=10)
Token(T_LB, '[', None, line=24, col=11)
Token(T_Int, 'i32', None, line=24, col=12)
Token(T_RB, ']', None, line=24, col=15)
Token(T_Whitespace, ' ', None, line=24, col=16)
Token(T_Assign, '=', None, line=24, col=17)
Token(T_Whitespace, ' ', None, line=24, col=18)
Token(T_LB, '[', None, line=24, col=19)
Token(T_Decimal, '7', 7, line=24, col=20)
Token(T_Comma, ',', None, line=24, col=21)
Token(T_Whitespace, ' ', None, line=24, col=22)
Token(T_Decimal, '8', 8, line=24, col=23)
Token(T_Comma, ',', None, line=24, col=24)
Token(T_Whitespace, ' ', None, line=24, col=25)
Token(T_Decimal, '9', 9, line=24, col=26)
Token(T_RB, ']', None, line=24, col=27)
Token(T_Semicolon, ';', None, line=24, col=28)
Token(T_Whitespace, '
', None, line=24, col=29)
Token(T_Let, 'let', None, line=25, col=1)
Token(T_Whitespace, ' ', None, line=25, col=4)
Token(T_Mut, 'mut', None, line=25, col=5)
Token(T_Whitespace, ' ', None, line=25, col=8)
Token(T_Id, 'arr3', None, line=25, col=9)
Token(T_Colon, ':', None, line=25, col=13)
Token(T_Whitespace, ' ', None, line=25, col=14)
Token(T_LB, '[', None, line=25, col=15)
Token(T_Int, 'i32', None, line=25, col=16)
Token(T_Semicolon, ';', None, line=25, col=19)
Token(T_Whitespace, ' ', None, line=25, col=20)
Token(T_Decimal, '2', 2, line=25, col=21)
Token(T_RB, ']', None, line=25, col=22)
Token(T_Whitespace, ' ', None, line=25, col=23)
Token(T_Assign, '=', None, line=25, col=24)
Token(T_Whitespace, ' ', None, line=25, col=25)
Token(T_LB, '[', None, line=25, col=26)
Token(T_Decimal, '10', 10, line=25, col=27)
Token(T_Comma, ',', None, line=25, col=29)
Token(T_Whitespace, ' ', None, line=25, col=30)
Token(T_Decimal, '20', 20, line=25, col=31)
Token(T_RB, ']', None, line=25, col=33)
Token(T_Semicolon, ';', None, line=25, col=34)
Token(T_Whitespace, '
', None, line=25, col=35)
Token(T_Id, 'arr3', None, line=26, col=1)
Token(T_LB, '[', None, line=26, col=5)
Token(T_Decimal, '0', 0, line=26, col=6)
Token(T_RB, ']', None, line=26, col=7)
Token(T_Whitespace, ' ', None, line=26, col=8)
Token(T_Assign, '=', None, line=26, col=9)
Token(T_Whitespace, ' ', None, line=26, col=10)
Token(T_Decimal, '100', 100, line=26, col=11)
Token(T_Semicolon, ';', None, line=26, col=14)
Token(T_Whitespace, '
', None, line=26, col=15)
Token(T_Let, 'let', None, line=27, col=1)
Token(T_Whitespace, ' ', None, line=27, col=4)
Token(T_Mut, 'mut', None, line=27, col=5)
Token(T_Whitespace, ' ', None, line=27, col=8)
Token(T_Id, 'bools', None, line=27, col=9)
Token(T_Colon, ':', None, line=27, col=14)
Token(T_Whitespace, ' ', None, line=27, col=15)
Token(T_LB, '[', None, line=27, col=16)
Token(T_Bool, 'bool', None, line=27, col=17)
Token(T_Semicolon, ';', None, line=27, col=21)
Token(T_Whitespace, ' ', None, line=27, col=22)
Token(T_Decimal, '4', 4, line=27, col=23)
Token(T_RB, ']', None, line=27, col=24)
Token(T_Whitespace, ' ', None, line=27, col=25)
Token(T_Assign, '=', None, line=27, col=26)
Token(T_Whitespace, ' ', None, line=27, col=27)
Token(T_LB, '[', None, line=27, col=28)
Token(T_True, 'true', None, line=27, col=29)
Token(T_Comma, ',', None, line=27, col=33)
Token(T_Whitespace, ' ', None, line=27, col=34)
Token(T_True, 'true', None, line=27, col=35)
Token(T_Comma, ',', None, line=27, col=39)
Token(T_Whitespace, ' ', None, line=27, col=40)
Token(T_False, 'false', None, line=27, col=41)
Token(T_Comma, ',', None, line=27, col=46)
Token(T_Whitespace, ' ', None, line=27, col=47)
Token(T_True, 'true', None, line=27, col=48)
Token(T_RB, ']', None, line=27, col=52)
Token(T_Semicolon, ';', None, line=27, col=53)
Token(T_Whitespace, '

', None, line=27, col=54)
Token(T_Comment, '// Standalone operators and delimiters (for lexer tests)
', None, line=29, col=1)
Token(T_Comment, '//   + - * / % < > <= >= == != && || ! : -> , ; ( ) { } [ ]
', None, line=30, col=1)
Token(T_Whitespace, '
', None, line=31, col=1)
Token(T_Comment, '// Function definitions
', None, line=32, col=1)
Token(T_Fn, 'fn', None, line=33, col=1)
Token(T_Whitespace, ' ', None, line=33, col=3)
Token(T_Id, 'compute', None, line=33, col=4)
Token(T_LP, '(', None, line=33, col=11)
Token(T_Id, 'x', None, line=33, col=12)
Token(T_Colon, ':', None, line=33, col=13)
Token(T_Whitespace, ' ', None, line=33, col=14)
Token(T_Int, 'i32', None, line=33, col=15)
Token(T_Comma, ',', None, line=33, col=18)
Token(T_Whitespace, ' ', None, line=33, col=19)
Token(T_Id, 'y', None, line=33, col=20)
Token(T_Colon, ':', None, line=33, col=21)
Token(T_Whitespace, ' ', None, line=33, col=22)
Token(T_Int, 'i32', None, line=33, col=23)
Token(T_RP, ')', None, line=33, col=26)
Token(T_Whitespace, ' ', None, line=33, col=27)
Token(T_Arrow, '->', None, line=33, col=28)
Token(T_Whitespace, ' ', None, line=33, col=30)
Token(T_Int, 'i32', None, line=33, col=31)
Token(T_Whitespace, ' ', None, line=33, col=34)
Token(T_LC, '{', None, line=33, col=35)
Token(T_Whitespace, '
    ', None, line=33, col=36)
Token(T_Let, 'let', None, line=34, col=5)
Token(T_Whitespace, ' ', None, line=34, col=8)
Token(T_Id, 'result', None, line=34, col=9)
Token(T_Whitespace, ' ', None, line=34, col=15)
Token(T_Assign, '=', None, line=34, col=16)
Token(T_Whitespace, ' ', None, line=34, col=17)
Token(T_Id, 'x', None, line=34, col=18)
Token(T_Whitespace, ' ', None, line=34, col=19)
Token(T_AOp_Trust, '+', None, line=34, col=20)
Token(T_Whitespace, ' ', None, line=34, col=21)
Token(T_Id, 'y', None, line=34, col=22)
Token(T_Whitespace, ' ', None, line=34, col=23)
Token(T_AOp_ML, '*', None, line=34, col=24)
Token(T_Whitespace, ' ', None, line=34, col=25)
Token(T_LP, '(', None, line=34, col=26)
Token(T_Id, 'x', None, line=34, col=27)
Token(T_Whitespace, ' ', None, line=34, col=28)
Token(T_AOp_MN, '-', None, line=34, col=29)
Token(T_Whitespace, ' ', None, line=34, col=30)
Token(T_Id, 'y', None, line=34, col=31)
Token(T_RP, ')', None, line=34, col=32)
Token(T_Whitespace, ' ', None, line=34, col=33)
Token(T_AOp_DV, '/', None, line=34, col=34)
Token(T_Whitespace, ' ', None, line=34, col=35)
Token(T_Decimal, '2', 2, line=34, col=36)
Token(T_Whitespace, ' ', None, line=34, col=37)
Token(T_AOp_RM, '%', None, line=34, col=38)
Token(T_Whitespace, ' ', None, line=34, col=39)
Token(T_Decimal, '10', 10, line=34, col=40)
Token(T_Semicolon, ';', None, line=34, col=42)
Token(T_Whitespace, '
    ', None, line=34, col=43)
Token(T_If, 'if', None, line=35, col=5)
Token(T_Whitespace, ' ', None, line=35, col=7)
Token(T_Id, 'result', None, line=35, col=8)
Token(T_Whitespace, ' ', None, line=35, col=14)
Token(T_ROp_GE, '>=', None, line=35, col=15)
Token(T_Whitespace, ' ', None, line=35, col=17)
Token(T_Decimal, '100', 100, line=35, col=18)
Token(T_Whitespace, ' ', None, line=35, col=21)
Token(T_LOp_AND, '&&', None, line=35, col=22)
Token(T_Whitespace, ' ', None, line=35, col=24)
Token(T_Id, 'result', None, line=35, col=25)
Token(T_Whitespace, ' ', None, line=35, col=31)
Token(T_ROp_NE, '!=', None, line=35, col=32)
Token(T_Whitespace, ' ', None, line=35, col=34)
Token(T_Decimal, '255', 255, line=35, col=35)
Token(T_Whitespace, ' ', None, line=35, col=38)
Token(T_LOp_AND, '&&', None, line=35, col=39)
Token(T_Whitespace, ' ', None, line=35, col=41)
Token(T_LOp_NOT, '!', None, line=35, col=42)
Token(T_False, 'false', None, line=35, col=43)
Token(T_Whitespace, ' ', None, line=35, col=48)
Token(T_LC, '{', None, line=35, col=49)
Token(T_Whitespace, '
        ', None, line=35, col=50)
Token(T_Print, 'println!', None, line=36, col=9)
Token(T_LP, '(', None, line=36, col=17)
Token(T_String, '"Compute result: {}"', None, line=36, col=18)
Token(T_Comma, ',', None, line=36, col=38)
Token(T_Whitespace, ' ', None, line=36, col=39)
Token(T_Id, 'result', None, line=36, col=40)
Token(T_RP, ')', None, line=36, col=46)
Token(T_Semicolon, ';', None, line=36, col=47)
Token(T_Whitespace, '
    ', None, line=36, col=48)
Token(T_RC, '}', None, line=37, col=5)
Token(T_Whitespace, '
    ', None, line=37, col=6)
Token(T_Return, 'return', None, line=38, col=5)
Token(T_Whitespace, ' ', None, line=38, col=11)
Token(T_Id, 'result', None, line=38, col=12)
Token(T_Semicolon, ';', None, line=38, col=18)
Token(T_Whitespace, '
', None, line=38, col=19)
Token(T_RC, '}', None, line=39, col=1)
Token(T_Whitespace, '

', None, line=39, col=2)
Token(T_Fn, 'fn', None, line=41, col=1)
Token(T_Whitespace, ' ', None, line=41, col=3)
Token(T_Id, 'fib', None, line=41, col=4)
Token(T_LP, '(', None, line=41, col=7)
Token(T_Id, 'n', None, line=41, col=8)
Token(T_Colon, ':', None, line=41, col=9)
Token(T_Whitespace, ' ', None, line=41, col=10)
Token(T_Int, 'i32', None, line=41, col=11)
Token(T_RP, ')', None, line=41, col=14)
Token(T_Whitespace, ' ', None, line=41, col=15)
Token(T_Arrow, '->', None, line=41, col=16)
Token(T_Whitespace, ' ', None, line=41, col=18)
Token(T_Int, 'i32', None, line=41, col=19)
Token(T_Whitespace, ' ', None, line=41, col=22)
Token(T_LC, '{', None, line=41, col=23)
Token(T_Whitespace, '
    ', None, line=41, col=24)
Token(T_Let, 'let', None, line=42, col=5)
Token(T_Whitespace, ' ', None, line=42, col=8)
Token(T_Mut, 'mut', None, line=42, col=9)
Token(T_Whitespace, ' ', None, line=42, col=12)
Token(T_Id, 'a', None, line=42, col=13)
Token(T_Colon, ':', None, line=42, col=14)
Token(T_Whitespace, ' ', None, line=42, col=15)
Token(T_Int, 'i32', None, line=42, col=16)
Token(T_Whitespace, ' ', None, line=42, col=19)
Token(T_Assign, '=', None, line=42, col=20)
Token(T_Whitespace, ' ', None, line=42, col=21)
Token(T_Decimal, '0', 0, line=42, col=22)
Token(T_Semicolon, ';', None, line=42, col=23)
Token(T_Whitespace, '
    ', None, line=42, col=24)
Token(T_Let, 'let', None, line=43, col=5)
Token(T_Whitespace, ' ', None, line=43, col=8)
Token(T_Mut, 'mut', None, line=43, col=9)
Token(T_Whitespace, ' ', None, line=43, col=12)
Token(T_Id, 'b', None, line=43, col=13)
Token(T_Colon, ':', None, line=43, col=14)
Token(T_Whitespace, ' ', None, line=43, col=15)
Token(T_Int, 'i32', None, line=43, col=16)
Token(T_Whitespace, ' ', None, line=43, col=19)
Token(T_Assign, '=', None, line=43, col=20)
Token(T_Whitespace, ' ', None, line=43, col=21)
Token(T_Decimal, '1', 1, line=43, col=22)
Token(T_Semicolon, ';', None, line=43, col=23)
Token(T_Whitespace, '
    ', None, line=43, col=24)
Token(T_Let, 'let', None, line=44, col=5)
Token(T_Whitespace, ' ', None, line=44, col=8)
Token(T_Mut, 'mut', None, line=44, col=9)
Token(T_Whitespace, ' ', None, line=44, col=12)
Token(T_Id, 'i', None, line=44, col=13)
Token(T_Colon, ':', None, line=44, col=14)
Token(T_Whitespace, ' ', None, line=44, col=15)
Token(T_Int, 'i32', None, line=44, col=16)
Token(T_Whitespace, ' ', None, line=44, col=19)
Token(T_Assign, '=', None, line=44, col=20)
Token(T_Whitespace, ' ', None, line=44, col=21)
Token(T_Decimal, '0', 0, line=44, col=22)
Token(T_Semicolon, ';', None, line=44, col=23)
Token(T_Whitespace, '
    ', None, line=44, col=24)
Token(T_Loop, 'loop', None, line=45, col=5)
Token(T_Whitespace, ' ', None, line=45, col=9)
Token(T_LC, '{', None, line=45, col=10)
Token(T_Whitespace, '
        ', None, line=45, col=11)
Token(T_If, 'if', None, line=46, col=9)
Token(T_Whitespace, ' ', None, line=46, col=11)
Token(T_Id, 'i', None, line=46, col=12)
Token(T_Whitespace, ' ', None, line=46, col=13)
Token(T_ROp_GE, '>=', None, line=46, col=14)
Token(T_Whitespace, ' ', None, line=46, col=16)
Token(T_Id, 'n', None, line=46, col=17)
Token(T_Whitespace, ' ', None, line=46, col=18)
Token(T_LC, '{', None, line=46, col=19)
Token(T_Whitespace, '
            ', None, line=46, col=20)
Token(T_Break, 'break', None, line=47, col=13)
Token(T_Semicolon, ';', None, line=47, col=18)
Token(T_Whitespace, '
        ', None, line=47, col=19)
Token(T_RC, '}', None, line=48, col=9)
Token(T_Whitespace, '
        ', None, line=48, col=10)
Token(T_Let, 'let', None, line=49, col=9)
Token(T_Whitespace, ' ', None, line=49, col=12)
Token(T_Id, 'tmp', None, line=49, col=13)
Token(T_Colon, ':', None, line=49, col=16)
Token(T_Whitespace, ' ', None, line=49, col=17)
Token(T_Int, 'i32', None, line=49, col=18)
Token(T_Whitespace, ' ', None, line=49, col=21)
Token(T_Assign, '=', None, line=49, col=22)
Token(T_Whitespace, ' ', None, line=49, col=23)
Token(T_Id, 'a', None, line=49, col=24)
Token(T_Whitespace, ' ', None, line=49, col=25)
Token(T_AOp_Trust, '+', None, line=49, col=26)
Token(T_Whitespace, ' ', None, line=49, col=27)
Token(T_Id, 'b', None, line=49, col=28)
Token(T_Semicolon, ';', None, line=49, col=29)
Token(T_Whitespace, '
        ', None, line=49, col=30)
Token(T_Id, 'a', None, line=50, col=9)
Token(T_Whitespace, ' ', None, line=50, col=10)
Token(T_Assign, '=', None, line=50, col=11)
Token(T_Whitespace, ' ', None, line=50, col=12)
Token(T_Id, 'b', None, line=50, col=13)
Token(T_Semicolon, ';', None, line=50, col=14)
Token(T_Whitespace, '
        ', None, line=50, col=15)
Token(T_Id, 'b', None, line=51, col=9)
Token(T_Whitespace, ' ', None, line=51, col=10)
Token(T_Assign, '=', None, line=51, col=11)
Token(T_Whitespace, ' ', None, line=51, col=12)
Token(T_Id, 'tmp', None, line=51, col=13)
Token(T_Semicolon, ';', None, line=51, col=16)
Token(T_Whitespace, '
        ', None, line=51, col=17)
Token(T_Id, 'i', None, line=52, col=9)
Token(T_Whitespace, ' ', None, line=52, col=10)
Token(T_Assign, '=', None, line=52, col=11)
Token(T_Whitespace, ' ', None, line=52, col=12)
Token(T_Id, 'i', None, line=52, col=13)
Token(T_Whitespace, ' ', None, line=52, col=14)
Token(T_AOp_Trust, '+', None, line=52, col=15)
Token(T_Whitespace, ' ', None, line=52, col=16)
Token(T_Decimal, '1', 1, line=52, col=17)
Token(T_Semicolon, ';', None, line=52, col=18)
Token(T_Whitespace, '
    ', None, line=52, col=19)
Token(T_RC, '}', None, line=53, col=5)
Token(T_Whitespace, '
    ', None, line=53, col=6)
Token(T_Return, 'return', None, line=54, col=5)
Token(T_Whitespace, ' ', None, line=54, col=11)
Token(T_Id, 'a', None, line=54, col=12)
Token(T_Semicolon, ';', None, line=54, col=13)
Token(T_Whitespace, '
', None, line=54, col=14)
Token(T_RC, '}', None, line=55, col=1)
Token(T_Whitespace, '

', None, line=55, col=2)
Token(T_Fn, 'fn', None, line=57, col=1)
Token(T_Whitespace, ' ', None, line=57, col=3)
Token(T_Id, 'multiply', None, line=57, col=4)
Token(T_LP, '(', None, line=57, col=12)
Token(T_Id, 'x', None, line=57, col=13)
Token(T_Colon, ':', None, line=57, col=14)
Token(T_Whitespace, ' ', None, line=57, col=15)
Token(T_Int, 'i32', None, line=57, col=16)
Token(T_Comma, ',', None, line=57, col=19)
Token(T_Whitespace, ' ', None, line=57, col=20)
Token(T_Id, 'y', None, line=57, col=21)
Token(T_Colon, ':', None, line=57, col=22)
Token(T_Whitespace, ' ', None, line=57, col=23)
Token(T_Int, 'i32', None, line=57, col=24)
Token(T_RP, ')', None, line=57, col=27)
Token(T_Whitespace, ' ', None, line=57, col=28)
Token(T_Arrow, '->', None, line=57, col=29)
Token(T_Whitespace, ' ', None, line=57, col=31)
Token(T_Int, 'i32', None, line=57, col=32)
Token(T_Whitespace, ' ', None, line=57, col=35)
Token(T_LC, '{', None, line=57, col=36)
Token(T_Whitespace, '
    ', None, line=57, col=37)
Token(T_Let, 'let', None, line=58, col=5)
Token(T_Whitespace, ' ', None, line=58, col=8)
Token(T_Id, 'z', None, line=58, col=9)
Token(T_Whitespace, ' ', None, line=58, col=10)
Token(T_Assign, '=', None, line=58, col=11)
Token(T_Whitespace, ' ', None, line=58, col=12)
Token(T_Id, 'x', None, line=58, col=13)
Token(T_Whitespace, ' ', None, line=58, col=14)
Token(T_AOp_ML, '*', None, line=58, col=15)
Token(T_Whitespace, ' ', None, line=58, col=16)
Token(T_Id, 'y', None, line=58, col=17)
Token(T_Semicolon, ';', None, line=58, col=18)
Token(T_Whitespace, '
    ', None, line=58, col=19)
Token(T_Return, 'return', None, line=59, col=5)
Token(T_Whitespace, ' ', None, line=59, col=11)
Token(T_Id, 'z', None, line=59, col=12)
Token(T_Semicolon, ';', None, line=59, col=13)
Token(T_Whitespace, '
', None, line=59, col=14)
Token(T_RC, '}', None, line=60, col=1)
Token(T_Whitespace, '

', None, line=60, col=2)
Token(T_Fn, 'fn', None, line=62, col=1)
Token(T_Whitespace, ' ', None, line=62, col=3)
Token(T_Id, 'add', None, line=62, col=4)
Token(T_LP, '(', None, line=62, col=7)
Token(T_Id, 'x', None, line=62, col=8)
Token(T_Comma, ',', None, line=62, col=9)
Token(T_Whitespace, ' ', None, line=62, col=10)
Token(T_Id, 'y', None, line=62, col=11)
Token(T_RP, ')', None, line=62, col=12)
Token(T_Whitespace, ' ', None, line=62, col=13)
Token(T_LC, '{', None, line=62, col=14)
Token(T_Whitespace, '
    ', None, line=62, col=15)
Token(T_Return, 'return', None, line=63, col=5)
Token(T_Whitespace, ' ', None, line=63, col=11)
Token(T_Id, 'x', None, line=63, col=12)
Token(T_Whitespace, ' ', None, line=63, col=13)
Token(T_AOp_Trust, '+', None, line=63, col=14)
Token(T_Whitespace, ' ', None, line=63, col=15)
Token(T_Id, 'y', None, line=63, col=16)
Token(T_Semicolon, ';', None, line=63, col=17)
Token(T_Whitespace, '
', None, line=63, col=18)
Token(T_RC, '}', None, line=64, col=1)
Token(T_Whitespace, '

', None, line=64, col=2)
Token(T_Fn, 'fn', None, line=66, col=1)
Token(T_Whitespace, ' ', None, line=66, col=3)
Token(T_Id, 'create_array', None, line=66, col=4)
Token(T_LP, '(', None, line=66, col=16)
Token(T_RP, ')', None, line=66, col=17)
Token(T_Whitespace, ' ', None, line=66, col=18)
Token(T_Arrow, '->', None, line=66, col=19)
Token(T_Whitespace, ' ', None, line=66, col=21)
Token(T_LB, '[', None, line=66, col=22)
Token(T_Int, 'i32', None, line=66, col=23)
Token(T_Semicolon, ';', None, line=66, col=26)
Token(T_Whitespace, ' ', None, line=66, col=27)
Token(T_Decimal, '5', 5, line=66, col=28)
Token(T_RB, ']', None, line=66, col=29)
Token(T_Whitespace, ' ', None, line=66, col=30)
Token(T_LC, '{', None, line=66, col=31)
Token(T_Whitespace, '
    ', None, line=66, col=32)
Token(T_Let, 'let', None, line=67, col=5)
Token(T_Whitespace, ' ', None, line=67, col=8)
Token(T_Id, 'array', None, line=67, col=9)
Token(T_Whitespace, ' ', None, line=67, col=14)
Token(T_Assign, '=', None, line=67, col=15)
Token(T_Whitespace, ' ', None, line=67, col=16)
Token(T_LB, '[', None, line=67, col=17)
Token(T_Decimal, '1', 1, line=67, col=18)
Token(T_Comma, ',', None, line=67, col=19)
Token(T_Whitespace, ' ', None, line=67, col=20)
Token(T_Decimal, '2', 2, line=67, col=21)
Token(T_Comma, ',', None, line=67, col=22)
Token(T_Whitespace, ' ', None, line=67, col=23)
Token(T_Decimal, '3', 3, line=67, col=24)
Token(T_Comma, ',', None, line=67, col=25)
Token(T_Whitespace, ' ', None, line=67, col=26)
Token(T_Decimal, '4', 4, line=67, col=27)
Token(T_Comma, ',', None, line=67, col=28)
Token(T_Whitespace, ' ', None, line=67, col=29)
Token(T_Decimal, '5', 5, line=67, col=30)
Token(T_RB, ']', None, line=67, col=31)
Token(T_Semicolon, ';', None, line=67, col=32)
Token(T_Whitespace, '
    ', None, line=67, col=33)
Token(T_Return, 'return', None, line=68, col=5)
Token(T_Whitespace, ' ', None, line=68, col=11)
Token(T_Id, 'array', None, line=68, col=12)
Token(T_Semicolon, ';', None, line=68, col=17)
Token(T_Whitespace, '
', None, line=68, col=18)
Token(T_RC, '}', None, line=69, col=1)
Token(T_Whitespace, '

', None, line=69, col=2)
Token(T_Comment, '// Testing print formatting: positional, named, escape sequences, no semicolon
', None, line=71, col=1)
Token(T_Print, 'println!', None, line=72, col=1)
Token(T_LP, '(', None, line=72, col=9)
Token(T_String, '"Trust is good"', None, line=72, col=10)
Token(T_RP, ')', None, line=72, col=25)
Token(T_Whitespace, '
', None, line=72, col=26)
Token(T_Print, 'println!', None, line=73, col=1)
Token(T_LP, '(', None, line=73, col=9)
Token(T_String, '"Decimal: {}  Hex: 0x{:X}\n"', None, line=73, col=10)
Token(T_Comma, ',', None, line=73, col=38)
Token(T_Whitespace, ' ', None, line=73, col=39)
Token(T_Id, 'decimal', None, line=73, col=40)
Token(T_Comma, ',', None, line=73, col=47)
Token(T_Whitespace, ' ', None, line=73, col=48)
Token(T_Id, '_hex', None, line=73, col=49)
Token(T_RP, ')', None, line=73, col=53)
Token(T_Semicolon, ';', None, line=73, col=54)
Token(T_Whitespace, '

', None, line=73, col=55)
Token(T_Comment, '// Main entry
', None, line=75, col=1)
Token(T_Fn, 'fn', None, line=76, col=1)
Token(T_Whitespace, ' ', None, line=76, col=3)
Token(T_Id, 'main', None, line=76, col=4)
Token(T_LP, '(', None, line=76, col=8)
Token(T_RP, ')', None, line=76, col=9)
Token(T_Whitespace, ' ', None, line=76, col=10)
Token(T_LC, '{', None, line=76, col=11)
Token(T_Whitespace, '
    ', None, line=76, col=12)
Token(T_Comment, '// Function calls and println! tests
', None, line=77, col=5)
Token(T_Whitespace, '    ', None, line=78, col=1)
Token(T_Let, 'let', None, line=78, col=5)
Token(T_Whitespace, ' ', None, line=78, col=8)
Token(T_Id, 'c1', None, line=78, col=9)
Token(T_Whitespace, ' ', None, line=78, col=11)
Token(T_Assign, '=', None, line=78, col=12)
Token(T_Whitespace, ' ', None, line=78, col=13)
Token(T_Id, 'compute', None, line=78, col=14)
Token(T_LP, '(', None, line=78, col=21)
Token(T_Decimal, '3', 3, line=78, col=22)
Token(T_Comma, ',', None, line=78, col=23)
Token(T_Whitespace, ' ', None, line=78, col=24)
Token(T_Decimal, '4', 4, line=78, col=25)
Token(T_RP, ')', None, line=78, col=26)
Token(T_Semicolon, ';', None, line=78, col=27)
Token(T_Whitespace, '
    ', None, line=78, col=28)
Token(T_Print, 'println!', None, line=79, col=5)
Token(T_LP, '(', None, line=79, col=13)
Token(T_String, '"c1 = {0}, fib(5) = {1}"', None, line=79, col=14)
Token(T_Comma, ',', None, line=79, col=38)
Token(T_Whitespace, ' ', None, line=79, col=39)
Token(T_Id, 'c1', None, line=79, col=40)
Token(T_Comma, ',', None, line=79, col=42)
Token(T_Whitespace, ' ', None, line=79, col=43)
Token(T_Id, 'fib', None, line=79, col=44)
Token(T_LP, '(', None, line=79, col=47)
Token(T_Decimal, '5', 5, line=79, col=48)
Token(T_RP, ')', None, line=79, col=49)
Token(T_RP, ')', None, line=79, col=50)
Token(T_Semicolon, ';', None, line=79, col=51)
Token(T_Whitespace, '
    ', None, line=79, col=52)
Token(T_Print, 'println!', None, line=80, col=5)
Token(T_LP, '(', None, line=80, col=13)
Token(T_String, '"Named: x={x}, y={y}"', None, line=80, col=14)
Token(T_Comma, ',', None, line=80, col=35)
Token(T_Whitespace, ' ', None, line=80, col=36)
Token(T_Id, 'x', None, line=80, col=37)
Token(T_Whitespace, ' ', None, line=80, col=38)
Token(T_Assign, '=', None, line=80, col=39)
Token(T_Whitespace, ' ', None, line=80, col=40)
Token(T_Id, 'x3', None, line=80, col=41)
Token(T_Comma, ',', None, line=80, col=43)
Token(T_Whitespace, ' ', None, line=80, col=44)
Token(T_Id, 'y', None, line=80, col=45)
Token(T_Whitespace, ' ', None, line=80, col=46)
Token(T_Assign, '=', None, line=80, col=47)
Token(T_Whitespace, ' ', None, line=80, col=48)
Token(T_Id, 'x4', None, line=80, col=49)
Token(T_RP, ')', None, line=80, col=51)
Token(T_Semicolon, ';', None, line=80, col=52)
Token(T_Whitespace, '
    ', None, line=80, col=53)
Token(T_Print, 'println!', None, line=81, col=5)
Token(T_LP, '(', None, line=81, col=13)
Token(T_String, '"Escaped: \"Quote\" and newline\n"', None, line=81, col=14)
Token(T_RP, ')', None, line=81, col=48)
Token(T_Semicolon, ';', None, line=81, col=49)
Token(T_Whitespace, '

    ', None, line=81, col=50)
Token(T_Comment, '// Conditional statements with logical and relational operators
', None, line=83, col=5)
Token(T_Whitespace, '    ', None, line=84, col=1)
Token(T_If, 'if', None, line=84, col=5)
Token(T_Whitespace, ' ', None, line=84, col=7)
Token(T_Id, 'x1', None, line=84, col=8)
Token(T_Whitespace, ' ', None, line=84, col=10)
Token(T_ROp_E, '==', None, line=84, col=11)
Token(T_Whitespace, ' ', None, line=84, col=13)
Token(T_Decimal, '10', 10, line=84, col=14)
Token(T_Whitespace, ' ', None, line=84, col=16)
Token(T_LC, '{', None, line=84, col=17)
Token(T_Whitespace, '
        ', None, line=84, col=18)
Token(T_Print, 'println!', None, line=85, col=9)
Token(T_LP, '(', None, line=85, col=17)
Token(T_String, '"x1 is ten"', None, line=85, col=18)
Token(T_RP, ')', None, line=85, col=29)
Token(T_Semicolon, ';', None, line=85, col=30)
Token(T_Whitespace, '
    ', None, line=85, col=31)
Token(T_RC, '}', None, line=86, col=5)
Token(T_Whitespace, '
    ', None, line=86, col=6)
Token(T_If, 'if', None, line=87, col=5)
Token(T_Whitespace, ' ', None, line=87, col=7)
Token(T_Id, 'decimal', None, line=87, col=8)
Token(T_Whitespace, ' ', None, line=87, col=15)
Token(T_ROp_G, '>', None, line=87, col=16)
Token(T_Whitespace, ' ', None, line=87, col=17)
Token(T_Decimal, '200', 200, line=87, col=18)
Token(T_Whitespace, ' ', None, line=87, col=21)
Token(T_LOp_AND, '&&', None, line=87, col=22)
Token(T_Whitespace, ' ', None, line=87, col=24)
Token(T_Id, 'flag', None, line=87, col=25)
Token(T_Whitespace, ' ', None, line=87, col=29)
Token(T_LOp_OR, '||', None, line=87, col=30)
Token(T_Whitespace, ' ', None, line=87, col=32)
Token(T_LOp_NOT, '!', None, line=87, col=33)
Token(T_Id, 'b', None, line=87, col=34)
Token(T_Whitespace, ' ', None, line=87, col=35)
Token(T_LC, '{', None, line=87, col=36)
Token(T_Whitespace, '
        ', None, line=87, col=37)
Token(T_Print, 'println!', None, line=88, col=9)
Token(T_LP, '(', None, line=88, col=17)
Token(T_String, '"Complex condition passed"', None, line=88, col=18)
Token(T_RP, ')', None, line=88, col=44)
Token(T_Semicolon, ';', None, line=88, col=45)
Token(T_Whitespace, '
    ', None, line=88, col=46)
Token(T_RC, '}', None, line=89, col=5)
Token(T_Whitespace, ' ', None, line=89, col=6)
Token(T_Else, 'else', None, line=89, col=7)
Token(T_Whitespace, ' ', None, line=89, col=11)
Token(T_If, 'if', None, line=89, col=12)
Token(T_Whitespace, ' ', None, line=89, col=14)
Token(T_Id, 'decimal', None, line=89, col=15)
Token(T_Whitespace, ' ', None, line=89, col=22)
Token(T_ROp_LE, '<=', None, line=89, col=23)
Token(T_Whitespace, ' ', None, line=89, col=25)
Token(T_Decimal, '255', 255, line=89, col=26)
Token(T_Whitespace, ' ', None, line=89, col=29)
Token(T_LOp_AND, '&&', None, line=89, col=30)
Token(T_Whitespace, ' ', None, line=89, col=32)
Token(T_LOp_NOT, '!', None, line=89, col=33)
Token(T_Id, 'flag', None, line=89, col=34)
Token(T_Whitespace, ' ', None, line=89, col=38)
Token(T_LC, '{', None, line=89, col=39)
Token(T_Whitespace, '
        ', None, line=89, col=40)
Token(T_Print, 'println!', None, line=90, col=9)
Token(T_LP, '(', None, line=90, col=17)
Token(T_String, '"Else-if triggered"', None, line=90, col=18)
Token(T_RP, ')', None, line=90, col=37)
Token(T_Semicolon, ';', None, line=90, col=38)
Token(T_Whitespace, '
    ', None, line=90, col=39)
Token(T_RC, '}', None, line=91, col=5)
Token(T_Whitespace, ' ', None, line=91, col=6)
Token(T_Else, 'else', None, line=91, col=7)
Token(T_Whitespace, ' ', None, line=91, col=11)
Token(T_LC, '{', None, line=91, col=12)
Token(T_Whitespace, '
        ', None, line=91, col=13)
Token(T_Print, 'println!', None, line=92, col=9)
Token(T_LP, '(', None, line=92, col=17)
Token(T_String, '"Else branch"', None, line=92, col=18)
Token(T_RP, ')', None, line=92, col=31)
Token(T_Semicolon, ';', None, line=92, col=32)
Token(T_Whitespace, '
    ', None, line=92, col=33)
Token(T_RC, '}', None, line=93, col=5)
Token(T_Whitespace, '

    ', None, line=93, col=6)
Token(T_Comment, '// Loops with break and continue
', None, line=95, col=5)
Token(T_Whitespace, '    ', None, line=96, col=1)
Token(T_Let, 'let', None, line=96, col=5)
Token(T_Whitespace, ' ', None, line=96, col=8)
Token(T_Mut, 'mut', None, line=96, col=9)
Token(T_Whitespace, ' ', None, line=96, col=12)
Token(T_Id, 'cnt', None, line=96, col=13)
Token(T_Colon, ':', None, line=96, col=16)
Token(T_Whitespace, ' ', None, line=96, col=17)
Token(T_Int, 'i32', None, line=96, col=18)
Token(T_Whitespace, ' ', None, line=96, col=21)
Token(T_Assign, '=', None, line=96, col=22)
Token(T_Whitespace, ' ', None, line=96, col=23)
Token(T_Decimal, '0', 0, line=96, col=24)
Token(T_Semicolon, ';', None, line=96, col=25)
Token(T_Whitespace, '
    ', None, line=96, col=26)
Token(T_Loop, 'loop', None, line=97, col=5)
Token(T_Whitespace, ' ', None, line=97, col=9)
Token(T_LC, '{', None, line=97, col=10)
Token(T_Whitespace, '
        ', None, line=97, col=11)
Token(T_Id, 'cnt', None, line=98, col=9)
Token(T_Whitespace, ' ', None, line=98, col=12)
Token(T_Assign, '=', None, line=98, col=13)
Token(T_Whitespace, ' ', None, line=98, col=14)
Token(T_Id, 'cnt', None, line=98, col=15)
Token(T_Whitespace, ' ', None, line=98, col=18)
Token(T_AOp_Trust, '+', None, line=98, col=19)
Token(T_Whitespace, ' ', None, line=98, col=20)
Token(T_Decimal, '1', 1, line=98, col=21)
Token(T_Semicolon, ';', None, line=98, col=22)
Token(T_Whitespace, '
        ', None, line=98, col=23)
Token(T_If, 'if', None, line=99, col=9)
Token(T_Whitespace, ' ', None, line=99, col=11)
Token(T_Id, 'cnt', None, line=99, col=12)
Token(T_Whitespace, ' ', None, line=99, col=15)
Token(T_ROp_E, '==', None, line=99, col=16)
Token(T_Whitespace, ' ', None, line=99, col=18)
Token(T_Decimal, '3', 3, line=99, col=19)
Token(T_Whitespace, ' ', None, line=99, col=20)
Token(T_LC, '{', None, line=99, col=21)
Token(T_Whitespace, '
            ', None, line=99, col=22)
Token(T_Continue, 'continue', None, line=100, col=13)
Token(T_Semicolon, ';', None, line=100, col=21)
Token(T_Whitespace, '
        ', None, line=100, col=22)
Token(T_RC, '}', None, line=101, col=9)
Token(T_Whitespace, '
        ', None, line=101, col=10)
Token(T_If, 'if', None, line=102, col=9)
Token(T_Whitespace, ' ', None, line=102, col=11)
Token(T_Id, 'cnt', None, line=102, col=12)
Token(T_Whitespace, ' ', None, line=102, col=15)
Token(T_ROp_GE, '>=', None, line=102, col=16)
Token(T_Whitespace, ' ', None, line=102, col=18)
Token(T_Decimal, '5', 5, line=102, col=19)
Token(T_Whitespace, ' ', None, line=102, col=20)
Token(T_LC, '{', None, line=102, col=21)
Token(T_Whitespace, '
            ', None, line=102, col=22)
Token(T_Break, 'break', None, line=103, col=13)
Token(T_Semicolon, ';', None, line=103, col=18)
Token(T_Whitespace, '
        ', None, line=103, col=19)
Token(T_RC, '}', None, line=104, col=9)
Token(T_Whitespace, '
    ', None, line=104, col=10)
Token(T_RC, '}', None, line=105, col=5)
Token(T_Whitespace, '

    ', None, line=105, col=6)
Token(T_Comment, '// Array indexing in a loop (no '..' operator)
', None, line=107, col=5)
Token(T_Whitespace, '    ', None, line=108, col=1)
Token(T_Let, 'let', None, line=108, col=5)
Token(T_Whitespace, ' ', None, line=108, col=8)
Token(T_Id, 'arr', None, line=108, col=9)
Token(T_Whitespace, ' ', None, line=108, col=12)
Token(T_Assign, '=', None, line=108, col=13)
Token(T_Whitespace, ' ', None, line=108, col=14)
Token(T_Id, 'create_array', None, line=108, col=15)
Token(T_LP, '(', None, line=108, col=27)
Token(T_RP, ')', None, line=108, col=28)
Token(T_Semicolon, ';', None, line=108, col=29)
Token(T_Whitespace, '
    ', None, line=108, col=30)
Token(T_Let, 'let', None, line=109, col=5)
Token(T_Whitespace, ' ', None, line=109, col=8)
Token(T_Mut, 'mut', None, line=109, col=9)
Token(T_Whitespace, ' ', None, line=109, col=12)
Token(T_Id, 'idx', None, line=109, col=13)
Token(T_Colon, ':', None, line=109, col=16)
Token(T_Whitespace, ' ', None, line=109, col=17)
Token(T_Int, 'i32', None, line=109, col=18)
Token(T_Whitespace, ' ', None, line=109, col=21)
Token(T_Assign, '=', None, line=109, col=22)
Token(T_Whitespace, ' ', None, line=109, col=23)
Token(T_Decimal, '0', 0, line=109, col=24)
Token(T_Semicolon, ';', None, line=109, col=25)
Token(T_Whitespace, '
    ', None, line=109, col=26)
Token(T_Loop, 'loop', None, line=110, col=5)
Token(T_Whitespace, ' ', None, line=110, col=9)
Token(T_LC, '{', None, line=110, col=10)
Token(T_Whitespace, '
        ', None, line=110, col=11)
Token(T_If, 'if', None, line=111, col=9)
Token(T_Whitespace, ' ', None, line=111, col=11)
Token(T_Id, 'idx', None, line=111, col=12)
Token(T_Whitespace, ' ', None, line=111, col=15)
Token(T_ROp_GE, '>=', None, line=111, col=16)
Token(T_Whitespace, ' ', None, line=111, col=18)
Token(T_Decimal, '5', 5, line=111, col=19)
Token(T_Whitespace, ' ', None, line=111, col=20)
Token(T_LC, '{', None, line=111, col=21)
Token(T_Whitespace, '
            ', None, line=111, col=22)
Token(T_Break, 'break', None, line=112, col=13)
Token(T_Semicolon, ';', None, line=112, col=18)
Token(T_Whitespace, '
        ', None, line=112, col=19)
Token(T_RC, '}', None, line=113, col=9)
Token(T_Whitespace, '
        ', None, line=113, col=10)
Token(T_Let, 'let', None, line=114, col=9)
Token(T_Whitespace, ' ', None, line=114, col=12)
Token(T_Id, 'elem', None, line=114, col=13)
Token(T_Colon, ':', None, line=114, col=17)
Token(T_Whitespace, ' ', None, line=114, col=18)
Token(T_Int, 'i32', None, line=114, col=19)
Token(T_Whitespace, ' ', None, line=114, col=22)
Token(T_Assign, '=', None, line=114, col=23)
Token(T_Whitespace, ' ', None, line=114, col=24)
Token(T_Id, 'arr', None, line=114, col=25)
Token(T_LB, '[', None, line=114, col=28)
Token(T_Id, 'idx', None, line=114, col=29)
Token(T_RB, ']', None, line=114, col=32)
Token(T_Semicolon, ';', None, line=114, col=33)
Token(T_Whitespace, '
        ', None, line=114, col=34)
Token(T_Print, 'println!', None, line=115, col=9)
Token(T_LP, '(', None, line=115, col=17)
Token(T_String, '"arr[{}] = {}"', None, line=115, col=18)
Token(T_Comma, ',', None, line=115, col=32)
Token(T_Whitespace, ' ', None, line=115, col=33)
Token(T_Id, 'idx', None, line=115, col=34)
Token(T_Comma, ',', None, line=115, col=37)
Token(T_Whitespace, ' ', None, line=115, col=38)
Token(T_Id, 'elem', None, line=115, col=39)
Token(T_RP, ')', None, line=115, col=43)
Token(T_Semicolon, ';', None, line=115, col=44)
Token(T_Whitespace, '
        ', None, line=115, col=45)
Token(T_Id, 'idx', None, line=116, col=9)
Token(T_Whitespace, ' ', None, line=116, col=12)
Token(T_Assign, '=', None, line=116, col=13)
Token(T_Whitespace, ' ', None, line=116, col=14)
Token(T_Id, 'idx', None, line=116, col=15)
Token(T_Whitespace, ' ', None, line=116, col=18)
Token(T_AOp_Trust, '+', None, line=116, col=19)
Token(T_Whitespace, ' ', None, line=116, col=20)
Token(T_Decimal, '1', 1, line=116, col=21)
Token(T_Semicolon, ';', None, line=116, col=22)
Token(T_Whitespace, '
    ', None, line=116, col=23)
Token(T_RC, '}', None, line=117, col=5)
Token(T_Whitespace, '
', None, line=117, col=6)
Token(T_RC, '}', None, line=118, col=1)
Token(T_Whitespace, '
', None, line=118, col=2)
Token(T_EOF, '', None, line=119, col=1)

Symbol Table:
x1: [(4, 5), (5, 1), (84, 8)]
x2: [(6, 5)]
x3: [(8, 5), (80, 41)]
x4: [(9, 5), (80, 49)]
b: [(10, 5), (43, 13), (49, 28), (50, 13), (51, 9), (87, 34)]
flag: [(11, 9), (87, 25), (89, 34)]
_hex: [(12, 5), (73, 49)]
decimal: [(13, 5), (73, 40), (87, 8), (89, 15)]
negative: [(14, 5)]
positive: [(15, 5)]
u: [(18, 6)]
v: [(18, 9)]
p: [(19, 6)]
q: [(19, 9)]
r: [(20, 6)]
s: [(20, 9)]
t: [(20, 12)]
arr1: [(23, 5)]
arr2: [(24, 5)]
arr3: [(25, 9), (26, 1)]
bools: [(27, 9)]
compute: [(33, 4), (78, 14)]
x: [(33, 12), (34, 18), (34, 27), (57, 13), (58, 13), (62, 8), (63, 12), (80, 37)]
y: [(33, 20), (34, 22), (34, 31), (57, 21), (58, 17), (62, 11), (63, 16), (80, 45)]
result: [(34, 9), (35, 8), (35, 25), (36, 40), (38, 12)]
fib: [(41, 4), (79, 44)]
n: [(41, 8), (46, 17)]
a: [(42, 13), (49, 24), (50, 9), (54, 12)]
i: [(44, 13), (46, 12), (52, 9), (52, 13)]
tmp: [(49, 13), (51, 13)]
multiply: [(57, 4)]
z: [(58, 9), (59, 12)]
add: [(62, 4)]
create_array: [(66, 4), (108, 15)]
array: [(67, 9), (68, 12)]
main: [(76, 4)]
c1: [(78, 9), (79, 40)]
cnt: [(96, 13), (98, 9), (98, 15), (99, 12), (102, 12)]
arr: [(108, 9), (114, 25)]
idx: [(109, 13), (111, 12), (114, 29), (115, 34), (116, 9), (116, 15)]
elem: [(114, 13), (115, 39)]

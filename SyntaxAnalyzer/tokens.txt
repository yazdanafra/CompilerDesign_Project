Token(T_Comment, '// Compute factorial of n (with explicit return type)
', None, line=1, col=1)
Token(T_Fn, 'fn', None, line=2, col=1)
Token(T_Whitespace, ' ', None, line=2, col=3)
Token(T_Id, 'factorial', None, line=2, col=4)
Token(T_LP, '(', None, line=2, col=13)
Token(T_Id, 'n', None, line=2, col=14)
Token(T_Colon, ':', None, line=2, col=15)
Token(T_Whitespace, ' ', None, line=2, col=16)
Token(T_Int, 'i32', None, line=2, col=17)
Token(T_RP, ')', None, line=2, col=20)
Token(T_Whitespace, ' ', None, line=2, col=21)
Token(T_Arrow, '->', None, line=2, col=22)
Token(T_Whitespace, ' ', None, line=2, col=24)
Token(T_Int, 'i32', None, line=2, col=25)
Token(T_Whitespace, ' ', None, line=2, col=28)
Token(T_LC, '{', None, line=2, col=29)
Token(T_Whitespace, '
    ', None, line=2, col=30)
Token(T_If, 'if', None, line=3, col=5)
Token(T_Whitespace, ' ', None, line=3, col=7)
Token(T_Id, 'n', None, line=3, col=8)
Token(T_Whitespace, ' ', None, line=3, col=9)
Token(T_ROp_LE, '<=', None, line=3, col=10)
Token(T_Whitespace, ' ', None, line=3, col=12)
Token(T_Decimal, '1', 1, line=3, col=13)
Token(T_Whitespace, ' ', None, line=3, col=14)
Token(T_LC, '{', None, line=3, col=15)
Token(T_Whitespace, '
        ', None, line=3, col=16)
Token(T_Return, 'return', None, line=4, col=9)
Token(T_Whitespace, ' ', None, line=4, col=15)
Token(T_Decimal, '1', 1, line=4, col=16)
Token(T_Semicolon, ';', None, line=4, col=17)
Token(T_Whitespace, '
    ', None, line=4, col=18)
Token(T_RC, '}', None, line=5, col=5)
Token(T_Whitespace, ' ', None, line=5, col=6)
Token(T_Else, 'else', None, line=5, col=7)
Token(T_Whitespace, ' ', None, line=5, col=11)
Token(T_LC, '{', None, line=5, col=12)
Token(T_Whitespace, '
        ', None, line=5, col=13)
Token(T_Return, 'return', None, line=6, col=9)
Token(T_Whitespace, ' ', None, line=6, col=15)
Token(T_Id, 'n', None, line=6, col=16)
Token(T_Whitespace, ' ', None, line=6, col=17)
Token(T_AOp_ML, '*', None, line=6, col=18)
Token(T_Whitespace, ' ', None, line=6, col=19)
Token(T_Id, 'factorial', None, line=6, col=20)
Token(T_LP, '(', None, line=6, col=29)
Token(T_Id, 'n', None, line=6, col=30)
Token(T_Whitespace, ' ', None, line=6, col=31)
Token(T_AOp_MN, '-', None, line=6, col=32)
Token(T_Whitespace, ' ', None, line=6, col=33)
Token(T_Decimal, '1', 1, line=6, col=34)
Token(T_RP, ')', None, line=6, col=35)
Token(T_Semicolon, ';', None, line=6, col=36)
Token(T_Whitespace, '
    ', None, line=6, col=37)
Token(T_RC, '}', None, line=7, col=5)
Token(T_Whitespace, '
', None, line=7, col=6)
Token(T_RC, '}', None, line=8, col=1)
Token(T_Whitespace, '

', None, line=8, col=2)
Token(T_Comment, '// Swap two i32s and return a tuple
', None, line=10, col=1)
Token(T_Fn, 'fn', None, line=11, col=1)
Token(T_Whitespace, ' ', None, line=11, col=3)
Token(T_Id, 'swap', None, line=11, col=4)
Token(T_LP, '(', None, line=11, col=8)
Token(T_Id, 'a', None, line=11, col=9)
Token(T_Colon, ':', None, line=11, col=10)
Token(T_Whitespace, ' ', None, line=11, col=11)
Token(T_Int, 'i32', None, line=11, col=12)
Token(T_Comma, ',', None, line=11, col=15)
Token(T_Whitespace, ' ', None, line=11, col=16)
Token(T_Id, 'b', None, line=11, col=17)
Token(T_Colon, ':', None, line=11, col=18)
Token(T_Whitespace, ' ', None, line=11, col=19)
Token(T_Int, 'i32', None, line=11, col=20)
Token(T_RP, ')', None, line=11, col=23)
Token(T_Whitespace, ' ', None, line=11, col=24)
Token(T_Arrow, '->', None, line=11, col=25)
Token(T_Whitespace, ' ', None, line=11, col=27)
Token(T_LP, '(', None, line=11, col=28)
Token(T_Int, 'i32', None, line=11, col=29)
Token(T_Comma, ',', None, line=11, col=32)
Token(T_Whitespace, ' ', None, line=11, col=33)
Token(T_Int, 'i32', None, line=11, col=34)
Token(T_RP, ')', None, line=11, col=37)
Token(T_Whitespace, ' ', None, line=11, col=38)
Token(T_LC, '{', None, line=11, col=39)
Token(T_Whitespace, '
    ', None, line=11, col=40)
Token(T_Return, 'return', None, line=12, col=5)
Token(T_Whitespace, ' ', None, line=12, col=11)
Token(T_LP, '(', None, line=12, col=12)
Token(T_Id, 'b', None, line=12, col=13)
Token(T_Comma, ',', None, line=12, col=14)
Token(T_Whitespace, ' ', None, line=12, col=15)
Token(T_Id, 'a', None, line=12, col=16)
Token(T_RP, ')', None, line=12, col=17)
Token(T_Semicolon, ';', None, line=12, col=18)
Token(T_Whitespace, '
', None, line=12, col=19)
Token(T_RC, '}', None, line=13, col=1)
Token(T_Whitespace, '

', None, line=13, col=2)
Token(T_Comment, '// Void function: prints a greeting
', None, line=15, col=1)
Token(T_Fn, 'fn', None, line=16, col=1)
Token(T_Whitespace, ' ', None, line=16, col=3)
Token(T_Id, 'print_message', None, line=16, col=4)
Token(T_LP, '(', None, line=16, col=17)
Token(T_RP, ')', None, line=16, col=18)
Token(T_Whitespace, ' ', None, line=16, col=19)
Token(T_LC, '{', None, line=16, col=20)
Token(T_Whitespace, '
    ', None, line=16, col=21)
Token(T_Print, 'println!', None, line=17, col=5)
Token(T_LP, '(', None, line=17, col=13)
Token(T_String, '"Hello from Trust!"', None, line=17, col=14)
Token(T_RP, ')', None, line=17, col=33)
Token(T_Semicolon, ';', None, line=17, col=34)
Token(T_Whitespace, '
', None, line=17, col=35)
Token(T_RC, '}', None, line=18, col=1)
Token(T_Whitespace, '

', None, line=18, col=2)
Token(T_Comment, '// Sum the elements of a fixed-size i32 array (1-based indexing)
', None, line=20, col=1)
Token(T_Fn, 'fn', None, line=21, col=1)
Token(T_Whitespace, ' ', None, line=21, col=3)
Token(T_Id, 'sum_array', None, line=21, col=4)
Token(T_LP, '(', None, line=21, col=13)
Token(T_Id, 'arr', None, line=21, col=14)
Token(T_Colon, ':', None, line=21, col=17)
Token(T_Whitespace, ' ', None, line=21, col=18)
Token(T_LB, '[', None, line=21, col=19)
Token(T_Int, 'i32', None, line=21, col=20)
Token(T_Semicolon, ';', None, line=21, col=23)
Token(T_Decimal, '5', 5, line=21, col=24)
Token(T_RB, ']', None, line=21, col=25)
Token(T_RP, ')', None, line=21, col=26)
Token(T_Whitespace, ' ', None, line=21, col=27)
Token(T_Arrow, '->', None, line=21, col=28)
Token(T_Whitespace, ' ', None, line=21, col=30)
Token(T_Int, 'i32', None, line=21, col=31)
Token(T_Whitespace, ' ', None, line=21, col=34)
Token(T_LC, '{', None, line=21, col=35)
Token(T_Whitespace, '
    ', None, line=21, col=36)
Token(T_Comment, '// We index 1..5 because array indices must be > 0
', None, line=22, col=5)
Token(T_Whitespace, '    ', None, line=23, col=1)
Token(T_Return, 'return', None, line=23, col=5)
Token(T_Whitespace, ' ', None, line=23, col=11)
Token(T_Id, 'arr', None, line=23, col=12)
Token(T_LB, '[', None, line=23, col=15)
Token(T_Decimal, '1', 1, line=23, col=16)
Token(T_RB, ']', None, line=23, col=17)
Token(T_Whitespace, ' ', None, line=23, col=18)
Token(T_AOp_Trust, '+', None, line=23, col=19)
Token(T_Whitespace, ' ', None, line=23, col=20)
Token(T_Id, 'arr', None, line=23, col=21)
Token(T_LB, '[', None, line=23, col=24)
Token(T_Decimal, '2', 2, line=23, col=25)
Token(T_RB, ']', None, line=23, col=26)
Token(T_Whitespace, ' ', None, line=23, col=27)
Token(T_AOp_Trust, '+', None, line=23, col=28)
Token(T_Whitespace, ' ', None, line=23, col=29)
Token(T_Id, 'arr', None, line=23, col=30)
Token(T_LB, '[', None, line=23, col=33)
Token(T_Decimal, '3', 3, line=23, col=34)
Token(T_RB, ']', None, line=23, col=35)
Token(T_Whitespace, ' ', None, line=23, col=36)
Token(T_AOp_Trust, '+', None, line=23, col=37)
Token(T_Whitespace, ' ', None, line=23, col=38)
Token(T_Id, 'arr', None, line=23, col=39)
Token(T_LB, '[', None, line=23, col=42)
Token(T_Decimal, '4', 4, line=23, col=43)
Token(T_RB, ']', None, line=23, col=44)
Token(T_Whitespace, ' ', None, line=23, col=45)
Token(T_AOp_Trust, '+', None, line=23, col=46)
Token(T_Whitespace, ' ', None, line=23, col=47)
Token(T_Id, 'arr', None, line=23, col=48)
Token(T_LB, '[', None, line=23, col=51)
Token(T_Decimal, '5', 5, line=23, col=52)
Token(T_RB, ']', None, line=23, col=53)
Token(T_Semicolon, ';', None, line=23, col=54)
Token(T_Whitespace, '
', None, line=23, col=55)
Token(T_RC, '}', None, line=24, col=1)
Token(T_Whitespace, '

', None, line=24, col=2)
Token(T_Fn, 'fn', None, line=26, col=1)
Token(T_Whitespace, ' ', None, line=26, col=3)
Token(T_Id, 'main', None, line=26, col=4)
Token(T_LP, '(', None, line=26, col=8)
Token(T_RP, ')', None, line=26, col=9)
Token(T_Whitespace, ' ', None, line=26, col=10)
Token(T_LC, '{', None, line=26, col=11)
Token(T_Whitespace, '
    ', None, line=26, col=12)
Token(T_Comment, '// --- Variables & mutability ---
', None, line=27, col=5)
Token(T_Whitespace, '    ', None, line=28, col=1)
Token(T_Let, 'let', None, line=28, col=5)
Token(T_Whitespace, ' ', None, line=28, col=8)
Token(T_Mut, 'mut', None, line=28, col=9)
Token(T_Whitespace, ' ', None, line=28, col=12)
Token(T_Id, 'x', None, line=28, col=13)
Token(T_Colon, ':', None, line=28, col=14)
Token(T_Whitespace, ' ', None, line=28, col=15)
Token(T_Int, 'i32', None, line=28, col=16)
Token(T_Whitespace, ' ', None, line=28, col=19)
Token(T_Assign, '=', None, line=28, col=20)
Token(T_Whitespace, ' ', None, line=28, col=21)
Token(T_Decimal, '5', 5, line=28, col=22)
Token(T_Semicolon, ';', None, line=28, col=23)
Token(T_Whitespace, '
    ', None, line=28, col=24)
Token(T_Let, 'let', None, line=29, col=5)
Token(T_Whitespace, ' ', None, line=29, col=8)
Token(T_Id, 'f', None, line=29, col=9)
Token(T_Colon, ':', None, line=29, col=10)
Token(T_Whitespace, ' ', None, line=29, col=11)
Token(T_Int, 'i32', None, line=29, col=12)
Token(T_Whitespace, ' ', None, line=29, col=15)
Token(T_Assign, '=', None, line=29, col=16)
Token(T_Whitespace, ' ', None, line=29, col=17)
Token(T_Id, 'factorial', None, line=29, col=18)
Token(T_LP, '(', None, line=29, col=27)
Token(T_Id, 'x', None, line=29, col=28)
Token(T_RP, ')', None, line=29, col=29)
Token(T_Semicolon, ';', None, line=29, col=30)
Token(T_Whitespace, '
    ', None, line=29, col=31)
Token(T_Print, 'println!', None, line=30, col=5)
Token(T_LP, '(', None, line=30, col=13)
Token(T_String, '"factorial {} = {}"', None, line=30, col=14)
Token(T_Comma, ',', None, line=30, col=33)
Token(T_Whitespace, ' ', None, line=30, col=34)
Token(T_Id, 'x', None, line=30, col=35)
Token(T_Comma, ',', None, line=30, col=36)
Token(T_Whitespace, ' ', None, line=30, col=37)
Token(T_Id, 'f', None, line=30, col=38)
Token(T_RP, ')', None, line=30, col=39)
Token(T_Semicolon, ';', None, line=30, col=40)
Token(T_Whitespace, '

    ', None, line=30, col=41)
Token(T_Comment, '// --- Tuple return & destructuring ---
', None, line=32, col=5)
Token(T_Whitespace, '    ', None, line=33, col=1)
Token(T_Let, 'let', None, line=33, col=5)
Token(T_Whitespace, ' ', None, line=33, col=8)
Token(T_LP, '(', None, line=33, col=9)
Token(T_Id, 'a', None, line=33, col=10)
Token(T_Comma, ',', None, line=33, col=11)
Token(T_Whitespace, ' ', None, line=33, col=12)
Token(T_Id, 'b', None, line=33, col=13)
Token(T_RP, ')', None, line=33, col=14)
Token(T_Colon, ':', None, line=33, col=15)
Token(T_Whitespace, ' ', None, line=33, col=16)
Token(T_LP, '(', None, line=33, col=17)
Token(T_Int, 'i32', None, line=33, col=18)
Token(T_Comma, ',', None, line=33, col=21)
Token(T_Whitespace, ' ', None, line=33, col=22)
Token(T_Int, 'i32', None, line=33, col=23)
Token(T_RP, ')', None, line=33, col=26)
Token(T_Whitespace, ' ', None, line=33, col=27)
Token(T_Assign, '=', None, line=33, col=28)
Token(T_Whitespace, ' ', None, line=33, col=29)
Token(T_Id, 'swap', None, line=33, col=30)
Token(T_LP, '(', None, line=33, col=34)
Token(T_Decimal, '3', 3, line=33, col=35)
Token(T_Comma, ',', None, line=33, col=36)
Token(T_Whitespace, ' ', None, line=33, col=37)
Token(T_Decimal, '4', 4, line=33, col=38)
Token(T_RP, ')', None, line=33, col=39)
Token(T_Semicolon, ';', None, line=33, col=40)
Token(T_Whitespace, '
    ', None, line=33, col=41)
Token(T_Print, 'println!', None, line=34, col=5)
Token(T_LP, '(', None, line=34, col=13)
Token(T_String, '"swap(3,4) = ({}, {})"', None, line=34, col=14)
Token(T_Comma, ',', None, line=34, col=36)
Token(T_Whitespace, ' ', None, line=34, col=37)
Token(T_Id, 'a', None, line=34, col=38)
Token(T_Comma, ',', None, line=34, col=39)
Token(T_Whitespace, ' ', None, line=34, col=40)
Token(T_Id, 'b', None, line=34, col=41)
Token(T_RP, ')', None, line=34, col=42)
Token(T_Semicolon, ';', None, line=34, col=43)
Token(T_Whitespace, '

    ', None, line=34, col=44)
Token(T_Comment, '// --- Void call ---
', None, line=36, col=5)
Token(T_Whitespace, '    ', None, line=37, col=1)
Token(T_Id, 'print_message', None, line=37, col=5)
Token(T_LP, '(', None, line=37, col=18)
Token(T_RP, ')', None, line=37, col=19)
Token(T_Semicolon, ';', None, line=37, col=20)
Token(T_Whitespace, '

    ', None, line=37, col=21)
Token(T_Comment, '// --- Array indexing & summing ---
', None, line=39, col=5)
Token(T_Whitespace, '    ', None, line=40, col=1)
Token(T_Let, 'let', None, line=40, col=5)
Token(T_Whitespace, ' ', None, line=40, col=8)
Token(T_Id, 'arr', None, line=40, col=9)
Token(T_Colon, ':', None, line=40, col=12)
Token(T_Whitespace, ' ', None, line=40, col=13)
Token(T_LB, '[', None, line=40, col=14)
Token(T_Int, 'i32', None, line=40, col=15)
Token(T_Semicolon, ';', None, line=40, col=18)
Token(T_Decimal, '5', 5, line=40, col=19)
Token(T_RB, ']', None, line=40, col=20)
Token(T_Whitespace, ' ', None, line=40, col=21)
Token(T_Assign, '=', None, line=40, col=22)
Token(T_Whitespace, ' ', None, line=40, col=23)
Token(T_LB, '[', None, line=40, col=24)
Token(T_Decimal, '10', 10, line=40, col=25)
Token(T_Comma, ',', None, line=40, col=27)
Token(T_Whitespace, ' ', None, line=40, col=28)
Token(T_Decimal, '20', 20, line=40, col=29)
Token(T_Comma, ',', None, line=40, col=31)
Token(T_Whitespace, ' ', None, line=40, col=32)
Token(T_Decimal, '30', 30, line=40, col=33)
Token(T_Comma, ',', None, line=40, col=35)
Token(T_Whitespace, ' ', None, line=40, col=36)
Token(T_Decimal, '40', 40, line=40, col=37)
Token(T_Comma, ',', None, line=40, col=39)
Token(T_Whitespace, ' ', None, line=40, col=40)
Token(T_Decimal, '50', 50, line=40, col=41)
Token(T_RB, ']', None, line=40, col=43)
Token(T_Semicolon, ';', None, line=40, col=44)
Token(T_Whitespace, '
    ', None, line=40, col=45)
Token(T_Let, 'let', None, line=41, col=5)
Token(T_Whitespace, ' ', None, line=41, col=8)
Token(T_Id, 'total', None, line=41, col=9)
Token(T_Colon, ':', None, line=41, col=14)
Token(T_Whitespace, ' ', None, line=41, col=15)
Token(T_Int, 'i32', None, line=41, col=16)
Token(T_Whitespace, ' ', None, line=41, col=19)
Token(T_Assign, '=', None, line=41, col=20)
Token(T_Whitespace, ' ', None, line=41, col=21)
Token(T_Id, 'sum_array', None, line=41, col=22)
Token(T_LP, '(', None, line=41, col=31)
Token(T_Id, 'arr', None, line=41, col=32)
Token(T_RP, ')', None, line=41, col=35)
Token(T_Semicolon, ';', None, line=41, col=36)
Token(T_Whitespace, '
    ', None, line=41, col=37)
Token(T_Print, 'println!', None, line=42, col=5)
Token(T_LP, '(', None, line=42, col=13)
Token(T_String, '"sum of array = {}"', None, line=42, col=14)
Token(T_Comma, ',', None, line=42, col=33)
Token(T_Whitespace, ' ', None, line=42, col=34)
Token(T_Id, 'total', None, line=42, col=35)
Token(T_RP, ')', None, line=42, col=40)
Token(T_Semicolon, ';', None, line=42, col=41)
Token(T_Whitespace, '

    ', None, line=42, col=42)
Token(T_Comment, '// --- If condition ---
', None, line=44, col=5)
Token(T_Whitespace, '    ', None, line=45, col=1)
Token(T_If, 'if', None, line=45, col=5)
Token(T_Whitespace, ' ', None, line=45, col=7)
Token(T_Id, 'total', None, line=45, col=8)
Token(T_Whitespace, ' ', None, line=45, col=13)
Token(T_ROp_G, '>', None, line=45, col=14)
Token(T_Whitespace, ' ', None, line=45, col=15)
Token(T_Decimal, '100', 100, line=45, col=16)
Token(T_Whitespace, ' ', None, line=45, col=19)
Token(T_LC, '{', None, line=45, col=20)
Token(T_Whitespace, '
        ', None, line=45, col=21)
Token(T_Print, 'println!', None, line=46, col=9)
Token(T_LP, '(', None, line=46, col=17)
Token(T_String, '"Total is large: {}"', None, line=46, col=18)
Token(T_Comma, ',', None, line=46, col=38)
Token(T_Whitespace, ' ', None, line=46, col=39)
Token(T_Id, 'total', None, line=46, col=40)
Token(T_RP, ')', None, line=46, col=45)
Token(T_Semicolon, ';', None, line=46, col=46)
Token(T_Whitespace, '
    ', None, line=46, col=47)
Token(T_RC, '}', None, line=47, col=5)
Token(T_Whitespace, ' ', None, line=47, col=6)
Token(T_Else, 'else', None, line=47, col=7)
Token(T_Whitespace, ' ', None, line=47, col=11)
Token(T_LC, '{', None, line=47, col=12)
Token(T_Whitespace, '
        ', None, line=47, col=13)
Token(T_Print, 'println!', None, line=48, col=9)
Token(T_LP, '(', None, line=48, col=17)
Token(T_String, '"Total is modest: {}"', None, line=48, col=18)
Token(T_Comma, ',', None, line=48, col=39)
Token(T_Whitespace, ' ', None, line=48, col=40)
Token(T_Id, 'total', None, line=48, col=41)
Token(T_RP, ')', None, line=48, col=46)
Token(T_Semicolon, ';', None, line=48, col=47)
Token(T_Whitespace, '
    ', None, line=48, col=48)
Token(T_RC, '}', None, line=49, col=5)
Token(T_Whitespace, '

    ', None, line=49, col=6)
Token(T_Comment, '// --- Loop with break & continue ---
', None, line=51, col=5)
Token(T_Whitespace, '    ', None, line=52, col=1)
Token(T_Let, 'let', None, line=52, col=5)
Token(T_Whitespace, ' ', None, line=52, col=8)
Token(T_Mut, 'mut', None, line=52, col=9)
Token(T_Whitespace, ' ', None, line=52, col=12)
Token(T_Id, 'idx', None, line=52, col=13)
Token(T_Colon, ':', None, line=52, col=16)
Token(T_Whitespace, ' ', None, line=52, col=17)
Token(T_Int, 'i32', None, line=52, col=18)
Token(T_Whitespace, ' ', None, line=52, col=21)
Token(T_Assign, '=', None, line=52, col=22)
Token(T_Whitespace, ' ', None, line=52, col=23)
Token(T_Decimal, '1', 1, line=52, col=24)
Token(T_Semicolon, ';', None, line=52, col=25)
Token(T_Whitespace, '
    ', None, line=52, col=26)
Token(T_Loop, 'loop', None, line=53, col=5)
Token(T_Whitespace, ' ', None, line=53, col=9)
Token(T_LC, '{', None, line=53, col=10)
Token(T_Whitespace, '
        ', None, line=53, col=11)
Token(T_If, 'if', None, line=54, col=9)
Token(T_Whitespace, ' ', None, line=54, col=11)
Token(T_Id, 'idx', None, line=54, col=12)
Token(T_Whitespace, ' ', None, line=54, col=15)
Token(T_ROp_G, '>', None, line=54, col=16)
Token(T_Whitespace, ' ', None, line=54, col=17)
Token(T_Decimal, '3', 3, line=54, col=18)
Token(T_Whitespace, ' ', None, line=54, col=19)
Token(T_LC, '{', None, line=54, col=20)
Token(T_Whitespace, '
            ', None, line=54, col=21)
Token(T_Break, 'break', None, line=55, col=13)
Token(T_Semicolon, ';', None, line=55, col=18)
Token(T_Whitespace, '
        ', None, line=55, col=19)
Token(T_RC, '}', None, line=56, col=9)
Token(T_Whitespace, '
        ', None, line=56, col=10)
Token(T_If, 'if', None, line=57, col=9)
Token(T_Whitespace, ' ', None, line=57, col=11)
Token(T_Id, 'idx', None, line=57, col=12)
Token(T_Whitespace, ' ', None, line=57, col=15)
Token(T_ROp_E, '==', None, line=57, col=16)
Token(T_Whitespace, ' ', None, line=57, col=18)
Token(T_Decimal, '2', 2, line=57, col=19)
Token(T_Whitespace, ' ', None, line=57, col=20)
Token(T_LC, '{', None, line=57, col=21)
Token(T_Whitespace, '
            ', None, line=57, col=22)
Token(T_Id, 'idx', None, line=58, col=13)
Token(T_Whitespace, ' ', None, line=58, col=16)
Token(T_Assign, '=', None, line=58, col=17)
Token(T_Whitespace, ' ', None, line=58, col=18)
Token(T_Id, 'idx', None, line=58, col=19)
Token(T_Whitespace, ' ', None, line=58, col=22)
Token(T_AOp_Trust, '+', None, line=58, col=23)
Token(T_Whitespace, ' ', None, line=58, col=24)
Token(T_Decimal, '1', 1, line=58, col=25)
Token(T_Semicolon, ';', None, line=58, col=26)
Token(T_Whitespace, '
            ', None, line=58, col=27)
Token(T_Continue, 'continue', None, line=59, col=13)
Token(T_Semicolon, ';', None, line=59, col=21)
Token(T_Whitespace, '
        ', None, line=59, col=22)
Token(T_RC, '}', None, line=60, col=9)
Token(T_Whitespace, '
        ', None, line=60, col=10)
Token(T_Print, 'println!', None, line=61, col=9)
Token(T_LP, '(', None, line=61, col=17)
Token(T_String, '"idx = {}"', None, line=61, col=18)
Token(T_Comma, ',', None, line=61, col=28)
Token(T_Whitespace, ' ', None, line=61, col=29)
Token(T_Id, 'idx', None, line=61, col=30)
Token(T_RP, ')', None, line=61, col=33)
Token(T_Semicolon, ';', None, line=61, col=34)
Token(T_Whitespace, '
        ', None, line=61, col=35)
Token(T_Id, 'idx', None, line=62, col=9)
Token(T_Whitespace, ' ', None, line=62, col=12)
Token(T_Assign, '=', None, line=62, col=13)
Token(T_Whitespace, ' ', None, line=62, col=14)
Token(T_Id, 'idx', None, line=62, col=15)
Token(T_Whitespace, ' ', None, line=62, col=18)
Token(T_AOp_Trust, '+', None, line=62, col=19)
Token(T_Whitespace, ' ', None, line=62, col=20)
Token(T_Decimal, '1', 1, line=62, col=21)
Token(T_Semicolon, ';', None, line=62, col=22)
Token(T_Whitespace, '
    ', None, line=62, col=23)
Token(T_RC, '}', None, line=63, col=5)
Token(T_Whitespace, '
', None, line=63, col=6)
Token(T_RC, '}', None, line=64, col=1)
Token(T_Whitespace, '
', None, line=64, col=2)
Token(T_EOF, '', None, line=65, col=1)

Symbol Table:
factorial: [(2, 4), (6, 20), (29, 18)]
n: [(2, 14), (3, 8), (6, 16), (6, 30)]
swap: [(11, 4), (33, 30)]
a: [(11, 9), (12, 16), (33, 10), (34, 38)]
b: [(11, 17), (12, 13), (33, 13), (34, 41)]
print_message: [(16, 4), (37, 5)]
sum_array: [(21, 4), (41, 22)]
arr: [(21, 14), (23, 12), (23, 21), (23, 30), (23, 39), (23, 48), (40, 9), (41, 32)]
main: [(26, 4)]
x: [(28, 13), (29, 28), (30, 35)]
f: [(29, 9), (30, 38)]
total: [(41, 9), (42, 35), (45, 8), (46, 40), (48, 41)]
idx: [(52, 13), (54, 12), (57, 12), (58, 13), (58, 19), (61, 30), (62, 9), (62, 15)]

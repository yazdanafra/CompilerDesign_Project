Token(T_Comment, '// Single-line comment: Testing all tokens and syntax elements of Trust language
', None, line=1, col=1)
Token(T_Whitespace, '
', None, line=2, col=1)
Token(T_Comment, '// Top-level variable declarations and assignments
', None, line=3, col=1)
Token(T_Let, 'let', None, line=4, col=1)
Token(T_Whitespace, ' ', None, line=4, col=4)
Token(T_Id, 'x1', None, line=4, col=5)
Token(T_Semicolon, ';', None, line=4, col=7)
Token(T_Whitespace, '
', None, line=4, col=8)
Token(T_Id, 'x1', None, line=5, col=1)
Token(T_Whitespace, ' ', None, line=5, col=3)
Token(T_Assign, '=', None, line=5, col=4)
Token(T_Whitespace, ' ', None, line=5, col=5)
Token(T_Decimal, '10', 10, line=5, col=6)
Token(T_Semicolon, ';', None, line=5, col=8)
Token(T_Whitespace, '
', None, line=5, col=9)
Token(T_Let, 'let', None, line=6, col=1)
Token(T_Whitespace, ' ', None, line=6, col=4)
Token(T_Id, 'x2', None, line=6, col=5)
Token(T_Colon, ':', None, line=6, col=7)
Token(T_Whitespace, ' ', None, line=6, col=8)
Token(T_Int, 'i32', None, line=6, col=9)
Token(T_Semicolon, ';', None, line=6, col=12)
Token(T_Whitespace, '
', None, line=6, col=13)
Token(T_Let, 'let', None, line=7, col=1)
Token(T_Whitespace, ' ', None, line=7, col=4)
Token(T_Id, 'x3', None, line=7, col=5)
Token(T_Whitespace, ' ', None, line=7, col=7)
Token(T_Assign, '=', None, line=7, col=8)
Token(T_Whitespace, ' ', None, line=7, col=9)
Token(T_Decimal, '12', 12, line=7, col=10)
Token(T_Semicolon, ';', None, line=7, col=12)
Token(T_Whitespace, '
', None, line=7, col=13)
Token(T_Let, 'let', None, line=8, col=1)
Token(T_Whitespace, ' ', None, line=8, col=4)
Token(T_Id, 'x4', None, line=8, col=5)
Token(T_Colon, ':', None, line=8, col=7)
Token(T_Whitespace, ' ', None, line=8, col=8)
Token(T_Int, 'i32', None, line=8, col=9)
Token(T_Whitespace, ' ', None, line=8, col=12)
Token(T_Assign, '=', None, line=8, col=13)
Token(T_Whitespace, ' ', None, line=8, col=14)
Token(T_Decimal, '5', 5, line=8, col=15)
Token(T_Semicolon, ';', None, line=8, col=16)
Token(T_Whitespace, '
', None, line=8, col=17)
Token(T_Let, 'let', None, line=9, col=1)
Token(T_Whitespace, ' ', None, line=9, col=4)
Token(T_Id, 'b', None, line=9, col=5)
Token(T_Colon, ':', None, line=9, col=6)
Token(T_Whitespace, ' ', None, line=9, col=7)
Token(T_Bool, 'bool', None, line=9, col=8)
Token(T_Whitespace, ' ', None, line=9, col=12)
Token(T_Assign, '=', None, line=9, col=13)
Token(T_Whitespace, ' ', None, line=9, col=14)
Token(T_True, 'true', None, line=9, col=15)
Token(T_Semicolon, ';', None, line=9, col=19)
Token(T_Whitespace, '
', None, line=9, col=20)
Token(T_Mut, 'mut', None, line=10, col=1)
Token(T_Whitespace, ' ', None, line=10, col=4)
Token(T_Id, 'flag', None, line=10, col=5)
Token(T_Colon, ':', None, line=10, col=9)
Token(T_Whitespace, ' ', None, line=10, col=10)
Token(T_Bool, 'bool', None, line=10, col=11)
Token(T_Whitespace, ' ', None, line=10, col=15)
Token(T_Assign, '=', None, line=10, col=16)
Token(T_Whitespace, ' ', None, line=10, col=17)
Token(T_False, 'false', None, line=10, col=18)
Token(T_Semicolon, ';', None, line=10, col=23)
Token(T_Whitespace, '
', None, line=10, col=24)
Token(T_Let, 'let', None, line=11, col=1)
Token(T_Whitespace, ' ', None, line=11, col=4)
Token(T_Id, '_hex', None, line=11, col=5)
Token(T_Colon, ':', None, line=11, col=9)
Token(T_Whitespace, ' ', None, line=11, col=10)
Token(T_Int, 'i32', None, line=11, col=11)
Token(T_Whitespace, ' ', None, line=11, col=14)
Token(T_Assign, '=', None, line=11, col=15)
Token(T_Whitespace, ' ', None, line=11, col=16)
Token(T_Hexadecimal, '0xFF', 255, line=11, col=17)
Token(T_Semicolon, ';', None, line=11, col=21)
Token(T_Whitespace, '
', None, line=11, col=22)
Token(T_Let, 'let', None, line=12, col=1)
Token(T_Whitespace, ' ', None, line=12, col=4)
Token(T_Id, 'decimal', None, line=12, col=5)
Token(T_Colon, ':', None, line=12, col=12)
Token(T_Whitespace, ' ', None, line=12, col=13)
Token(T_Int, 'i32', None, line=12, col=14)
Token(T_Whitespace, ' ', None, line=12, col=17)
Token(T_Assign, '=', None, line=12, col=18)
Token(T_Whitespace, ' ', None, line=12, col=19)
Token(T_Decimal, '255', 255, line=12, col=20)
Token(T_Semicolon, ';', None, line=12, col=23)
Token(T_Whitespace, '
', None, line=12, col=24)
Token(T_Let, 'let', None, line=13, col=1)
Token(T_Whitespace, ' ', None, line=13, col=4)
Token(T_Id, 'negative', None, line=13, col=5)
Token(T_Colon, ':', None, line=13, col=13)
Token(T_Whitespace, ' ', None, line=13, col=14)
Token(T_Int, 'i32', None, line=13, col=15)
Token(T_Whitespace, ' ', None, line=13, col=18)
Token(T_Assign, '=', None, line=13, col=19)
Token(T_Whitespace, ' ', None, line=13, col=20)
Token(T_AOp_MN, '-', None, line=13, col=21)
Token(T_Decimal, '42', 42, line=13, col=22)
Token(T_Semicolon, ';', None, line=13, col=24)
Token(T_Whitespace, '
', None, line=13, col=25)
Token(T_Let, 'let', None, line=14, col=1)
Token(T_Whitespace, ' ', None, line=14, col=4)
Token(T_Id, 'positive', None, line=14, col=5)
Token(T_Colon, ':', None, line=14, col=13)
Token(T_Whitespace, ' ', None, line=14, col=14)
Token(T_Int, 'i32', None, line=14, col=15)
Token(T_Whitespace, ' ', None, line=14, col=18)
Token(T_Assign, '=', None, line=14, col=19)
Token(T_Whitespace, ' ', None, line=14, col=20)
Token(T_AOp_Trust, '+', None, line=14, col=21)
Token(T_Decimal, '42', 42, line=14, col=22)
Token(T_Semicolon, ';', None, line=14, col=24)
Token(T_Whitespace, '

', None, line=14, col=25)
Token(T_Comment, '// Tuple declarations and destructuring
', None, line=16, col=1)
Token(T_Let, 'let', None, line=17, col=1)
Token(T_Whitespace, ' ', None, line=17, col=4)
Token(T_LP, '(', None, line=17, col=5)
Token(T_Id, 'u', None, line=17, col=6)
Token(T_Comma, ',', None, line=17, col=7)
Token(T_Whitespace, ' ', None, line=17, col=8)
Token(T_Id, 'v', None, line=17, col=9)
Token(T_RP, ')', None, line=17, col=10)
Token(T_Whitespace, ' ', None, line=17, col=11)
Token(T_Colon, ':', None, line=17, col=12)
Token(T_Whitespace, ' ', None, line=17, col=13)
Token(T_LP, '(', None, line=17, col=14)
Token(T_Int, 'i32', None, line=17, col=15)
Token(T_Comma, ',', None, line=17, col=18)
Token(T_Whitespace, ' ', None, line=17, col=19)
Token(T_Bool, 'bool', None, line=17, col=20)
Token(T_RP, ')', None, line=17, col=24)
Token(T_Semicolon, ';', None, line=17, col=25)
Token(T_Whitespace, '
', None, line=17, col=26)
Token(T_Let, 'let', None, line=18, col=1)
Token(T_Whitespace, ' ', None, line=18, col=4)
Token(T_LP, '(', None, line=18, col=5)
Token(T_Id, 'p', None, line=18, col=6)
Token(T_Comma, ',', None, line=18, col=7)
Token(T_Whitespace, ' ', None, line=18, col=8)
Token(T_Id, 'q', None, line=18, col=9)
Token(T_RP, ')', None, line=18, col=10)
Token(T_Whitespace, ' ', None, line=18, col=11)
Token(T_Assign, '=', None, line=18, col=12)
Token(T_Whitespace, ' ', None, line=18, col=13)
Token(T_LP, '(', None, line=18, col=14)
Token(T_Decimal, '1', 1, line=18, col=15)
Token(T_Comma, ',', None, line=18, col=16)
Token(T_Whitespace, ' ', None, line=18, col=17)
Token(T_True, 'true', None, line=18, col=18)
Token(T_RP, ')', None, line=18, col=22)
Token(T_Semicolon, ';', None, line=18, col=23)
Token(T_Whitespace, '
', None, line=18, col=24)
Token(T_Let, 'let', None, line=19, col=1)
Token(T_Whitespace, ' ', None, line=19, col=4)
Token(T_LP, '(', None, line=19, col=5)
Token(T_Id, 'r', None, line=19, col=6)
Token(T_Comma, ',', None, line=19, col=7)
Token(T_Whitespace, ' ', None, line=19, col=8)
Token(T_Id, 's', None, line=19, col=9)
Token(T_Comma, ',', None, line=19, col=10)
Token(T_Whitespace, ' ', None, line=19, col=11)
Token(T_Id, 't', None, line=19, col=12)
Token(T_RP, ')', None, line=19, col=13)
Token(T_Whitespace, ' ', None, line=19, col=14)
Token(T_Colon, ':', None, line=19, col=15)
Token(T_Whitespace, ' ', None, line=19, col=16)
Token(T_LP, '(', None, line=19, col=17)
Token(T_Int, 'i32', None, line=19, col=18)
Token(T_Comma, ',', None, line=19, col=21)
Token(T_Whitespace, ' ', None, line=19, col=22)
Token(T_Bool, 'bool', None, line=19, col=23)
Token(T_Comma, ',', None, line=19, col=27)
Token(T_Whitespace, ' ', None, line=19, col=28)
Token(T_Bool, 'bool', None, line=19, col=29)
Token(T_RP, ')', None, line=19, col=33)
Token(T_Whitespace, ' ', None, line=19, col=34)
Token(T_Assign, '=', None, line=19, col=35)
Token(T_Whitespace, ' ', None, line=19, col=36)
Token(T_LP, '(', None, line=19, col=37)
Token(T_Decimal, '2', 2, line=19, col=38)
Token(T_Comma, ',', None, line=19, col=39)
Token(T_Whitespace, ' ', None, line=19, col=40)
Token(T_False, 'false', None, line=19, col=41)
Token(T_Comma, ',', None, line=19, col=46)
Token(T_Whitespace, ' ', None, line=19, col=47)
Token(T_True, 'true', None, line=19, col=48)
Token(T_RP, ')', None, line=19, col=52)
Token(T_Semicolon, ';', None, line=19, col=53)
Token(T_Whitespace, '

', None, line=19, col=54)
Token(T_Comment, '// Array declarations, indexing, and mutation
', None, line=21, col=1)
Token(T_Let, 'let', None, line=22, col=1)
Token(T_Whitespace, ' ', None, line=22, col=4)
Token(T_Id, 'arr1', None, line=22, col=5)
Token(T_Whitespace, ' ', None, line=22, col=9)
Token(T_Assign, '=', None, line=22, col=10)
Token(T_Whitespace, ' ', None, line=22, col=11)
Token(T_LB, '[', None, line=22, col=12)
Token(T_Decimal, '1', 1, line=22, col=13)
Token(T_Comma, ',', None, line=22, col=14)
Token(T_Whitespace, ' ', None, line=22, col=15)
Token(T_Decimal, '2', 2, line=22, col=16)
Token(T_Comma, ',', None, line=22, col=17)
Token(T_Whitespace, ' ', None, line=22, col=18)
Token(T_Decimal, '3', 3, line=22, col=19)
Token(T_Comma, ',', None, line=22, col=20)
Token(T_Whitespace, ' ', None, line=22, col=21)
Token(T_Decimal, '4', 4, line=22, col=22)
Token(T_Comma, ',', None, line=22, col=23)
Token(T_Whitespace, ' ', None, line=22, col=24)
Token(T_Decimal, '5', 5, line=22, col=25)
Token(T_RB, ']', None, line=22, col=26)
Token(T_Semicolon, ';', None, line=22, col=27)
Token(T_Whitespace, '
', None, line=22, col=28)
Token(T_Let, 'let', None, line=23, col=1)
Token(T_Whitespace, ' ', None, line=23, col=4)
Token(T_Id, 'arr2', None, line=23, col=5)
Token(T_Colon, ':', None, line=23, col=9)
Token(T_Whitespace, ' ', None, line=23, col=10)
Token(T_LB, '[', None, line=23, col=11)
Token(T_Int, 'i32', None, line=23, col=12)
Token(T_RB, ']', None, line=23, col=15)
Token(T_Whitespace, ' ', None, line=23, col=16)
Token(T_Assign, '=', None, line=23, col=17)
Token(T_Whitespace, ' ', None, line=23, col=18)
Token(T_LB, '[', None, line=23, col=19)
Token(T_Decimal, '7', 7, line=23, col=20)
Token(T_Comma, ',', None, line=23, col=21)
Token(T_Whitespace, ' ', None, line=23, col=22)
Token(T_Decimal, '8', 8, line=23, col=23)
Token(T_Comma, ',', None, line=23, col=24)
Token(T_Whitespace, ' ', None, line=23, col=25)
Token(T_Decimal, '9', 9, line=23, col=26)
Token(T_RB, ']', None, line=23, col=27)
Token(T_Semicolon, ';', None, line=23, col=28)
Token(T_Whitespace, '
', None, line=23, col=29)
Token(T_Let, 'let', None, line=24, col=1)
Token(T_Whitespace, ' ', None, line=24, col=4)
Token(T_Mut, 'mut', None, line=24, col=5)
Token(T_Whitespace, ' ', None, line=24, col=8)
Token(T_Id, 'arr3', None, line=24, col=9)
Token(T_Colon, ':', None, line=24, col=13)
Token(T_Whitespace, ' ', None, line=24, col=14)
Token(T_LB, '[', None, line=24, col=15)
Token(T_Int, 'i32', None, line=24, col=16)
Token(T_Semicolon, ';', None, line=24, col=19)
Token(T_Whitespace, ' ', None, line=24, col=20)
Token(T_Decimal, '2', 2, line=24, col=21)
Token(T_RB, ']', None, line=24, col=22)
Token(T_Whitespace, ' ', None, line=24, col=23)
Token(T_Assign, '=', None, line=24, col=24)
Token(T_Whitespace, ' ', None, line=24, col=25)
Token(T_LB, '[', None, line=24, col=26)
Token(T_Decimal, '10', 10, line=24, col=27)
Token(T_Comma, ',', None, line=24, col=29)
Token(T_Whitespace, ' ', None, line=24, col=30)
Token(T_Decimal, '20', 20, line=24, col=31)
Token(T_RB, ']', None, line=24, col=33)
Token(T_Semicolon, ';', None, line=24, col=34)
Token(T_Whitespace, '
', None, line=24, col=35)
Token(T_Id, 'arr3', None, line=25, col=1)
Token(T_LB, '[', None, line=25, col=5)
Token(T_Decimal, '0', 0, line=25, col=6)
Token(T_RB, ']', None, line=25, col=7)
Token(T_Whitespace, ' ', None, line=25, col=8)
Token(T_Assign, '=', None, line=25, col=9)
Token(T_Whitespace, ' ', None, line=25, col=10)
Token(T_Decimal, '100', 100, line=25, col=11)
Token(T_Semicolon, ';', None, line=25, col=14)
Token(T_Whitespace, '
', None, line=25, col=15)
Token(T_Let, 'let', None, line=26, col=1)
Token(T_Whitespace, ' ', None, line=26, col=4)
Token(T_Mut, 'mut', None, line=26, col=5)
Token(T_Whitespace, ' ', None, line=26, col=8)
Token(T_Id, 'bools', None, line=26, col=9)
Token(T_Colon, ':', None, line=26, col=14)
Token(T_Whitespace, ' ', None, line=26, col=15)
Token(T_LB, '[', None, line=26, col=16)
Token(T_Bool, 'bool', None, line=26, col=17)
Token(T_Semicolon, ';', None, line=26, col=21)
Token(T_Whitespace, ' ', None, line=26, col=22)
Token(T_Decimal, '4', 4, line=26, col=23)
Token(T_RB, ']', None, line=26, col=24)
Token(T_Whitespace, ' ', None, line=26, col=25)
Token(T_Assign, '=', None, line=26, col=26)
Token(T_Whitespace, ' ', None, line=26, col=27)
Token(T_LB, '[', None, line=26, col=28)
Token(T_True, 'true', None, line=26, col=29)
Token(T_Comma, ',', None, line=26, col=33)
Token(T_Whitespace, ' ', None, line=26, col=34)
Token(T_True, 'true', None, line=26, col=35)
Token(T_Comma, ',', None, line=26, col=39)
Token(T_Whitespace, ' ', None, line=26, col=40)
Token(T_False, 'false', None, line=26, col=41)
Token(T_Comma, ',', None, line=26, col=46)
Token(T_Whitespace, ' ', None, line=26, col=47)
Token(T_True, 'true', None, line=26, col=48)
Token(T_RB, ']', None, line=26, col=52)
Token(T_Semicolon, ';', None, line=26, col=53)
Token(T_Whitespace, '

', None, line=26, col=54)
Token(T_Comment, '// Standalone operators and delimiters (for lexer tests)
', None, line=28, col=1)
Token(T_Comment, '//   + - * / % < > <= >= == != && || ! : -> , ; ( ) { } [ ]
', None, line=29, col=1)
Token(T_Whitespace, '
', None, line=30, col=1)
Token(T_Comment, '// Function definitions
', None, line=31, col=1)
Token(T_Fn, 'fn', None, line=32, col=1)
Token(T_Whitespace, ' ', None, line=32, col=3)
Token(T_Id, 'compute', None, line=32, col=4)
Token(T_LP, '(', None, line=32, col=11)
Token(T_Id, 'x', None, line=32, col=12)
Token(T_Colon, ':', None, line=32, col=13)
Token(T_Whitespace, ' ', None, line=32, col=14)
Token(T_Int, 'i32', None, line=32, col=15)
Token(T_Comma, ',', None, line=32, col=18)
Token(T_Whitespace, ' ', None, line=32, col=19)
Token(T_Id, 'y', None, line=32, col=20)
Token(T_Colon, ':', None, line=32, col=21)
Token(T_Whitespace, ' ', None, line=32, col=22)
Token(T_Int, 'i32', None, line=32, col=23)
Token(T_RP, ')', None, line=32, col=26)
Token(T_Whitespace, ' ', None, line=32, col=27)
Token(T_Arrow, '->', None, line=32, col=28)
Token(T_Whitespace, ' ', None, line=32, col=30)
Token(T_Int, 'i32', None, line=32, col=31)
Token(T_Whitespace, ' ', None, line=32, col=34)
Token(T_LC, '{', None, line=32, col=35)
Token(T_Whitespace, '
    ', None, line=32, col=36)
Token(T_Let, 'let', None, line=33, col=5)
Token(T_Whitespace, ' ', None, line=33, col=8)
Token(T_Id, 'result', None, line=33, col=9)
Token(T_Whitespace, ' ', None, line=33, col=15)
Token(T_Assign, '=', None, line=33, col=16)
Token(T_Whitespace, ' ', None, line=33, col=17)
Token(T_Id, 'x', None, line=33, col=18)
Token(T_Whitespace, ' ', None, line=33, col=19)
Token(T_AOp_Trust, '+', None, line=33, col=20)
Token(T_Whitespace, ' ', None, line=33, col=21)
Token(T_Id, 'y', None, line=33, col=22)
Token(T_Whitespace, ' ', None, line=33, col=23)
Token(T_AOp_ML, '*', None, line=33, col=24)
Token(T_Whitespace, ' ', None, line=33, col=25)
Token(T_LP, '(', None, line=33, col=26)
Token(T_Id, 'x', None, line=33, col=27)
Token(T_Whitespace, ' ', None, line=33, col=28)
Token(T_AOp_MN, '-', None, line=33, col=29)
Token(T_Whitespace, ' ', None, line=33, col=30)
Token(T_Id, 'y', None, line=33, col=31)
Token(T_RP, ')', None, line=33, col=32)
Token(T_Whitespace, ' ', None, line=33, col=33)
Token(T_AOp_DV, '/', None, line=33, col=34)
Token(T_Whitespace, ' ', None, line=33, col=35)
Token(T_Decimal, '2', 2, line=33, col=36)
Token(T_Whitespace, ' ', None, line=33, col=37)
Token(T_AOp_RM, '%', None, line=33, col=38)
Token(T_Whitespace, ' ', None, line=33, col=39)
Token(T_Decimal, '10', 10, line=33, col=40)
Token(T_Semicolon, ';', None, line=33, col=42)
Token(T_Whitespace, '
    ', None, line=33, col=43)
Token(T_If, 'if', None, line=34, col=5)
Token(T_Whitespace, ' ', None, line=34, col=7)
Token(T_Id, 'result', None, line=34, col=8)
Token(T_Whitespace, ' ', None, line=34, col=14)
Token(T_ROp_GE, '>=', None, line=34, col=15)
Token(T_Whitespace, ' ', None, line=34, col=17)
Token(T_Decimal, '100', 100, line=34, col=18)
Token(T_Whitespace, ' ', None, line=34, col=21)
Token(T_LOp_AND, '&&', None, line=34, col=22)
Token(T_Whitespace, ' ', None, line=34, col=24)
Token(T_Id, 'result', None, line=34, col=25)
Token(T_Whitespace, ' ', None, line=34, col=31)
Token(T_ROp_NE, '!=', None, line=34, col=32)
Token(T_Whitespace, ' ', None, line=34, col=34)
Token(T_Decimal, '255', 255, line=34, col=35)
Token(T_Whitespace, ' ', None, line=34, col=38)
Token(T_LOp_AND, '&&', None, line=34, col=39)
Token(T_Whitespace, ' ', None, line=34, col=41)
Token(T_LOp_NOT, '!', None, line=34, col=42)
Token(T_False, 'false', None, line=34, col=43)
Token(T_Whitespace, ' ', None, line=34, col=48)
Token(T_LC, '{', None, line=34, col=49)
Token(T_Whitespace, '
        ', None, line=34, col=50)
Token(T_Print, 'println!', None, line=35, col=9)
Token(T_LP, '(', None, line=35, col=17)
Token(T_String, '"Compute result: {}"', None, line=35, col=18)
Token(T_Comma, ',', None, line=35, col=38)
Token(T_Whitespace, ' ', None, line=35, col=39)
Token(T_Id, 'result', None, line=35, col=40)
Token(T_RP, ')', None, line=35, col=46)
Token(T_Semicolon, ';', None, line=35, col=47)
Token(T_Whitespace, '
    ', None, line=35, col=48)
Token(T_RC, '}', None, line=36, col=5)
Token(T_Whitespace, '
    ', None, line=36, col=6)
Token(T_Return, 'return', None, line=37, col=5)
Token(T_Whitespace, ' ', None, line=37, col=11)
Token(T_Id, 'result', None, line=37, col=12)
Token(T_Semicolon, ';', None, line=37, col=18)
Token(T_Whitespace, '
', None, line=37, col=19)
Token(T_RC, '}', None, line=38, col=1)
Token(T_Whitespace, '

', None, line=38, col=2)
Token(T_Fn, 'fn', None, line=40, col=1)
Token(T_Whitespace, ' ', None, line=40, col=3)
Token(T_Id, 'fib', None, line=40, col=4)
Token(T_LP, '(', None, line=40, col=7)
Token(T_Id, 'n', None, line=40, col=8)
Token(T_Colon, ':', None, line=40, col=9)
Token(T_Whitespace, ' ', None, line=40, col=10)
Token(T_Int, 'i32', None, line=40, col=11)
Token(T_RP, ')', None, line=40, col=14)
Token(T_Whitespace, ' ', None, line=40, col=15)
Token(T_Arrow, '->', None, line=40, col=16)
Token(T_Whitespace, ' ', None, line=40, col=18)
Token(T_Int, 'i32', None, line=40, col=19)
Token(T_Whitespace, ' ', None, line=40, col=22)
Token(T_LC, '{', None, line=40, col=23)
Token(T_Whitespace, '
    ', None, line=40, col=24)
Token(T_Let, 'let', None, line=41, col=5)
Token(T_Whitespace, ' ', None, line=41, col=8)
Token(T_Mut, 'mut', None, line=41, col=9)
Token(T_Whitespace, ' ', None, line=41, col=12)
Token(T_Id, 'a', None, line=41, col=13)
Token(T_Colon, ':', None, line=41, col=14)
Token(T_Whitespace, ' ', None, line=41, col=15)
Token(T_Int, 'i32', None, line=41, col=16)
Token(T_Whitespace, ' ', None, line=41, col=19)
Token(T_Assign, '=', None, line=41, col=20)
Token(T_Whitespace, ' ', None, line=41, col=21)
Token(T_Decimal, '0', 0, line=41, col=22)
Token(T_Semicolon, ';', None, line=41, col=23)
Token(T_Whitespace, '
    ', None, line=41, col=24)
Token(T_Let, 'let', None, line=42, col=5)
Token(T_Whitespace, ' ', None, line=42, col=8)
Token(T_Mut, 'mut', None, line=42, col=9)
Token(T_Whitespace, ' ', None, line=42, col=12)
Token(T_Id, 'b', None, line=42, col=13)
Token(T_Colon, ':', None, line=42, col=14)
Token(T_Whitespace, ' ', None, line=42, col=15)
Token(T_Int, 'i32', None, line=42, col=16)
Token(T_Whitespace, ' ', None, line=42, col=19)
Token(T_Assign, '=', None, line=42, col=20)
Token(T_Whitespace, ' ', None, line=42, col=21)
Token(T_Decimal, '1', 1, line=42, col=22)
Token(T_Semicolon, ';', None, line=42, col=23)
Token(T_Whitespace, '
    ', None, line=42, col=24)
Token(T_Let, 'let', None, line=43, col=5)
Token(T_Whitespace, ' ', None, line=43, col=8)
Token(T_Mut, 'mut', None, line=43, col=9)
Token(T_Whitespace, ' ', None, line=43, col=12)
Token(T_Id, 'i', None, line=43, col=13)
Token(T_Colon, ':', None, line=43, col=14)
Token(T_Whitespace, ' ', None, line=43, col=15)
Token(T_Int, 'i32', None, line=43, col=16)
Token(T_Whitespace, ' ', None, line=43, col=19)
Token(T_Assign, '=', None, line=43, col=20)
Token(T_Whitespace, ' ', None, line=43, col=21)
Token(T_Decimal, '0', 0, line=43, col=22)
Token(T_Semicolon, ';', None, line=43, col=23)
Token(T_Whitespace, '
    ', None, line=43, col=24)
Token(T_Loop, 'loop', None, line=44, col=5)
Token(T_Whitespace, ' ', None, line=44, col=9)
Token(T_LC, '{', None, line=44, col=10)
Token(T_Whitespace, '
        ', None, line=44, col=11)
Token(T_If, 'if', None, line=45, col=9)
Token(T_Whitespace, ' ', None, line=45, col=11)
Token(T_Id, 'i', None, line=45, col=12)
Token(T_Whitespace, ' ', None, line=45, col=13)
Token(T_ROp_GE, '>=', None, line=45, col=14)
Token(T_Whitespace, ' ', None, line=45, col=16)
Token(T_Id, 'n', None, line=45, col=17)
Token(T_Whitespace, ' ', None, line=45, col=18)
Token(T_LC, '{', None, line=45, col=19)
Token(T_Whitespace, '
            ', None, line=45, col=20)
Token(T_Break, 'break', None, line=46, col=13)
Token(T_Semicolon, ';', None, line=46, col=18)
Token(T_Whitespace, '
        ', None, line=46, col=19)
Token(T_RC, '}', None, line=47, col=9)
Token(T_Whitespace, '
        ', None, line=47, col=10)
Token(T_Let, 'let', None, line=48, col=9)
Token(T_Whitespace, ' ', None, line=48, col=12)
Token(T_Id, 'tmp', None, line=48, col=13)
Token(T_Colon, ':', None, line=48, col=16)
Token(T_Whitespace, ' ', None, line=48, col=17)
Token(T_Int, 'i32', None, line=48, col=18)
Token(T_Whitespace, ' ', None, line=48, col=21)
Token(T_Assign, '=', None, line=48, col=22)
Token(T_Whitespace, ' ', None, line=48, col=23)
Token(T_Id, 'a', None, line=48, col=24)
Token(T_Whitespace, ' ', None, line=48, col=25)
Token(T_AOp_Trust, '+', None, line=48, col=26)
Token(T_Whitespace, ' ', None, line=48, col=27)
Token(T_Id, 'b', None, line=48, col=28)
Token(T_Semicolon, ';', None, line=48, col=29)
Token(T_Whitespace, '
        ', None, line=48, col=30)
Token(T_Id, 'a', None, line=49, col=9)
Token(T_Whitespace, ' ', None, line=49, col=10)
Token(T_Assign, '=', None, line=49, col=11)
Token(T_Whitespace, ' ', None, line=49, col=12)
Token(T_Id, 'b', None, line=49, col=13)
Token(T_Semicolon, ';', None, line=49, col=14)
Token(T_Whitespace, '
        ', None, line=49, col=15)
Token(T_Id, 'b', None, line=50, col=9)
Token(T_Whitespace, ' ', None, line=50, col=10)
Token(T_Assign, '=', None, line=50, col=11)
Token(T_Whitespace, ' ', None, line=50, col=12)
Token(T_Id, 'tmp', None, line=50, col=13)
Token(T_Semicolon, ';', None, line=50, col=16)
Token(T_Whitespace, '
        ', None, line=50, col=17)
Token(T_Id, 'i', None, line=51, col=9)
Token(T_Whitespace, ' ', None, line=51, col=10)
Token(T_Assign, '=', None, line=51, col=11)
Token(T_Whitespace, ' ', None, line=51, col=12)
Token(T_Id, 'i', None, line=51, col=13)
Token(T_Whitespace, ' ', None, line=51, col=14)
Token(T_AOp_Trust, '+', None, line=51, col=15)
Token(T_Whitespace, ' ', None, line=51, col=16)
Token(T_Decimal, '1', 1, line=51, col=17)
Token(T_Semicolon, ';', None, line=51, col=18)
Token(T_Whitespace, '
    ', None, line=51, col=19)
Token(T_RC, '}', None, line=52, col=5)
Token(T_Whitespace, '
    ', None, line=52, col=6)
Token(T_Return, 'return', None, line=53, col=5)
Token(T_Whitespace, ' ', None, line=53, col=11)
Token(T_Id, 'a', None, line=53, col=12)
Token(T_Semicolon, ';', None, line=53, col=13)
Token(T_Whitespace, '
', None, line=53, col=14)
Token(T_RC, '}', None, line=54, col=1)
Token(T_Whitespace, '

', None, line=54, col=2)
Token(T_Fn, 'fn', None, line=56, col=1)
Token(T_Whitespace, ' ', None, line=56, col=3)
Token(T_Id, 'multiply', None, line=56, col=4)
Token(T_LP, '(', None, line=56, col=12)
Token(T_Id, 'x', None, line=56, col=13)
Token(T_Colon, ':', None, line=56, col=14)
Token(T_Whitespace, ' ', None, line=56, col=15)
Token(T_Int, 'i32', None, line=56, col=16)
Token(T_Comma, ',', None, line=56, col=19)
Token(T_Whitespace, ' ', None, line=56, col=20)
Token(T_Id, 'y', None, line=56, col=21)
Token(T_Colon, ':', None, line=56, col=22)
Token(T_Whitespace, ' ', None, line=56, col=23)
Token(T_Int, 'i32', None, line=56, col=24)
Token(T_RP, ')', None, line=56, col=27)
Token(T_Whitespace, ' ', None, line=56, col=28)
Token(T_Arrow, '->', None, line=56, col=29)
Token(T_Whitespace, ' ', None, line=56, col=31)
Token(T_Int, 'i32', None, line=56, col=32)
Token(T_Whitespace, ' ', None, line=56, col=35)
Token(T_LC, '{', None, line=56, col=36)
Token(T_Whitespace, '
    ', None, line=56, col=37)
Token(T_Let, 'let', None, line=57, col=5)
Token(T_Whitespace, ' ', None, line=57, col=8)
Token(T_Id, 'z', None, line=57, col=9)
Token(T_Whitespace, ' ', None, line=57, col=10)
Token(T_Assign, '=', None, line=57, col=11)
Token(T_Whitespace, ' ', None, line=57, col=12)
Token(T_Id, 'x', None, line=57, col=13)
Token(T_Whitespace, ' ', None, line=57, col=14)
Token(T_AOp_ML, '*', None, line=57, col=15)
Token(T_Whitespace, ' ', None, line=57, col=16)
Token(T_Id, 'y', None, line=57, col=17)
Token(T_Semicolon, ';', None, line=57, col=18)
Token(T_Whitespace, '
    ', None, line=57, col=19)
Token(T_Return, 'return', None, line=58, col=5)
Token(T_Whitespace, ' ', None, line=58, col=11)
Token(T_Id, 'z', None, line=58, col=12)
Token(T_Semicolon, ';', None, line=58, col=13)
Token(T_Whitespace, '
', None, line=58, col=14)
Token(T_RC, '}', None, line=59, col=1)
Token(T_Whitespace, '

', None, line=59, col=2)
Token(T_Fn, 'fn', None, line=61, col=1)
Token(T_Whitespace, ' ', None, line=61, col=3)
Token(T_Id, 'add', None, line=61, col=4)
Token(T_LP, '(', None, line=61, col=7)
Token(T_Id, 'x', None, line=61, col=8)
Token(T_Comma, ',', None, line=61, col=9)
Token(T_Whitespace, ' ', None, line=61, col=10)
Token(T_Id, 'y', None, line=61, col=11)
Token(T_RP, ')', None, line=61, col=12)
Token(T_Whitespace, ' ', None, line=61, col=13)
Token(T_LC, '{', None, line=61, col=14)
Token(T_Whitespace, '
    ', None, line=61, col=15)
Token(T_Return, 'return', None, line=62, col=5)
Token(T_Whitespace, ' ', None, line=62, col=11)
Token(T_Id, 'x', None, line=62, col=12)
Token(T_Whitespace, ' ', None, line=62, col=13)
Token(T_AOp_Trust, '+', None, line=62, col=14)
Token(T_Whitespace, ' ', None, line=62, col=15)
Token(T_Id, 'y', None, line=62, col=16)
Token(T_Semicolon, ';', None, line=62, col=17)
Token(T_Whitespace, '
', None, line=62, col=18)
Token(T_RC, '}', None, line=63, col=1)
Token(T_Whitespace, '

', None, line=63, col=2)
Token(T_Fn, 'fn', None, line=65, col=1)
Token(T_Whitespace, ' ', None, line=65, col=3)
Token(T_Id, 'create_array', None, line=65, col=4)
Token(T_LP, '(', None, line=65, col=16)
Token(T_RP, ')', None, line=65, col=17)
Token(T_Whitespace, ' ', None, line=65, col=18)
Token(T_Arrow, '->', None, line=65, col=19)
Token(T_Whitespace, ' ', None, line=65, col=21)
Token(T_LB, '[', None, line=65, col=22)
Token(T_Int, 'i32', None, line=65, col=23)
Token(T_Semicolon, ';', None, line=65, col=26)
Token(T_Whitespace, ' ', None, line=65, col=27)
Token(T_Decimal, '5', 5, line=65, col=28)
Token(T_RB, ']', None, line=65, col=29)
Token(T_Whitespace, ' ', None, line=65, col=30)
Token(T_LC, '{', None, line=65, col=31)
Token(T_Whitespace, '
    ', None, line=65, col=32)
Token(T_Let, 'let', None, line=66, col=5)
Token(T_Whitespace, ' ', None, line=66, col=8)
Token(T_Id, 'array', None, line=66, col=9)
Token(T_Whitespace, ' ', None, line=66, col=14)
Token(T_Assign, '=', None, line=66, col=15)
Token(T_Whitespace, ' ', None, line=66, col=16)
Token(T_LB, '[', None, line=66, col=17)
Token(T_Decimal, '1', 1, line=66, col=18)
Token(T_Comma, ',', None, line=66, col=19)
Token(T_Whitespace, ' ', None, line=66, col=20)
Token(T_Decimal, '2', 2, line=66, col=21)
Token(T_Comma, ',', None, line=66, col=22)
Token(T_Whitespace, ' ', None, line=66, col=23)
Token(T_Decimal, '3', 3, line=66, col=24)
Token(T_Comma, ',', None, line=66, col=25)
Token(T_Whitespace, ' ', None, line=66, col=26)
Token(T_Decimal, '4', 4, line=66, col=27)
Token(T_Comma, ',', None, line=66, col=28)
Token(T_Whitespace, ' ', None, line=66, col=29)
Token(T_Decimal, '5', 5, line=66, col=30)
Token(T_RB, ']', None, line=66, col=31)
Token(T_Semicolon, ';', None, line=66, col=32)
Token(T_Whitespace, '
    ', None, line=66, col=33)
Token(T_Return, 'return', None, line=67, col=5)
Token(T_Whitespace, ' ', None, line=67, col=11)
Token(T_Id, 'array', None, line=67, col=12)
Token(T_Semicolon, ';', None, line=67, col=17)
Token(T_Whitespace, '
', None, line=67, col=18)
Token(T_RC, '}', None, line=68, col=1)
Token(T_Whitespace, '

', None, line=68, col=2)
Token(T_Comment, '// Testing print formatting: positional, named, escape sequences, no semicolon
', None, line=70, col=1)
Token(T_Print, 'println!', None, line=71, col=1)
Token(T_LP, '(', None, line=71, col=9)
Token(T_String, '"Trust is good"', None, line=71, col=10)
Token(T_RP, ')', None, line=71, col=25)
Token(T_Whitespace, '
', None, line=71, col=26)
Token(T_Print, 'println!', None, line=72, col=1)
Token(T_LP, '(', None, line=72, col=9)
Token(T_String, '"Decimal: {}  Hex: 0x{:X}\n"', None, line=72, col=10)
Token(T_Comma, ',', None, line=72, col=38)
Token(T_Whitespace, ' ', None, line=72, col=39)
Token(T_Id, 'decimal', None, line=72, col=40)
Token(T_Comma, ',', None, line=72, col=47)
Token(T_Whitespace, ' ', None, line=72, col=48)
Token(T_Id, '_hex', None, line=72, col=49)
Token(T_RP, ')', None, line=72, col=53)
Token(T_Semicolon, ';', None, line=72, col=54)
Token(T_Whitespace, '

', None, line=72, col=55)
Token(T_Comment, '// Main entry
', None, line=74, col=1)
Token(T_Fn, 'fn', None, line=75, col=1)
Token(T_Whitespace, ' ', None, line=75, col=3)
Token(T_Id, 'main', None, line=75, col=4)
Token(T_LP, '(', None, line=75, col=8)
Token(T_RP, ')', None, line=75, col=9)
Token(T_Whitespace, ' ', None, line=75, col=10)
Token(T_LC, '{', None, line=75, col=11)
Token(T_Whitespace, '
    ', None, line=75, col=12)
Token(T_Comment, '// Function calls and println! tests
', None, line=76, col=5)
Token(T_Whitespace, '    ', None, line=77, col=1)
Token(T_Let, 'let', None, line=77, col=5)
Token(T_Whitespace, ' ', None, line=77, col=8)
Token(T_Id, 'c1', None, line=77, col=9)
Token(T_Whitespace, ' ', None, line=77, col=11)
Token(T_Assign, '=', None, line=77, col=12)
Token(T_Whitespace, ' ', None, line=77, col=13)
Token(T_Id, 'compute', None, line=77, col=14)
Token(T_LP, '(', None, line=77, col=21)
Token(T_Decimal, '3', 3, line=77, col=22)
Token(T_Comma, ',', None, line=77, col=23)
Token(T_Whitespace, ' ', None, line=77, col=24)
Token(T_Decimal, '4', 4, line=77, col=25)
Token(T_RP, ')', None, line=77, col=26)
Token(T_Semicolon, ';', None, line=77, col=27)
Token(T_Whitespace, '
    ', None, line=77, col=28)
Token(T_Print, 'println!', None, line=78, col=5)
Token(T_LP, '(', None, line=78, col=13)
Token(T_String, '"c1 = {0}, fib(5) = {1}"', None, line=78, col=14)
Token(T_Comma, ',', None, line=78, col=38)
Token(T_Whitespace, ' ', None, line=78, col=39)
Token(T_Id, 'c1', None, line=78, col=40)
Token(T_Comma, ',', None, line=78, col=42)
Token(T_Whitespace, ' ', None, line=78, col=43)
Token(T_Id, 'fib', None, line=78, col=44)
Token(T_LP, '(', None, line=78, col=47)
Token(T_Decimal, '5', 5, line=78, col=48)
Token(T_RP, ')', None, line=78, col=49)
Token(T_RP, ')', None, line=78, col=50)
Token(T_Semicolon, ';', None, line=78, col=51)
Token(T_Whitespace, '
    ', None, line=78, col=52)
Token(T_Print, 'println!', None, line=79, col=5)
Token(T_LP, '(', None, line=79, col=13)
Token(T_String, '"Named: x={x}, y={y}"', None, line=79, col=14)
Token(T_Comma, ',', None, line=79, col=35)
Token(T_Whitespace, ' ', None, line=79, col=36)
Token(T_Id, 'x', None, line=79, col=37)
Token(T_Whitespace, ' ', None, line=79, col=38)
Token(T_Assign, '=', None, line=79, col=39)
Token(T_Whitespace, ' ', None, line=79, col=40)
Token(T_Id, 'x3', None, line=79, col=41)
Token(T_Comma, ',', None, line=79, col=43)
Token(T_Whitespace, ' ', None, line=79, col=44)
Token(T_Id, 'y', None, line=79, col=45)
Token(T_Whitespace, ' ', None, line=79, col=46)
Token(T_Assign, '=', None, line=79, col=47)
Token(T_Whitespace, ' ', None, line=79, col=48)
Token(T_Id, 'x4', None, line=79, col=49)
Token(T_RP, ')', None, line=79, col=51)
Token(T_Semicolon, ';', None, line=79, col=52)
Token(T_Whitespace, '
    ', None, line=79, col=53)
Token(T_Print, 'println!', None, line=80, col=5)
Token(T_LP, '(', None, line=80, col=13)
Token(T_String, '"Escaped: \"Quote\" and newline\n"', None, line=80, col=14)
Token(T_RP, ')', None, line=80, col=48)
Token(T_Semicolon, ';', None, line=80, col=49)
Token(T_Whitespace, '

    ', None, line=80, col=50)
Token(T_Comment, '// Conditional statements with logical and relational operators
', None, line=82, col=5)
Token(T_Whitespace, '    ', None, line=83, col=1)
Token(T_If, 'if', None, line=83, col=5)
Token(T_Whitespace, ' ', None, line=83, col=7)
Token(T_Id, 'x1', None, line=83, col=8)
Token(T_Whitespace, ' ', None, line=83, col=10)
Token(T_ROp_E, '==', None, line=83, col=11)
Token(T_Whitespace, ' ', None, line=83, col=13)
Token(T_Decimal, '10', 10, line=83, col=14)
Token(T_Whitespace, ' ', None, line=83, col=16)
Token(T_LC, '{', None, line=83, col=17)
Token(T_Whitespace, '
        ', None, line=83, col=18)
Token(T_Print, 'println!', None, line=84, col=9)
Token(T_LP, '(', None, line=84, col=17)
Token(T_String, '"x1 is ten"', None, line=84, col=18)
Token(T_RP, ')', None, line=84, col=29)
Token(T_Semicolon, ';', None, line=84, col=30)
Token(T_Whitespace, '
    ', None, line=84, col=31)
Token(T_RC, '}', None, line=85, col=5)
Token(T_Whitespace, '
    ', None, line=85, col=6)
Token(T_If, 'if', None, line=86, col=5)
Token(T_Whitespace, ' ', None, line=86, col=7)
Token(T_Id, 'decimal', None, line=86, col=8)
Token(T_Whitespace, ' ', None, line=86, col=15)
Token(T_ROp_G, '>', None, line=86, col=16)
Token(T_Whitespace, ' ', None, line=86, col=17)
Token(T_Decimal, '200', 200, line=86, col=18)
Token(T_Whitespace, ' ', None, line=86, col=21)
Token(T_LOp_AND, '&&', None, line=86, col=22)
Token(T_Whitespace, ' ', None, line=86, col=24)
Token(T_Id, 'flag', None, line=86, col=25)
Token(T_Whitespace, ' ', None, line=86, col=29)
Token(T_LOp_OR, '||', None, line=86, col=30)
Token(T_Whitespace, ' ', None, line=86, col=32)
Token(T_LOp_NOT, '!', None, line=86, col=33)
Token(T_Id, 'b', None, line=86, col=34)
Token(T_Whitespace, ' ', None, line=86, col=35)
Token(T_LC, '{', None, line=86, col=36)
Token(T_Whitespace, '
        ', None, line=86, col=37)
Token(T_Print, 'println!', None, line=87, col=9)
Token(T_LP, '(', None, line=87, col=17)
Token(T_String, '"Complex condition passed"', None, line=87, col=18)
Token(T_RP, ')', None, line=87, col=44)
Token(T_Semicolon, ';', None, line=87, col=45)
Token(T_Whitespace, '
    ', None, line=87, col=46)
Token(T_RC, '}', None, line=88, col=5)
Token(T_Whitespace, ' ', None, line=88, col=6)
Token(T_Else, 'else', None, line=88, col=7)
Token(T_Whitespace, ' ', None, line=88, col=11)
Token(T_If, 'if', None, line=88, col=12)
Token(T_Whitespace, ' ', None, line=88, col=14)
Token(T_Id, 'decimal', None, line=88, col=15)
Token(T_Whitespace, ' ', None, line=88, col=22)
Token(T_ROp_LE, '<=', None, line=88, col=23)
Token(T_Whitespace, ' ', None, line=88, col=25)
Token(T_Decimal, '255', 255, line=88, col=26)
Token(T_Whitespace, ' ', None, line=88, col=29)
Token(T_LOp_AND, '&&', None, line=88, col=30)
Token(T_Whitespace, ' ', None, line=88, col=32)
Token(T_LOp_NOT, '!', None, line=88, col=33)
Token(T_Id, 'flag', None, line=88, col=34)
Token(T_Whitespace, ' ', None, line=88, col=38)
Token(T_LC, '{', None, line=88, col=39)
Token(T_Whitespace, '
        ', None, line=88, col=40)
Token(T_Print, 'println!', None, line=89, col=9)
Token(T_LP, '(', None, line=89, col=17)
Token(T_String, '"Else-if triggered"', None, line=89, col=18)
Token(T_RP, ')', None, line=89, col=37)
Token(T_Semicolon, ';', None, line=89, col=38)
Token(T_Whitespace, '
    ', None, line=89, col=39)
Token(T_RC, '}', None, line=90, col=5)
Token(T_Whitespace, ' ', None, line=90, col=6)
Token(T_Else, 'else', None, line=90, col=7)
Token(T_Whitespace, ' ', None, line=90, col=11)
Token(T_LC, '{', None, line=90, col=12)
Token(T_Whitespace, '
        ', None, line=90, col=13)
Token(T_Print, 'println!', None, line=91, col=9)
Token(T_LP, '(', None, line=91, col=17)
Token(T_String, '"Else branch"', None, line=91, col=18)
Token(T_RP, ')', None, line=91, col=31)
Token(T_Semicolon, ';', None, line=91, col=32)
Token(T_Whitespace, '
    ', None, line=91, col=33)
Token(T_RC, '}', None, line=92, col=5)
Token(T_Whitespace, '

    ', None, line=92, col=6)
Token(T_Comment, '// Loops with break and continue
', None, line=94, col=5)
Token(T_Whitespace, '    ', None, line=95, col=1)
Token(T_Let, 'let', None, line=95, col=5)
Token(T_Whitespace, ' ', None, line=95, col=8)
Token(T_Mut, 'mut', None, line=95, col=9)
Token(T_Whitespace, ' ', None, line=95, col=12)
Token(T_Id, 'cnt', None, line=95, col=13)
Token(T_Colon, ':', None, line=95, col=16)
Token(T_Whitespace, ' ', None, line=95, col=17)
Token(T_Int, 'i32', None, line=95, col=18)
Token(T_Whitespace, ' ', None, line=95, col=21)
Token(T_Assign, '=', None, line=95, col=22)
Token(T_Whitespace, ' ', None, line=95, col=23)
Token(T_Decimal, '0', 0, line=95, col=24)
Token(T_Semicolon, ';', None, line=95, col=25)
Token(T_Whitespace, '
    ', None, line=95, col=26)
Token(T_Loop, 'loop', None, line=96, col=5)
Token(T_Whitespace, ' ', None, line=96, col=9)
Token(T_LC, '{', None, line=96, col=10)
Token(T_Whitespace, '
        ', None, line=96, col=11)
Token(T_Id, 'cnt', None, line=97, col=9)
Token(T_Whitespace, ' ', None, line=97, col=12)
Token(T_Assign, '=', None, line=97, col=13)
Token(T_Whitespace, ' ', None, line=97, col=14)
Token(T_Id, 'cnt', None, line=97, col=15)
Token(T_Whitespace, ' ', None, line=97, col=18)
Token(T_AOp_Trust, '+', None, line=97, col=19)
Token(T_Whitespace, ' ', None, line=97, col=20)
Token(T_Decimal, '1', 1, line=97, col=21)
Token(T_Semicolon, ';', None, line=97, col=22)
Token(T_Whitespace, '
        ', None, line=97, col=23)
Token(T_If, 'if', None, line=98, col=9)
Token(T_Whitespace, ' ', None, line=98, col=11)
Token(T_Id, 'cnt', None, line=98, col=12)
Token(T_Whitespace, ' ', None, line=98, col=15)
Token(T_ROp_E, '==', None, line=98, col=16)
Token(T_Whitespace, ' ', None, line=98, col=18)
Token(T_Decimal, '3', 3, line=98, col=19)
Token(T_Whitespace, ' ', None, line=98, col=20)
Token(T_LC, '{', None, line=98, col=21)
Token(T_Whitespace, '
            ', None, line=98, col=22)
Token(T_Continue, 'continue', None, line=99, col=13)
Token(T_Semicolon, ';', None, line=99, col=21)
Token(T_Whitespace, '
        ', None, line=99, col=22)
Token(T_RC, '}', None, line=100, col=9)
Token(T_Whitespace, '
        ', None, line=100, col=10)
Token(T_If, 'if', None, line=101, col=9)
Token(T_Whitespace, ' ', None, line=101, col=11)
Token(T_Id, 'cnt', None, line=101, col=12)
Token(T_Whitespace, ' ', None, line=101, col=15)
Token(T_ROp_GE, '>=', None, line=101, col=16)
Token(T_Whitespace, ' ', None, line=101, col=18)
Token(T_Decimal, '5', 5, line=101, col=19)
Token(T_Whitespace, ' ', None, line=101, col=20)
Token(T_LC, '{', None, line=101, col=21)
Token(T_Whitespace, '
            ', None, line=101, col=22)
Token(T_Break, 'break', None, line=102, col=13)
Token(T_Semicolon, ';', None, line=102, col=18)
Token(T_Whitespace, '
        ', None, line=102, col=19)
Token(T_RC, '}', None, line=103, col=9)
Token(T_Whitespace, '
    ', None, line=103, col=10)
Token(T_RC, '}', None, line=104, col=5)
Token(T_Whitespace, '

    ', None, line=104, col=6)
Token(T_Comment, '// Array indexing in a loop (no '..' operator)
', None, line=106, col=5)
Token(T_Whitespace, '    ', None, line=107, col=1)
Token(T_Let, 'let', None, line=107, col=5)
Token(T_Whitespace, ' ', None, line=107, col=8)
Token(T_Id, 'arr', None, line=107, col=9)
Token(T_Whitespace, ' ', None, line=107, col=12)
Token(T_Assign, '=', None, line=107, col=13)
Token(T_Whitespace, ' ', None, line=107, col=14)
Token(T_Id, 'create_array', None, line=107, col=15)
Token(T_LP, '(', None, line=107, col=27)
Token(T_RP, ')', None, line=107, col=28)
Token(T_Semicolon, ';', None, line=107, col=29)
Token(T_Whitespace, '
    ', None, line=107, col=30)
Token(T_Let, 'let', None, line=108, col=5)
Token(T_Whitespace, ' ', None, line=108, col=8)
Token(T_Mut, 'mut', None, line=108, col=9)
Token(T_Whitespace, ' ', None, line=108, col=12)
Token(T_Id, 'idx', None, line=108, col=13)
Token(T_Colon, ':', None, line=108, col=16)
Token(T_Whitespace, ' ', None, line=108, col=17)
Token(T_Int, 'i32', None, line=108, col=18)
Token(T_Whitespace, ' ', None, line=108, col=21)
Token(T_Assign, '=', None, line=108, col=22)
Token(T_Whitespace, ' ', None, line=108, col=23)
Token(T_Decimal, '0', 0, line=108, col=24)
Token(T_Semicolon, ';', None, line=108, col=25)
Token(T_Whitespace, '
    ', None, line=108, col=26)
Token(T_Loop, 'loop', None, line=109, col=5)
Token(T_Whitespace, ' ', None, line=109, col=9)
Token(T_LC, '{', None, line=109, col=10)
Token(T_Whitespace, '
        ', None, line=109, col=11)
Token(T_If, 'if', None, line=110, col=9)
Token(T_Whitespace, ' ', None, line=110, col=11)
Token(T_Id, 'idx', None, line=110, col=12)
Token(T_Whitespace, ' ', None, line=110, col=15)
Token(T_ROp_GE, '>=', None, line=110, col=16)
Token(T_Whitespace, ' ', None, line=110, col=18)
Token(T_Decimal, '5', 5, line=110, col=19)
Token(T_Whitespace, ' ', None, line=110, col=20)
Token(T_LC, '{', None, line=110, col=21)
Token(T_Whitespace, '
            ', None, line=110, col=22)
Token(T_Break, 'break', None, line=111, col=13)
Token(T_Semicolon, ';', None, line=111, col=18)
Token(T_Whitespace, '
        ', None, line=111, col=19)
Token(T_RC, '}', None, line=112, col=9)
Token(T_Whitespace, '
        ', None, line=112, col=10)
Token(T_Let, 'let', None, line=113, col=9)
Token(T_Whitespace, ' ', None, line=113, col=12)
Token(T_Id, 'elem', None, line=113, col=13)
Token(T_Colon, ':', None, line=113, col=17)
Token(T_Whitespace, ' ', None, line=113, col=18)
Token(T_Int, 'i32', None, line=113, col=19)
Token(T_Whitespace, ' ', None, line=113, col=22)
Token(T_Assign, '=', None, line=113, col=23)
Token(T_Whitespace, ' ', None, line=113, col=24)
Token(T_Id, 'arr', None, line=113, col=25)
Token(T_LB, '[', None, line=113, col=28)
Token(T_Id, 'idx', None, line=113, col=29)
Token(T_RB, ']', None, line=113, col=32)
Token(T_Semicolon, ';', None, line=113, col=33)
Token(T_Whitespace, '
        ', None, line=113, col=34)
Token(T_Print, 'println!', None, line=114, col=9)
Token(T_LP, '(', None, line=114, col=17)
Token(T_String, '"arr[{}] = {}"', None, line=114, col=18)
Token(T_Comma, ',', None, line=114, col=32)
Token(T_Whitespace, ' ', None, line=114, col=33)
Token(T_Id, 'idx', None, line=114, col=34)
Token(T_Comma, ',', None, line=114, col=37)
Token(T_Whitespace, ' ', None, line=114, col=38)
Token(T_Id, 'elem', None, line=114, col=39)
Token(T_RP, ')', None, line=114, col=43)
Token(T_Semicolon, ';', None, line=114, col=44)
Token(T_Whitespace, '
        ', None, line=114, col=45)
Token(T_Id, 'idx', None, line=115, col=9)
Token(T_Whitespace, ' ', None, line=115, col=12)
Token(T_Assign, '=', None, line=115, col=13)
Token(T_Whitespace, ' ', None, line=115, col=14)
Token(T_Id, 'idx', None, line=115, col=15)
Token(T_Whitespace, ' ', None, line=115, col=18)
Token(T_AOp_Trust, '+', None, line=115, col=19)
Token(T_Whitespace, ' ', None, line=115, col=20)
Token(T_Decimal, '1', 1, line=115, col=21)
Token(T_Semicolon, ';', None, line=115, col=22)
Token(T_Whitespace, '
    ', None, line=115, col=23)
Token(T_RC, '}', None, line=116, col=5)
Token(T_Whitespace, '
', None, line=116, col=6)
Token(T_RC, '}', None, line=117, col=1)
Token(T_Whitespace, '
', None, line=117, col=2)
Token(T_EOF, '', None, line=118, col=1)

Symbol Table:
x1: [(4, 5), (5, 1), (83, 8)]
x2: [(6, 5)]
x3: [(7, 5), (79, 41)]
x4: [(8, 5), (79, 49)]
b: [(9, 5), (42, 13), (48, 28), (49, 13), (50, 9), (86, 34)]
flag: [(10, 5), (86, 25), (88, 34)]
_hex: [(11, 5), (72, 49)]
decimal: [(12, 5), (72, 40), (86, 8), (88, 15)]
negative: [(13, 5)]
positive: [(14, 5)]
u: [(17, 6)]
v: [(17, 9)]
p: [(18, 6)]
q: [(18, 9)]
r: [(19, 6)]
s: [(19, 9)]
t: [(19, 12)]
arr1: [(22, 5)]
arr2: [(23, 5)]
arr3: [(24, 9), (25, 1)]
bools: [(26, 9)]
compute: [(32, 4), (77, 14)]
x: [(32, 12), (33, 18), (33, 27), (56, 13), (57, 13), (61, 8), (62, 12), (79, 37)]
y: [(32, 20), (33, 22), (33, 31), (56, 21), (57, 17), (61, 11), (62, 16), (79, 45)]
result: [(33, 9), (34, 8), (34, 25), (35, 40), (37, 12)]
fib: [(40, 4), (78, 44)]
n: [(40, 8), (45, 17)]
a: [(41, 13), (48, 24), (49, 9), (53, 12)]
i: [(43, 13), (45, 12), (51, 9), (51, 13)]
tmp: [(48, 13), (50, 13)]
multiply: [(56, 4)]
z: [(57, 9), (58, 12)]
add: [(61, 4)]
create_array: [(65, 4), (107, 15)]
array: [(66, 9), (67, 12)]
main: [(75, 4)]
c1: [(77, 9), (78, 40)]
cnt: [(95, 13), (97, 9), (97, 15), (98, 12), (101, 12)]
arr: [(107, 9), (113, 25)]
idx: [(108, 13), (110, 12), (113, 29), (114, 34), (115, 9), (115, 15)]
elem: [(113, 13), (114, 39)]

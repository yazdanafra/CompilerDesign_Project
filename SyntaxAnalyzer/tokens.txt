Token(T_Comment, '// Does an integer x divide evenly by 2?
', None, line=1, col=1)
Token(T_Fn, 'fn', None, line=2, col=1)
Token(T_Whitespace, ' ', None, line=2, col=3)
Token(T_Id, 'is_even', None, line=2, col=4)
Token(T_LP, '(', None, line=2, col=11)
Token(T_Id, 'x', None, line=2, col=12)
Token(T_Colon, ':', None, line=2, col=13)
Token(T_Whitespace, ' ', None, line=2, col=14)
Token(T_Int, 'i32', None, line=2, col=15)
Token(T_RP, ')', None, line=2, col=18)
Token(T_Whitespace, ' ', None, line=2, col=19)
Token(T_Arrow, '->', None, line=2, col=20)
Token(T_Whitespace, ' ', None, line=2, col=22)
Token(T_Bool, 'bool', None, line=2, col=23)
Token(T_Whitespace, ' ', None, line=2, col=27)
Token(T_LC, '{', None, line=2, col=28)
Token(T_Whitespace, '
    ', None, line=2, col=29)
Token(T_Return, 'return', None, line=3, col=5)
Token(T_Whitespace, ' ', None, line=3, col=11)
Token(T_LP, '(', None, line=3, col=12)
Token(T_Id, 'x', None, line=3, col=13)
Token(T_Whitespace, ' ', None, line=3, col=14)
Token(T_AOp_RM, '%', None, line=3, col=15)
Token(T_Whitespace, ' ', None, line=3, col=16)
Token(T_Decimal, '2', 2, line=3, col=17)
Token(T_RP, ')', None, line=3, col=18)
Token(T_Whitespace, ' ', None, line=3, col=19)
Token(T_ROp_E, '==', None, line=3, col=20)
Token(T_Whitespace, ' ', None, line=3, col=22)
Token(T_Decimal, '0', 0, line=3, col=23)
Token(T_Semicolon, ';', None, line=3, col=24)
Token(T_Whitespace, '
', None, line=3, col=25)
Token(T_RC, '}', None, line=4, col=1)
Token(T_Whitespace, '

', None, line=4, col=2)
Token(T_Comment, '// Sum all elements of a fixed‑size array of length 5.
', None, line=6, col=1)
Token(T_Fn, 'fn', None, line=7, col=1)
Token(T_Whitespace, ' ', None, line=7, col=3)
Token(T_Id, 'sum_array', None, line=7, col=4)
Token(T_LP, '(', None, line=7, col=13)
Token(T_Id, 'a', None, line=7, col=14)
Token(T_Colon, ':', None, line=7, col=15)
Token(T_Whitespace, ' ', None, line=7, col=16)
Token(T_LB, '[', None, line=7, col=17)
Token(T_Int, 'i32', None, line=7, col=18)
Token(T_Semicolon, ';', None, line=7, col=21)
Token(T_Whitespace, ' ', None, line=7, col=22)
Token(T_Decimal, '5', 5, line=7, col=23)
Token(T_RB, ']', None, line=7, col=24)
Token(T_RP, ')', None, line=7, col=25)
Token(T_Whitespace, ' ', None, line=7, col=26)
Token(T_Arrow, '->', None, line=7, col=27)
Token(T_Whitespace, ' ', None, line=7, col=29)
Token(T_Int, 'i32', None, line=7, col=30)
Token(T_Whitespace, ' ', None, line=7, col=33)
Token(T_LC, '{', None, line=7, col=34)
Token(T_Whitespace, '
    ', None, line=7, col=35)
Token(T_Let, 'let', None, line=8, col=5)
Token(T_Whitespace, ' ', None, line=8, col=8)
Token(T_Mut, 'mut', None, line=8, col=9)
Token(T_Whitespace, ' ', None, line=8, col=12)
Token(T_Id, 'total', None, line=8, col=13)
Token(T_Colon, ':', None, line=8, col=18)
Token(T_Whitespace, ' ', None, line=8, col=19)
Token(T_Int, 'i32', None, line=8, col=20)
Token(T_Whitespace, ' ', None, line=8, col=23)
Token(T_Assign, '=', None, line=8, col=24)
Token(T_Whitespace, ' ', None, line=8, col=25)
Token(T_Decimal, '0', 0, line=8, col=26)
Token(T_Semicolon, ';', None, line=8, col=27)
Token(T_Whitespace, '
    ', None, line=8, col=28)
Token(T_Let, 'let', None, line=9, col=5)
Token(T_Whitespace, ' ', None, line=9, col=8)
Token(T_Mut, 'mut', None, line=9, col=9)
Token(T_Whitespace, ' ', None, line=9, col=12)
Token(T_Id, 'i', None, line=9, col=13)
Token(T_Colon, ':', None, line=9, col=14)
Token(T_Whitespace, ' ', None, line=9, col=15)
Token(T_Int, 'i32', None, line=9, col=16)
Token(T_Whitespace, ' ', None, line=9, col=19)
Token(T_Assign, '=', None, line=9, col=20)
Token(T_Whitespace, ' ', None, line=9, col=21)
Token(T_Decimal, '0', 0, line=9, col=22)
Token(T_Semicolon, ';', None, line=9, col=23)
Token(T_Whitespace, '
    ', None, line=9, col=24)
Token(T_Loop, 'loop', None, line=10, col=5)
Token(T_Whitespace, ' ', None, line=10, col=9)
Token(T_LC, '{', None, line=10, col=10)
Token(T_Whitespace, '
        ', None, line=10, col=11)
Token(T_If, 'if', None, line=11, col=9)
Token(T_Whitespace, ' ', None, line=11, col=11)
Token(T_Id, 'i', None, line=11, col=12)
Token(T_Whitespace, ' ', None, line=11, col=13)
Token(T_ROp_E, '==', None, line=11, col=14)
Token(T_Whitespace, ' ', None, line=11, col=16)
Token(T_Decimal, '5', 5, line=11, col=17)
Token(T_Whitespace, ' ', None, line=11, col=18)
Token(T_LC, '{', None, line=11, col=19)
Token(T_Whitespace, '
            ', None, line=11, col=20)
Token(T_Break, 'break', None, line=12, col=13)
Token(T_Semicolon, ';', None, line=12, col=18)
Token(T_Whitespace, '
        ', None, line=12, col=19)
Token(T_RC, '}', None, line=13, col=9)
Token(T_Whitespace, '
        ', None, line=13, col=10)
Token(T_Id, 'total', None, line=14, col=9)
Token(T_Whitespace, ' ', None, line=14, col=14)
Token(T_Assign, '=', None, line=14, col=15)
Token(T_Whitespace, ' ', None, line=14, col=16)
Token(T_Id, 'total', None, line=14, col=17)
Token(T_Whitespace, ' ', None, line=14, col=22)
Token(T_AOp_Trust, '+', None, line=14, col=23)
Token(T_Whitespace, ' ', None, line=14, col=24)
Token(T_Id, 'a', None, line=14, col=25)
Token(T_LB, '[', None, line=14, col=26)
Token(T_Id, 'i', None, line=14, col=27)
Token(T_RB, ']', None, line=14, col=28)
Token(T_Semicolon, ';', None, line=14, col=29)
Token(T_Whitespace, '
        ', None, line=14, col=30)
Token(T_Id, 'i', None, line=15, col=9)
Token(T_Whitespace, ' ', None, line=15, col=10)
Token(T_Assign, '=', None, line=15, col=11)
Token(T_Whitespace, ' ', None, line=15, col=12)
Token(T_Id, 'i', None, line=15, col=13)
Token(T_Whitespace, ' ', None, line=15, col=14)
Token(T_AOp_Trust, '+', None, line=15, col=15)
Token(T_Whitespace, ' ', None, line=15, col=16)
Token(T_Decimal, '1', 1, line=15, col=17)
Token(T_Semicolon, ';', None, line=15, col=18)
Token(T_Whitespace, '
    ', None, line=15, col=19)
Token(T_RC, '}', None, line=16, col=5)
Token(T_Whitespace, '
    ', None, line=16, col=6)
Token(T_Return, 'return', None, line=17, col=5)
Token(T_Whitespace, ' ', None, line=17, col=11)
Token(T_Id, 'total', None, line=17, col=12)
Token(T_Semicolon, ';', None, line=17, col=17)
Token(T_Whitespace, '
', None, line=17, col=18)
Token(T_RC, '}', None, line=18, col=1)
Token(T_Whitespace, '

', None, line=18, col=2)
Token(T_Comment, '// Find the first even element’s index in an array, or -1 if none.
', None, line=20, col=1)
Token(T_Fn, 'fn', None, line=21, col=1)
Token(T_Whitespace, ' ', None, line=21, col=3)
Token(T_Id, 'find_first_even', None, line=21, col=4)
Token(T_LP, '(', None, line=21, col=19)
Token(T_Id, 'a', None, line=21, col=20)
Token(T_Colon, ':', None, line=21, col=21)
Token(T_Whitespace, ' ', None, line=21, col=22)
Token(T_LB, '[', None, line=21, col=23)
Token(T_Int, 'i32', None, line=21, col=24)
Token(T_Semicolon, ';', None, line=21, col=27)
Token(T_Whitespace, ' ', None, line=21, col=28)
Token(T_Decimal, '5', 5, line=21, col=29)
Token(T_RB, ']', None, line=21, col=30)
Token(T_RP, ')', None, line=21, col=31)
Token(T_Whitespace, ' ', None, line=21, col=32)
Token(T_Arrow, '->', None, line=21, col=33)
Token(T_Whitespace, ' ', None, line=21, col=35)
Token(T_Int, 'i32', None, line=21, col=36)
Token(T_Whitespace, ' ', None, line=21, col=39)
Token(T_LC, '{', None, line=21, col=40)
Token(T_Whitespace, '
    ', None, line=21, col=41)
Token(T_Let, 'let', None, line=22, col=5)
Token(T_Whitespace, ' ', None, line=22, col=8)
Token(T_Mut, 'mut', None, line=22, col=9)
Token(T_Whitespace, ' ', None, line=22, col=12)
Token(T_Id, 'i', None, line=22, col=13)
Token(T_Colon, ':', None, line=22, col=14)
Token(T_Whitespace, ' ', None, line=22, col=15)
Token(T_Int, 'i32', None, line=22, col=16)
Token(T_Whitespace, ' ', None, line=22, col=19)
Token(T_Assign, '=', None, line=22, col=20)
Token(T_Whitespace, ' ', None, line=22, col=21)
Token(T_Decimal, '0', 0, line=22, col=22)
Token(T_Semicolon, ';', None, line=22, col=23)
Token(T_Whitespace, '
    ', None, line=22, col=24)
Token(T_Loop, 'loop', None, line=23, col=5)
Token(T_Whitespace, ' ', None, line=23, col=9)
Token(T_LC, '{', None, line=23, col=10)
Token(T_Whitespace, '
        ', None, line=23, col=11)
Token(T_If, 'if', None, line=24, col=9)
Token(T_Whitespace, ' ', None, line=24, col=11)
Token(T_Id, 'i', None, line=24, col=12)
Token(T_Whitespace, ' ', None, line=24, col=13)
Token(T_ROp_E, '==', None, line=24, col=14)
Token(T_Whitespace, ' ', None, line=24, col=16)
Token(T_Decimal, '5', 5, line=24, col=17)
Token(T_Whitespace, ' ', None, line=24, col=18)
Token(T_LC, '{', None, line=24, col=19)
Token(T_Whitespace, '
            ', None, line=24, col=20)
Token(T_Comment, '// no more elements—stop searching
', None, line=25, col=13)
Token(T_Whitespace, '            ', None, line=26, col=1)
Token(T_Break, 'break', None, line=26, col=13)
Token(T_Semicolon, ';', None, line=26, col=18)
Token(T_Whitespace, '
        ', None, line=26, col=19)
Token(T_RC, '}', None, line=27, col=9)
Token(T_Whitespace, '
        ', None, line=27, col=10)
Token(T_If, 'if', None, line=28, col=9)
Token(T_Whitespace, ' ', None, line=28, col=11)
Token(T_Id, 'is_even', None, line=28, col=12)
Token(T_LP, '(', None, line=28, col=19)
Token(T_Id, 'a', None, line=28, col=20)
Token(T_LB, '[', None, line=28, col=21)
Token(T_Id, 'i', None, line=28, col=22)
Token(T_RB, ']', None, line=28, col=23)
Token(T_RP, ')', None, line=28, col=24)
Token(T_Whitespace, ' ', None, line=28, col=25)
Token(T_LC, '{', None, line=28, col=26)
Token(T_Whitespace, '
            ', None, line=28, col=27)
Token(T_Return, 'return', None, line=29, col=13)
Token(T_Whitespace, ' ', None, line=29, col=19)
Token(T_Id, 'i', None, line=29, col=20)
Token(T_Semicolon, ';', None, line=29, col=21)
Token(T_Whitespace, '       ', None, line=29, col=22)
Token(T_Comment, '// early return on first match
', None, line=29, col=29)
Token(T_Whitespace, '        ', None, line=30, col=1)
Token(T_RC, '}', None, line=30, col=9)
Token(T_Whitespace, '
        ', None, line=30, col=10)
Token(T_Id, 'i', None, line=31, col=9)
Token(T_Whitespace, ' ', None, line=31, col=10)
Token(T_Assign, '=', None, line=31, col=11)
Token(T_Whitespace, ' ', None, line=31, col=12)
Token(T_Id, 'i', None, line=31, col=13)
Token(T_Whitespace, ' ', None, line=31, col=14)
Token(T_AOp_Trust, '+', None, line=31, col=15)
Token(T_Whitespace, ' ', None, line=31, col=16)
Token(T_Decimal, '1', 1, line=31, col=17)
Token(T_Semicolon, ';', None, line=31, col=18)
Token(T_Whitespace, '
    ', None, line=31, col=19)
Token(T_RC, '}', None, line=32, col=5)
Token(T_Whitespace, '
    ', None, line=32, col=6)
Token(T_Return, 'return', None, line=33, col=5)
Token(T_Whitespace, ' ', None, line=33, col=11)
Token(T_AOp_MN, '-', None, line=33, col=12)
Token(T_Decimal, '1', 1, line=33, col=13)
Token(T_Semicolon, ';', None, line=33, col=14)
Token(T_Whitespace, '              ', None, line=33, col=15)
Token(T_Comment, '// not found
', None, line=33, col=29)
Token(T_RC, '}', None, line=34, col=1)
Token(T_Whitespace, '

', None, line=34, col=2)
Token(T_Comment, '// Count how many pairs (i,j) in [0..n)×[0..n) sum to a target, demonstrate nested loops.
', None, line=36, col=1)
Token(T_Fn, 'fn', None, line=37, col=1)
Token(T_Whitespace, ' ', None, line=37, col=3)
Token(T_Id, 'count_pairs', None, line=37, col=4)
Token(T_LP, '(', None, line=37, col=15)
Token(T_Id, 'n', None, line=37, col=16)
Token(T_Colon, ':', None, line=37, col=17)
Token(T_Whitespace, ' ', None, line=37, col=18)
Token(T_Int, 'i32', None, line=37, col=19)
Token(T_Comma, ',', None, line=37, col=22)
Token(T_Whitespace, ' ', None, line=37, col=23)
Token(T_Id, 'target', None, line=37, col=24)
Token(T_Colon, ':', None, line=37, col=30)
Token(T_Whitespace, ' ', None, line=37, col=31)
Token(T_Int, 'i32', None, line=37, col=32)
Token(T_RP, ')', None, line=37, col=35)
Token(T_Whitespace, ' ', None, line=37, col=36)
Token(T_Arrow, '->', None, line=37, col=37)
Token(T_Whitespace, ' ', None, line=37, col=39)
Token(T_Int, 'i32', None, line=37, col=40)
Token(T_Whitespace, ' ', None, line=37, col=43)
Token(T_LC, '{', None, line=37, col=44)
Token(T_Whitespace, '
    ', None, line=37, col=45)
Token(T_Let, 'let', None, line=38, col=5)
Token(T_Whitespace, ' ', None, line=38, col=8)
Token(T_Mut, 'mut', None, line=38, col=9)
Token(T_Whitespace, ' ', None, line=38, col=12)
Token(T_Id, 'count', None, line=38, col=13)
Token(T_Colon, ':', None, line=38, col=18)
Token(T_Whitespace, ' ', None, line=38, col=19)
Token(T_Int, 'i32', None, line=38, col=20)
Token(T_Whitespace, ' ', None, line=38, col=23)
Token(T_Assign, '=', None, line=38, col=24)
Token(T_Whitespace, ' ', None, line=38, col=25)
Token(T_Decimal, '0', 0, line=38, col=26)
Token(T_Semicolon, ';', None, line=38, col=27)
Token(T_Whitespace, '
    ', None, line=38, col=28)
Token(T_Let, 'let', None, line=39, col=5)
Token(T_Whitespace, ' ', None, line=39, col=8)
Token(T_Mut, 'mut', None, line=39, col=9)
Token(T_Whitespace, ' ', None, line=39, col=12)
Token(T_Id, 'i', None, line=39, col=13)
Token(T_Colon, ':', None, line=39, col=14)
Token(T_Whitespace, ' ', None, line=39, col=15)
Token(T_Int, 'i32', None, line=39, col=16)
Token(T_Whitespace, ' ', None, line=39, col=19)
Token(T_Assign, '=', None, line=39, col=20)
Token(T_Whitespace, ' ', None, line=39, col=21)
Token(T_Decimal, '0', 0, line=39, col=22)
Token(T_Semicolon, ';', None, line=39, col=23)
Token(T_Whitespace, '
    ', None, line=39, col=24)
Token(T_Loop, 'loop', None, line=40, col=5)
Token(T_Whitespace, ' ', None, line=40, col=9)
Token(T_LC, '{', None, line=40, col=10)
Token(T_Whitespace, '
        ', None, line=40, col=11)
Token(T_If, 'if', None, line=41, col=9)
Token(T_Whitespace, ' ', None, line=41, col=11)
Token(T_Id, 'i', None, line=41, col=12)
Token(T_Whitespace, ' ', None, line=41, col=13)
Token(T_ROp_E, '==', None, line=41, col=14)
Token(T_Whitespace, ' ', None, line=41, col=16)
Token(T_Id, 'n', None, line=41, col=17)
Token(T_Whitespace, ' ', None, line=41, col=18)
Token(T_LC, '{', None, line=41, col=19)
Token(T_Whitespace, '
            ', None, line=41, col=20)
Token(T_Break, 'break', None, line=42, col=13)
Token(T_Semicolon, ';', None, line=42, col=18)
Token(T_Whitespace, '
        ', None, line=42, col=19)
Token(T_RC, '}', None, line=43, col=9)
Token(T_Whitespace, '
        ', None, line=43, col=10)
Token(T_Let, 'let', None, line=44, col=9)
Token(T_Whitespace, ' ', None, line=44, col=12)
Token(T_Mut, 'mut', None, line=44, col=13)
Token(T_Whitespace, ' ', None, line=44, col=16)
Token(T_Id, 'j', None, line=44, col=17)
Token(T_Colon, ':', None, line=44, col=18)
Token(T_Whitespace, ' ', None, line=44, col=19)
Token(T_Int, 'i32', None, line=44, col=20)
Token(T_Whitespace, ' ', None, line=44, col=23)
Token(T_Assign, '=', None, line=44, col=24)
Token(T_Whitespace, ' ', None, line=44, col=25)
Token(T_Decimal, '0', 0, line=44, col=26)
Token(T_Semicolon, ';', None, line=44, col=27)
Token(T_Whitespace, '
        ', None, line=44, col=28)
Token(T_Loop, 'loop', None, line=45, col=9)
Token(T_Whitespace, ' ', None, line=45, col=13)
Token(T_LC, '{', None, line=45, col=14)
Token(T_Whitespace, '
            ', None, line=45, col=15)
Token(T_If, 'if', None, line=46, col=13)
Token(T_Whitespace, ' ', None, line=46, col=15)
Token(T_Id, 'j', None, line=46, col=16)
Token(T_Whitespace, ' ', None, line=46, col=17)
Token(T_ROp_E, '==', None, line=46, col=18)
Token(T_Whitespace, ' ', None, line=46, col=20)
Token(T_Id, 'n', None, line=46, col=21)
Token(T_Whitespace, ' ', None, line=46, col=22)
Token(T_LC, '{', None, line=46, col=23)
Token(T_Whitespace, '
                ', None, line=46, col=24)
Token(T_Break, 'break', None, line=47, col=17)
Token(T_Semicolon, ';', None, line=47, col=22)
Token(T_Whitespace, '
            ', None, line=47, col=23)
Token(T_RC, '}', None, line=48, col=13)
Token(T_Whitespace, '
            ', None, line=48, col=14)
Token(T_If, 'if', None, line=49, col=13)
Token(T_Whitespace, ' ', None, line=49, col=15)
Token(T_Id, 'i', None, line=49, col=16)
Token(T_Whitespace, ' ', None, line=49, col=17)
Token(T_AOp_Trust, '+', None, line=49, col=18)
Token(T_Whitespace, ' ', None, line=49, col=19)
Token(T_Id, 'j', None, line=49, col=20)
Token(T_Whitespace, ' ', None, line=49, col=21)
Token(T_ROp_E, '==', None, line=49, col=22)
Token(T_Whitespace, ' ', None, line=49, col=24)
Token(T_Id, 'target', None, line=49, col=25)
Token(T_Whitespace, ' ', None, line=49, col=31)
Token(T_LC, '{', None, line=49, col=32)
Token(T_Whitespace, '
                ', None, line=49, col=33)
Token(T_Id, 'count', None, line=50, col=17)
Token(T_Whitespace, ' ', None, line=50, col=22)
Token(T_Assign, '=', None, line=50, col=23)
Token(T_Whitespace, ' ', None, line=50, col=24)
Token(T_Id, 'count', None, line=50, col=25)
Token(T_Whitespace, ' ', None, line=50, col=30)
Token(T_AOp_Trust, '+', None, line=50, col=31)
Token(T_Whitespace, ' ', None, line=50, col=32)
Token(T_Decimal, '1', 1, line=50, col=33)
Token(T_Semicolon, ';', None, line=50, col=34)
Token(T_Whitespace, '
            ', None, line=50, col=35)
Token(T_RC, '}', None, line=51, col=13)
Token(T_Whitespace, '
            ', None, line=51, col=14)
Token(T_Id, 'j', None, line=52, col=13)
Token(T_Whitespace, ' ', None, line=52, col=14)
Token(T_Assign, '=', None, line=52, col=15)
Token(T_Whitespace, ' ', None, line=52, col=16)
Token(T_Id, 'j', None, line=52, col=17)
Token(T_Whitespace, ' ', None, line=52, col=18)
Token(T_AOp_Trust, '+', None, line=52, col=19)
Token(T_Whitespace, ' ', None, line=52, col=20)
Token(T_Decimal, '1', 1, line=52, col=21)
Token(T_Semicolon, ';', None, line=52, col=22)
Token(T_Whitespace, '
        ', None, line=52, col=23)
Token(T_RC, '}', None, line=53, col=9)
Token(T_Whitespace, '
        ', None, line=53, col=10)
Token(T_Id, 'i', None, line=54, col=9)
Token(T_Whitespace, ' ', None, line=54, col=10)
Token(T_Assign, '=', None, line=54, col=11)
Token(T_Whitespace, ' ', None, line=54, col=12)
Token(T_Id, 'i', None, line=54, col=13)
Token(T_Whitespace, ' ', None, line=54, col=14)
Token(T_AOp_Trust, '+', None, line=54, col=15)
Token(T_Whitespace, ' ', None, line=54, col=16)
Token(T_Decimal, '1', 1, line=54, col=17)
Token(T_Semicolon, ';', None, line=54, col=18)
Token(T_Whitespace, '
    ', None, line=54, col=19)
Token(T_RC, '}', None, line=55, col=5)
Token(T_Whitespace, '
    ', None, line=55, col=6)
Token(T_Return, 'return', None, line=56, col=5)
Token(T_Whitespace, ' ', None, line=56, col=11)
Token(T_Id, 'count', None, line=56, col=12)
Token(T_Semicolon, ';', None, line=56, col=17)
Token(T_Whitespace, '
', None, line=56, col=18)
Token(T_RC, '}', None, line=57, col=1)
Token(T_Whitespace, '

', None, line=57, col=2)
Token(T_Comment, '// Main entry: builds some arrays, calls the above, and prints results.
', None, line=59, col=1)
Token(T_Fn, 'fn', None, line=60, col=1)
Token(T_Whitespace, ' ', None, line=60, col=3)
Token(T_Id, 'main', None, line=60, col=4)
Token(T_LP, '(', None, line=60, col=8)
Token(T_RP, ')', None, line=60, col=9)
Token(T_Whitespace, ' ', None, line=60, col=10)
Token(T_LC, '{', None, line=60, col=11)
Token(T_Whitespace, '
    ', None, line=60, col=12)
Token(T_Let, 'let', None, line=61, col=5)
Token(T_Whitespace, ' ', None, line=61, col=8)
Token(T_Id, 'nums', None, line=61, col=9)
Token(T_Colon, ':', None, line=61, col=13)
Token(T_Whitespace, ' ', None, line=61, col=14)
Token(T_LB, '[', None, line=61, col=15)
Token(T_Int, 'i32', None, line=61, col=16)
Token(T_Semicolon, ';', None, line=61, col=19)
Token(T_Whitespace, ' ', None, line=61, col=20)
Token(T_Decimal, '5', 5, line=61, col=21)
Token(T_RB, ']', None, line=61, col=22)
Token(T_Whitespace, ' ', None, line=61, col=23)
Token(T_Assign, '=', None, line=61, col=24)
Token(T_Whitespace, ' ', None, line=61, col=25)
Token(T_LB, '[', None, line=61, col=26)
Token(T_Decimal, '3', 3, line=61, col=27)
Token(T_Comma, ',', None, line=61, col=28)
Token(T_Whitespace, ' ', None, line=61, col=29)
Token(T_Decimal, '4', 4, line=61, col=30)
Token(T_Comma, ',', None, line=61, col=31)
Token(T_Whitespace, ' ', None, line=61, col=32)
Token(T_Decimal, '7', 7, line=61, col=33)
Token(T_Comma, ',', None, line=61, col=34)
Token(T_Whitespace, ' ', None, line=61, col=35)
Token(T_Decimal, '8', 8, line=61, col=36)
Token(T_Comma, ',', None, line=61, col=37)
Token(T_Whitespace, ' ', None, line=61, col=38)
Token(T_Decimal, '10', 10, line=61, col=39)
Token(T_RB, ']', None, line=61, col=41)
Token(T_Semicolon, ';', None, line=61, col=42)
Token(T_Whitespace, '
    ', None, line=61, col=43)
Token(T_Print, 'println!', None, line=62, col=5)
Token(T_LP, '(', None, line=62, col=13)
Token(T_String, '"Array is_even flags:"', None, line=62, col=14)
Token(T_RP, ')', None, line=62, col=36)
Token(T_Semicolon, ';', None, line=62, col=37)
Token(T_Whitespace, '
    ', None, line=62, col=38)
Token(T_Let, 'let', None, line=63, col=5)
Token(T_Whitespace, ' ', None, line=63, col=8)
Token(T_Mut, 'mut', None, line=63, col=9)
Token(T_Whitespace, ' ', None, line=63, col=12)
Token(T_Id, 'k', None, line=63, col=13)
Token(T_Colon, ':', None, line=63, col=14)
Token(T_Whitespace, ' ', None, line=63, col=15)
Token(T_Int, 'i32', None, line=63, col=16)
Token(T_Whitespace, ' ', None, line=63, col=19)
Token(T_Assign, '=', None, line=63, col=20)
Token(T_Whitespace, ' ', None, line=63, col=21)
Token(T_Decimal, '0', 0, line=63, col=22)
Token(T_Semicolon, ';', None, line=63, col=23)
Token(T_Whitespace, '
    ', None, line=63, col=24)
Token(T_Loop, 'loop', None, line=64, col=5)
Token(T_Whitespace, ' ', None, line=64, col=9)
Token(T_LC, '{', None, line=64, col=10)
Token(T_Whitespace, '
        ', None, line=64, col=11)
Token(T_If, 'if', None, line=65, col=9)
Token(T_Whitespace, ' ', None, line=65, col=11)
Token(T_Id, 'k', None, line=65, col=12)
Token(T_Whitespace, ' ', None, line=65, col=13)
Token(T_ROp_E, '==', None, line=65, col=14)
Token(T_Whitespace, ' ', None, line=65, col=16)
Token(T_Decimal, '5', 5, line=65, col=17)
Token(T_Whitespace, ' ', None, line=65, col=18)
Token(T_LC, '{', None, line=65, col=19)
Token(T_Whitespace, ' ', None, line=65, col=20)
Token(T_Break, 'break', None, line=65, col=21)
Token(T_Semicolon, ';', None, line=65, col=26)
Token(T_Whitespace, ' ', None, line=65, col=27)
Token(T_RC, '}', None, line=65, col=28)
Token(T_Whitespace, '
        ', None, line=65, col=29)
Token(T_Print, 'println!', None, line=66, col=9)
Token(T_LP, '(', None, line=66, col=17)
Token(T_String, '"  {} → {}"', None, line=66, col=18)
Token(T_Comma, ',', None, line=66, col=29)
Token(T_Whitespace, ' ', None, line=66, col=30)
Token(T_Id, 'nums', None, line=66, col=31)
Token(T_LB, '[', None, line=66, col=35)
Token(T_Id, 'k', None, line=66, col=36)
Token(T_RB, ']', None, line=66, col=37)
Token(T_Comma, ',', None, line=66, col=38)
Token(T_Whitespace, ' ', None, line=66, col=39)
Token(T_Id, 'is_even', None, line=66, col=40)
Token(T_LP, '(', None, line=66, col=47)
Token(T_Id, 'nums', None, line=66, col=48)
Token(T_LB, '[', None, line=66, col=52)
Token(T_Id, 'k', None, line=66, col=53)
Token(T_RB, ']', None, line=66, col=54)
Token(T_RP, ')', None, line=66, col=55)
Token(T_RP, ')', None, line=66, col=56)
Token(T_Semicolon, ';', None, line=66, col=57)
Token(T_Whitespace, '
        ', None, line=66, col=58)
Token(T_Id, 'k', None, line=67, col=9)
Token(T_Whitespace, ' ', None, line=67, col=10)
Token(T_Assign, '=', None, line=67, col=11)
Token(T_Whitespace, ' ', None, line=67, col=12)
Token(T_Id, 'k', None, line=67, col=13)
Token(T_Whitespace, ' ', None, line=67, col=14)
Token(T_AOp_Trust, '+', None, line=67, col=15)
Token(T_Whitespace, ' ', None, line=67, col=16)
Token(T_Decimal, '1', 1, line=67, col=17)
Token(T_Semicolon, ';', None, line=67, col=18)
Token(T_Whitespace, '
    ', None, line=67, col=19)
Token(T_RC, '}', None, line=68, col=5)
Token(T_Whitespace, '

    ', None, line=68, col=6)
Token(T_Let, 'let', None, line=70, col=5)
Token(T_Whitespace, ' ', None, line=70, col=8)
Token(T_Id, 'total', None, line=70, col=9)
Token(T_Whitespace, ' ', None, line=70, col=14)
Token(T_Assign, '=', None, line=70, col=15)
Token(T_Whitespace, ' ', None, line=70, col=16)
Token(T_Id, 'sum_array', None, line=70, col=17)
Token(T_LP, '(', None, line=70, col=26)
Token(T_Id, 'nums', None, line=70, col=27)
Token(T_RP, ')', None, line=70, col=31)
Token(T_Semicolon, ';', None, line=70, col=32)
Token(T_Whitespace, '
    ', None, line=70, col=33)
Token(T_Print, 'println!', None, line=71, col=5)
Token(T_LP, '(', None, line=71, col=13)
Token(T_String, '"Sum of array = {}"', None, line=71, col=14)
Token(T_Comma, ',', None, line=71, col=33)
Token(T_Whitespace, ' ', None, line=71, col=34)
Token(T_Id, 'total', None, line=71, col=35)
Token(T_RP, ')', None, line=71, col=40)
Token(T_Semicolon, ';', None, line=71, col=41)
Token(T_Whitespace, '

    ', None, line=71, col=42)
Token(T_Let, 'let', None, line=73, col=5)
Token(T_Whitespace, ' ', None, line=73, col=8)
Token(T_Id, 'idx', None, line=73, col=9)
Token(T_Whitespace, ' ', None, line=73, col=12)
Token(T_Assign, '=', None, line=73, col=13)
Token(T_Whitespace, ' ', None, line=73, col=14)
Token(T_Id, 'find_first_even', None, line=73, col=15)
Token(T_LP, '(', None, line=73, col=30)
Token(T_Id, 'nums', None, line=73, col=31)
Token(T_RP, ')', None, line=73, col=35)
Token(T_Semicolon, ';', None, line=73, col=36)
Token(T_Whitespace, '
    ', None, line=73, col=37)
Token(T_If, 'if', None, line=74, col=5)
Token(T_Whitespace, ' ', None, line=74, col=7)
Token(T_Id, 'idx', None, line=74, col=8)
Token(T_Whitespace, ' ', None, line=74, col=11)
Token(T_ROp_GE, '>=', None, line=74, col=12)
Token(T_Whitespace, ' ', None, line=74, col=14)
Token(T_Decimal, '0', 0, line=74, col=15)
Token(T_Whitespace, ' ', None, line=74, col=16)
Token(T_LC, '{', None, line=74, col=17)
Token(T_Whitespace, '
        ', None, line=74, col=18)
Token(T_Print, 'println!', None, line=75, col=9)
Token(T_LP, '(', None, line=75, col=17)
Token(T_String, '"First even at index {} (value {})"', None, line=75, col=18)
Token(T_Comma, ',', None, line=75, col=53)
Token(T_Whitespace, ' ', None, line=75, col=54)
Token(T_Id, 'idx', None, line=75, col=55)
Token(T_Comma, ',', None, line=75, col=58)
Token(T_Whitespace, ' ', None, line=75, col=59)
Token(T_Id, 'nums', None, line=75, col=60)
Token(T_LB, '[', None, line=75, col=64)
Token(T_Id, 'idx', None, line=75, col=65)
Token(T_RB, ']', None, line=75, col=68)
Token(T_RP, ')', None, line=75, col=69)
Token(T_Semicolon, ';', None, line=75, col=70)
Token(T_Whitespace, '
    ', None, line=75, col=71)
Token(T_RC, '}', None, line=76, col=5)
Token(T_Whitespace, ' ', None, line=76, col=6)
Token(T_Else, 'else', None, line=76, col=7)
Token(T_Whitespace, ' ', None, line=76, col=11)
Token(T_LC, '{', None, line=76, col=12)
Token(T_Whitespace, '
        ', None, line=76, col=13)
Token(T_Print, 'println!', None, line=77, col=9)
Token(T_LP, '(', None, line=77, col=17)
Token(T_String, '"No even numbers found"', None, line=77, col=18)
Token(T_RP, ')', None, line=77, col=41)
Token(T_Semicolon, ';', None, line=77, col=42)
Token(T_Whitespace, '
    ', None, line=77, col=43)
Token(T_RC, '}', None, line=78, col=5)
Token(T_Whitespace, '

    ', None, line=78, col=6)
Token(T_Let, 'let', None, line=80, col=5)
Token(T_Whitespace, ' ', None, line=80, col=8)
Token(T_Id, 'pairs', None, line=80, col=9)
Token(T_Whitespace, ' ', None, line=80, col=14)
Token(T_Assign, '=', None, line=80, col=15)
Token(T_Whitespace, ' ', None, line=80, col=16)
Token(T_Id, 'count_pairs', None, line=80, col=17)
Token(T_LP, '(', None, line=80, col=28)
Token(T_Decimal, '5', 5, line=80, col=29)
Token(T_Comma, ',', None, line=80, col=30)
Token(T_Whitespace, ' ', None, line=80, col=31)
Token(T_Decimal, '7', 7, line=80, col=32)
Token(T_RP, ')', None, line=80, col=33)
Token(T_Semicolon, ';', None, line=80, col=34)
Token(T_Whitespace, '
    ', None, line=80, col=35)
Token(T_Print, 'println!', None, line=81, col=5)
Token(T_LP, '(', None, line=81, col=13)
Token(T_String, '"Number of (i,j) in [0..5)² summing to 7 = {}"', None, line=81, col=14)
Token(T_Comma, ',', None, line=81, col=60)
Token(T_Whitespace, ' ', None, line=81, col=61)
Token(T_Id, 'pairs', None, line=81, col=62)
Token(T_RP, ')', None, line=81, col=67)
Token(T_Semicolon, ';', None, line=81, col=68)
Token(T_Whitespace, '
', None, line=81, col=69)
Token(T_RC, '}', None, line=82, col=1)
Token(T_Whitespace, '
', None, line=82, col=2)
Token(T_EOF, '', None, line=83, col=1)

Symbol Table:
is_even: [(2, 4), (28, 12), (66, 40)]
x: [(2, 12), (3, 13)]
sum_array: [(7, 4), (70, 17)]
a: [(7, 14), (14, 25), (21, 20), (28, 20)]
total: [(8, 13), (14, 9), (14, 17), (17, 12), (70, 9), (71, 35)]
i: [(9, 13), (11, 12), (14, 27), (15, 9), (15, 13), (22, 13), (24, 12), (28, 22), (29, 20), (31, 9), (31, 13), (39, 13), (41, 12), (49, 16), (54, 9), (54, 13)]
find_first_even: [(21, 4), (73, 15)]
count_pairs: [(37, 4), (80, 17)]
n: [(37, 16), (41, 17), (46, 21)]
target: [(37, 24), (49, 25)]
count: [(38, 13), (50, 17), (50, 25), (56, 12)]
j: [(44, 17), (46, 16), (49, 20), (52, 13), (52, 17)]
main: [(60, 4)]
nums: [(61, 9), (66, 31), (66, 48), (70, 27), (73, 31), (75, 60)]
k: [(63, 13), (65, 12), (66, 36), (66, 53), (67, 9), (67, 13)]
idx: [(73, 9), (74, 8), (75, 55), (75, 65)]
pairs: [(80, 9), (81, 62)]

// ──────────────────────────────────────────────────────────────────────────────
// Final Trust Test Program (no return errors, no bad '!')
// ──────────────────────────────────────────────────────────────────────────────

// Globals
let mut counter: i32 = 0;
let limit: i32     = 5;
let flags: [bool; 3]    = [true, false, true];
let message: [i32; 4]   = [10, 20, 30, 40];

// factorial returns i32
fn factorial(n: i32) -> i32 {
    if n <= 1 {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

// sum_and_diff now returns i32
fn sum_and_diff(a: i32, b: i32) -> i32 {
    let sum: i32 = a + b;

    // compute absolute difference
    let mut diff: i32;
    if a >= b {
        diff = a - b;
    } else {
        diff = b - a;
    }

    return sum + diff;
}

// swap returns a tuple of two i32s
fn swap(x: i32, y: i32) -> (i32, i32) {
    return (y, x);
}

fn main() {
    // Print initial state
    println!("Initial counter = {}", counter);
    println!("limit = {}",      limit);
    println!(
        "flags = {}, {}, {}",
        flags[1], flags[1], flags[2]
    );
    println!(
        "message = {}, {}, {}, {}",
        message[1], message[1], message[2], message[3]
    );

    // Loop until counter >= limit
    loop {
        if counter >= limit {
            break;
        }
        counter = counter + 1;
        println!("Counter now = {}", counter);
    }

    // Compute 5!
    let fact5: i32 = factorial(5);
    println!("5! = {}", fact5);

    // sum_and_diff
    let s: i32 = sum_and_diff(7, 3);
    println!("sum+diff of (7,3) = {}", s);

    // swap demonstration
    let (new_a, new_b): (i32, i32) = swap(8, 42);
    println!("after swap: a = {}, b = {}", new_a, new_b);

    // tuple destructuring
    let pair: (i32, i32) = (100, 200);
    let (p, q) = pair;
    println!("pair p = {}, q = {}", p, q);

    // another tuple
    let triple: (i32, bool, i32) = (5, false, 6);
    let (t1, t_flag, t2) = triple;
    println!(
        "triple: t1 = {}, flag = {}, t2 = {}",
        t1, t_flag, t2
    );

    println!("All tests passed.");
}

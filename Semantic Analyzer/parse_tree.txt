└── Program
    └── FunctionDecl
        ├── FnKw: 'fn'
        ├── Id: 'main'
        ├── Params
        └── Body
            └── Block
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'i'
                │   ├── Colon: ':'
                │   ├── Type
                │   ├── Assign: '='
                │   └── Expr
                │       └── Number: '5'
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'b'
                │   ├── Colon: ':'
                │   ├── Type
                │   ├── Assign: '='
                │   └── Expr
                │       └── BoolLiteral: 'false'
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'l1'
                │   ├── Assign: '='
                │   └── Expr
                │       └── BinaryOp
                │           ├── Id: 'i'
                │           └── Id: 'b'
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'l2'
                │   ├── Assign: '='
                │   └── Expr
                │       └── UnaryOp
                │           └── Id: 'i'
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'a1'
                │   ├── Assign: '='
                │   └── Expr
                │       └── BinaryOp
                │           ├── Id: 'b'
                │           └── Number: '10'
                ├── LetDecl
                │   ├── LetKw: 'let'
                │   ├── Pattern
                │   │   └── VarPattern: 'a2'
                │   ├── Assign: '='
                │   └── Expr
                │       └── BinaryOp
                │           ├── Id: 'b'
                │           └── Id: 'i'
                └── PrintStmt
                    ├── PrintKw: 'println!'
                    ├── FormatStr: '"l1 = {l1}, l2 = {l2}, a1 = {a1}, a2 = {a2}"'
                    ├── NamedArg
                    │   └── Value
                    │       └── Expr
                    │           └── Id: 'l1'
                    ├── NamedArg
                    │   └── Value
                    │       └── Expr
                    │           └── Id: 'l2'
                    ├── NamedArg
                    │   └── Value
                    │       └── Expr
                    │           └── Id: 'a1'
                    └── NamedArg
                        └── Value
                            └── Expr
                                └── Id: 'a2'